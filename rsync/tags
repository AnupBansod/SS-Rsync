!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	lib/mdigest.h	/^	uint32 A, B, C, D;$/;"	m	struct:__anon8
ABORT_ALL	lib/wildmatch.c	20;"	d	file:
ABORT_TO_STARSTAR	lib/wildmatch.c	21;"	d	file:
ACCESSPERMS	rsync.h	1087;"	d
ACCESS_CONTROL_LIST	mongoose.c	/^  GLOBAL_PASSWORDS_FILE, INDEX_FILES, ENABLE_KEEP_ALIVE, ACCESS_CONTROL_LIST,$/;"	e	enum:__anon3	file:
ACCESS_LOG_FILE	mongoose.c	/^  ACCESS_LOG_FILE, ENABLE_DIRECTORY_LISTING, ERROR_LOG_FILE,$/;"	e	enum:__anon3	file:
ACLS_NEED_MASK	rsync.h	673;"	d
ACL_BUMP	rsync.h	728;"	d
ACL_READY	rsync.h	1000;"	d
ACTUAL_SIZE	rounding.c	30;"	d	file:
ADDRINFO_H	lib/addrinfo.h	48;"	d
AI_CANONNAME	lib/addrinfo.h	83;"	d
AI_CANONNAME	lib/addrinfo.h	85;"	d
AI_NUMERICHOST	lib/addrinfo.h	75;"	d
AI_NUMERICHOST	lib/addrinfo.h	77;"	d
AI_NUMERICSERV	lib/addrinfo.h	91;"	d
AI_NUMERICSERV	lib/addrinfo.h	93;"	d
AI_PASSIVE	lib/addrinfo.h	66;"	d
ALL_FILTERS	rsync.h	158;"	d
ARRAY_LEN	rounding.c	22;"	d	file:
ARRAY_SIZE	mongoose.c	262;"	d	file:
ATTRS_REPORT	rsync.h	166;"	d
ATTRS_SKIP_MTIME	rsync.h	167;"	d
AUTHENTICATION_DOMAIN	mongoose.c	/^  PROTECT_URI, AUTHENTICATION_DOMAIN, SSI_EXTENSIONS, THROTTLE,$/;"	e	enum:__anon3	file:
AVAIL_OUT_SIZE	token.c	277;"	d	file:
AVOID_BYTEORDER_INLINE	byteorder.h	22;"	d
Assert	zlib/zutil.h	248;"	d
Assert	zlib/zutil.h	255;"	d
B	lib/mdigest.h	/^	uint32 A, B, C, D;$/;"	m	struct:__anon8
BACKUP_SUFFIX	rsync.h	38;"	d
BAD	zlib/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anon9
BAD	zlib/inflate.h	20;"	d
BASE	zlib/adler32.c	11;"	d	file:
BB_PER_SLOT_BITS	util.c	1513;"	d	file:
BB_PER_SLOT_INTS	util.c	1514;"	d	file:
BB_SLOT_SIZE	util.c	1512;"	d	file:
BIGPATHBUFLEN	rsync.h	655;"	d
BIGPATHBUFLEN	rsync.h	657;"	d
BIG_SUM2HASH	match.c	51;"	d	file:
BITS	zlib/inflate.c	450;"	d	file:
BITS_EQUAL	rsync.h	97;"	d
BITS_SET	rsync.h	95;"	d
BITS_SETnUNSET	rsync.h	96;"	d
BLOCKSUM_BIAS	rsync.h	646;"	d
BLOCK_SIZE	rsync.h	24;"	d
BL_CODES	zlib/deflate.h	42;"	d
BOOL	rsync.h	496;"	d
BOOLSTR	loadparm.c	50;"	d	file:
BUFR_INC	params.c	84;"	d	file:
BUFSZ	lib/snprintf.c	1422;"	d	file:
BUILDFIXED	zlib/inflate.c	90;"	d	file:
BUSY_STATE	zlib/deflate.h	56;"	d
BYFOUR	zlib/crc32.c	37;"	d	file:
BYFOUR	zlib/crc32.c	47;"	d	file:
BYTEBITS	zlib/inflate.c	461;"	d	file:
Buf_size	zlib/trees.c	76;"	d	file:
Byte	zlib/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	zlib/zconf.h	50;"	d
Bytef	zlib/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	zlib/zconf.h	268;"	d
Bytef	zlib/zconf.h	53;"	d
C	lib/mdigest.h	/^	uint32 A, B, C, D;$/;"	m	struct:__anon8
CALL_OR_ERROR	acls.c	356;"	d	file:
CAN_CHMOD_SYMLINK	rsync.h	383;"	d
CAN_CHOWN_SYMLINK	rsync.h	379;"	d
CAN_HARDLINK_SPECIAL	config.h	8;"	d
CAN_HARDLINK_SYMLINK	config.h	11;"	d
CAN_SET_SYMLINK_TIMES	rsync.h	375;"	d
CAREFUL_ALIGNMENT	byteorder.h	21;"	d
CAREFUL_ALIGNMENT	byteorder.h	27;"	d
CAREFUL_ALIGNMENT	byteorder.h	31;"	d
CASE_N_STATE_0	case_N.h	24;"	d
CC	Makefile	/^CC=gcc -std=gnu99$/;"	m
CC_EQ	lib/wildmatch.c	23;"	d	file:
CD_NORMAL	rsync.h	215;"	d
CD_SKIP_CHDIR	rsync.h	216;"	d
CFLAGS	Makefile	/^CFLAGS=-g -O2 -DHAVE_CONFIG_H -Wall -W -I.\/popt -I.\/zlib -pthread$/;"	m
CFN_COLLAPSE_DOT_DOT_DIRS	rsync.h	210;"	d
CFN_DROP_TRAILING_DOT_DIR	rsync.h	209;"	d
CFN_KEEP_DOT_DIRS	rsync.h	207;"	d
CFN_KEEP_TRAILING_SLASH	rsync.h	208;"	d
CF_INC_RECURSE	compat.c	75;"	d	file:
CF_SAFE_FLIST	compat.c	78;"	d	file:
CF_SYMLINK_ICONV	compat.c	77;"	d	file:
CF_SYMLINK_TIMES	compat.c	76;"	d	file:
CGI_ENVIRONMENT	mongoose.c	/^  CGI_EXTENSIONS, CGI_ENVIRONMENT, PUT_DELETE_PASSWORDS_FILE, CGI_INTERPRETER,$/;"	e	enum:__anon3	file:
CGI_ENVIRONMENT_SIZE	mongoose.c	258;"	d	file:
CGI_EXTENSIONS	mongoose.c	/^  CGI_EXTENSIONS, CGI_ENVIRONMENT, PUT_DELETE_PASSWORDS_FILE, CGI_INTERPRETER,$/;"	e	enum:__anon3	file:
CGI_INTERPRETER	mongoose.c	/^  CGI_EXTENSIONS, CGI_ENVIRONMENT, PUT_DELETE_PASSWORDS_FILE, CGI_INTERPRETER,$/;"	e	enum:__anon3	file:
CHAR_OFFSET	rsync.h	42;"	d
CHECK	zlib/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anon9
CHECK_OBJS	Makefile	/^CHECK_OBJS=tls.o testrun.o getgroups.o getfsdev.o t_stub.o t_unsafe.o trimslash.o wildtest.o$/;"	m
CHECK_PROGS	Makefile	/^CHECK_PROGS = rsync$(EXEEXT) tls$(EXEEXT) getgroups$(EXEEXT) getfsdev$(EXEEXT) \\$/;"	m
CHECK_SYMLINKS	Makefile	/^CHECK_SYMLINKS = testsuite\/chown-fake.test testsuite\/devices-fake.test testsuite\/xattrs-hlink.test$/;"	m
CHMOD_ADD	chmod.c	36;"	d	file:
CHMOD_BITS	rsync.h	1094;"	d
CHMOD_EQ	chmod.c	38;"	d	file:
CHMOD_SET	chmod.c	39;"	d	file:
CHMOD_SUB	chmod.c	37;"	d	file:
CHUNK_SIZE	rsync.h	136;"	d
CLEAR_HASH	zlib/deflate.c	201;"	d	file:
CNK_CHAR	lib/snprintf.c	216;"	d	file:
CNK_FLOAT	lib/snprintf.c	215;"	d	file:
CNK_FMT_STR	lib/snprintf.c	210;"	d	file:
CNK_HEX	lib/snprintf.c	214;"	d	file:
CNK_INT	lib/snprintf.c	211;"	d	file:
CNK_NUM	lib/snprintf.c	219;"	d	file:
CNK_OCTAL	lib/snprintf.c	212;"	d	file:
CNK_PRCNT	lib/snprintf.c	220;"	d	file:
CNK_PTR	lib/snprintf.c	218;"	d	file:
CNK_STRING	lib/snprintf.c	217;"	d	file:
CNK_UINT	lib/snprintf.c	213;"	d	file:
CODELENS	zlib/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anon9
CODES	zlib/inftrees.h	/^    CODES,$/;"	e	enum:__anon14
COE	acls.c	364;"	d	file:
COE2	acls.c	365;"	d	file:
COMMENT	zlib/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anon9
COMMENT_STATE	zlib/deflate.h	54;"	d
CONFIG_LOCALE	config.h	17;"	d
COPY	zlib/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anon9
COUNT_DEBUG	rsync.h	1275;"	d
COUNT_INFO	rsync.h	1249;"	d
CPPFLAGS	Makefile	/^CPPFLAGS=$/;"	m
CRC2	zlib/inflate.c	385;"	d	file:
CRC4	zlib/inflate.c	392;"	d	file:
CRYPTO_LIB	mongoose.c	118;"	d	file:
CRYPTO_LIB	mongoose.c	225;"	d	file:
CRYPTO_LIB	mongoose.c	231;"	d	file:
CRYPTO_num_locks	mongoose.c	350;"	d	file:
CRYPTO_set_id_callback	mongoose.c	353;"	d	file:
CRYPTO_set_locking_callback	mongoose.c	351;"	d	file:
CSUM_CHUNK	lib/mdigest.h	7;"	d
CVAL	byteorder.h	34;"	d
Checksum searching	tech_report.tex	/^the weak checksum matches.$/;"	s
Code	zlib/deflate.h	74;"	d
Continuation	params.c	/^static int Continuation( char *line, int pos )$/;"	f	file:
D	lib/mdigest.h	/^	uint32 A, B, C, D;$/;"	m	struct:__anon8
DAEMON_OBJ	Makefile	/^DAEMON_OBJ = params.o loadparm.o clientserver.o access.o connection.o authenticate.o$/;"	m
DBL_EPSILON	popt/popt.c	22;"	d	file:
DEBUG	lib/sysacls.c	30;"	d	file:
DEBUG	lib/sysacls.c	32;"	d	file:
DEBUG_ACL	rsync.h	1251;"	d
DEBUG_BACKUP	rsync.h	1252;"	d
DEBUG_BIND	rsync.h	1253;"	d
DEBUG_CHDIR	rsync.h	1254;"	d
DEBUG_CMD	rsync.h	1256;"	d
DEBUG_CONNECT	rsync.h	1255;"	d
DEBUG_DEL	rsync.h	1257;"	d
DEBUG_DELTASUM	rsync.h	1258;"	d
DEBUG_DUP	rsync.h	1259;"	d
DEBUG_EQ	rsync.h	1234;"	d
DEBUG_EXIT	rsync.h	1260;"	d
DEBUG_FILTER	rsync.h	1261;"	d
DEBUG_FLIST	rsync.h	1262;"	d
DEBUG_FUZZY	rsync.h	1263;"	d
DEBUG_GENR	rsync.h	1264;"	d
DEBUG_GTE	rsync.h	1233;"	d
DEBUG_HASH	rsync.h	1265;"	d
DEBUG_HLINK	rsync.h	1266;"	d
DEBUG_ICONV	rsync.h	1267;"	d
DEBUG_IO	rsync.h	1268;"	d
DEBUG_OWN	rsync.h	1269;"	d
DEBUG_PROTO	rsync.h	1270;"	d
DEBUG_RECV	rsync.h	1271;"	d
DEBUG_SEND	rsync.h	1272;"	d
DEBUG_TIME	rsync.h	1273;"	d
DEBUG_TRACE	mongoose.c	272;"	d	file:
DEBUG_TRACE	mongoose.c	273;"	d	file:
DEBUG_TRACE	mongoose.c	276;"	d	file:
DEBUG_TRACE	mongoose.c	287;"	d	file:
DEBUG_WORD	options.c	265;"	d	file:
DEFAULT_DONT_COMPRESS	loadparm.c	56;"	d	file:
DEFAULT_LOCK_FILE	rsync.h	32;"	d
DEFAULT_PRIORITY	options.c	228;"	d	file:
DEFAULT_TIMEOUT_SECS	testrun.c	5;"	d	file:
DEFLATED_DATA	token.c	267;"	d	file:
DEFLATE_H	zlib/deflate.h	14;"	d
DEF_MEM_LEVEL	zlib/zutil.h	73;"	d
DEF_MEM_LEVEL	zlib/zutil.h	75;"	d
DEF_WBITS	zlib/zutil.h	68;"	d
DEL_DIR_IS_EMPTY	rsync.h	257;"	d
DEL_FOR_BACKUP	rsync.h	263;"	d
DEL_FOR_DEVICE	rsync.h	261;"	d
DEL_FOR_DIR	rsync.h	259;"	d
DEL_FOR_FILE	rsync.h	258;"	d
DEL_FOR_SPECIAL	rsync.h	262;"	d
DEL_FOR_SYMLINK	rsync.h	260;"	d
DEL_MAKE_ROOM	rsync.h	265;"	d
DEL_NO_UID_WRITE	rsync.h	255;"	d
DEL_RECURSE	rsync.h	256;"	d
DEV_EXTRA_CNT	rsync.h	717;"	d
DEV_MAJOR	rsync.h	782;"	d
DEV_MINOR	rsync.h	783;"	d
DICT	zlib/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anon9
DICTID	zlib/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anon9
DIR	mongoose.c	/^typedef struct DIR {$/;"	s	file:
DIR	mongoose.c	/^} DIR;$/;"	t	typeref:struct:DIR	file:
DIRNODE_EXTRA_CNT	rsync.h	718;"	d
DIR_FIRST_CHILD	rsync.h	787;"	d
DIR_NEXT_SIBLING	rsync.h	788;"	d
DIR_PARENT	rsync.h	786;"	d
DIST	zlib/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anon9
DISTEXT	zlib/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anon9
DISTS	zlib/inftrees.h	/^    DISTS$/;"	e	enum:__anon14
DIST_CODE_LEN	zlib/trees.c	85;"	d	file:
DO1	zlib/adler32.c	15;"	d	file:
DO1	zlib/crc32.c	215;"	d	file:
DO16	zlib/adler32.c	19;"	d	file:
DO2	zlib/adler32.c	16;"	d	file:
DO4	zlib/adler32.c	17;"	d	file:
DO8	zlib/adler32.c	18;"	d	file:
DO8	zlib/crc32.c	216;"	d	file:
DOBIG32	zlib/crc32.c	299;"	d	file:
DOBIG4	zlib/crc32.c	296;"	d	file:
DOCUMENT_ROOT	mongoose.c	/^  EXTRA_MIME_TYPES, LISTENING_PORTS, DOCUMENT_ROOT, SSL_CERTIFICATE,$/;"	e	enum:__anon3	file:
DOLIT32	zlib/crc32.c	259;"	d	file:
DOLIT4	zlib/crc32.c	256;"	d	file:
DONE	zlib/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anon9
DOTDIR_NAME	flist.c	104;"	d	file:
DO_FALLOC_OPTIONS	syscall.c	429;"	d	file:
DP_C_CHAR	lib/snprintf.c	202;"	d	file:
DP_C_LDOUBLE	lib/snprintf.c	205;"	d	file:
DP_C_LLONG	lib/snprintf.c	206;"	d	file:
DP_C_LONG	lib/snprintf.c	204;"	d	file:
DP_C_SHORT	lib/snprintf.c	203;"	d	file:
DP_C_SIZET	lib/snprintf.c	207;"	d	file:
DP_F_MINUS	lib/snprintf.c	193;"	d	file:
DP_F_NUM	lib/snprintf.c	196;"	d	file:
DP_F_PLUS	lib/snprintf.c	194;"	d	file:
DP_F_SPACE	lib/snprintf.c	195;"	d	file:
DP_F_UNSIGNED	lib/snprintf.c	199;"	d	file:
DP_F_UP	lib/snprintf.c	198;"	d	file:
DP_F_ZERO	lib/snprintf.c	197;"	d	file:
DP_S_CONV	lib/snprintf.c	189;"	d	file:
DP_S_DEFAULT	lib/snprintf.c	183;"	d	file:
DP_S_DONE	lib/snprintf.c	190;"	d	file:
DP_S_DOT	lib/snprintf.c	186;"	d	file:
DP_S_FLAGS	lib/snprintf.c	184;"	d	file:
DP_S_MAX	lib/snprintf.c	187;"	d	file:
DP_S_MIN	lib/snprintf.c	185;"	d	file:
DP_S_MOD	lib/snprintf.c	188;"	d	file:
DROPBITS	zlib/inflate.c	454;"	d	file:
DR_AT_LIMIT	rsync.h	/^	DR_SUCCESS = 0, DR_FAILURE, DR_AT_LIMIT, DR_NOT_EMPTY$/;"	e	enum:delret
DR_FAILURE	rsync.h	/^	DR_SUCCESS = 0, DR_FAILURE, DR_AT_LIMIT, DR_NOT_EMPTY$/;"	e	enum:delret
DR_NOT_EMPTY	rsync.h	/^	DR_SUCCESS = 0, DR_FAILURE, DR_AT_LIMIT, DR_NOT_EMPTY$/;"	e	enum:delret
DR_SUCCESS	rsync.h	/^	DR_SUCCESS = 0, DR_FAILURE, DR_AT_LIMIT, DR_NOT_EMPTY$/;"	e	enum:delret
DYNAMIC_CRC_TABLE	zlib/crc32.c	25;"	d	file:
DYN_TREES	zlib/zutil.h	81;"	d
D_	popt/poptint.h	113;"	d
D_	popt/poptint.h	116;"	d
D_CODES	zlib/deflate.h	39;"	d
Dad	zlib/deflate.h	75;"	d
Defaults	loadparm.c	/^static const all_vars Defaults = {$/;"	v	file:
EAI_AGAIN	lib/addrinfo.h	56;"	d
EAI_BADFLAGS	lib/addrinfo.h	54;"	d
EAI_FAIL	lib/addrinfo.h	57;"	d
EAI_FAMILY	lib/addrinfo.h	58;"	d
EAI_MEMORY	lib/addrinfo.h	61;"	d
EAI_NONAME	lib/addrinfo.h	55;"	d
EAI_SERVICE	lib/addrinfo.h	60;"	d
EAI_SOCKTYPE	lib/addrinfo.h	59;"	d
EAI_SYSTEM	lib/addrinfo.h	62;"	d
EARLY_DELAY_DONE_MSG	generator.c	123;"	d	file:
EARLY_DELETE_DONE_MSG	generator.c	124;"	d	file:
EMPTY_ITEM_LIST	rsync.h	923;"	d
EMPTY_XBUF	rsync.h	934;"	d
ENABLE_DIRECTORY_LISTING	mongoose.c	/^  ACCESS_LOG_FILE, ENABLE_DIRECTORY_LISTING, ERROR_LOG_FILE,$/;"	e	enum:__anon3	file:
ENABLE_KEEP_ALIVE	mongoose.c	/^  GLOBAL_PASSWORDS_FILE, INDEX_FILES, ENABLE_KEEP_ALIVE, ACCESS_CONTROL_LIST,$/;"	e	enum:__anon3	file:
END_BLOCK	zlib/trees.c	49;"	d	file:
END_FLAG	token.c	264;"	d	file:
ENOATTR	lib/sysxattrs.h	13;"	d
ENODATA	fileio.c	26;"	d	file:
ENOUGH	zlib/inftrees.h	43;"	d
ENSURE_MEMSPACE	util.c	585;"	d	file:
EPOCH_DIFF	mongoose.c	96;"	d	file:
EQUAL	zlib/deflate.c	159;"	d	file:
ERRNO	mongoose.c	115;"	d	file:
ERRNO	mongoose.c	241;"	d	file:
ERROR_LOG_FILE	mongoose.c	/^  ACCESS_LOG_FILE, ENABLE_DIRECTORY_LISTING, ERROR_LOG_FILE,$/;"	e	enum:__anon3	file:
ERR_MSG	zlib/zutil.h	59;"	d
ERR_RETURN	zlib/zutil.h	61;"	d
ERR_error_string	mongoose.c	356;"	d	file:
ERR_get_error	mongoose.c	355;"	d	file:
EWOULDBLOCK	mongoose.c	121;"	d	file:
EWOULDBLOCK	rsync.h	1063;"	d
EXEEXT	Makefile	/^EXEEXT=$/;"	m
EXLEN	zlib/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anon9
EXPAND_ITEM_LIST	rsync.h	931;"	d
EXPECTED_SIZE	rounding.c	31;"	d	file:
EXTRA	zlib/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anon9
EXTRA_LEN	rsync.h	715;"	d
EXTRA_MIME_TYPES	mongoose.c	/^  EXTRA_MIME_TYPES, LISTENING_PORTS, DOCUMENT_ROOT, SSL_CERTIFICATE,$/;"	e	enum:__anon3	file:
EXTRA_ROUNDING	rounding.h	1;"	d
EXTRA_STATE	zlib/deflate.h	52;"	d
EatComment	params.c	/^static int EatComment( FILE *InFile )$/;"	f	file:
EatWhitespace	params.c	/^static int EatWhitespace( FILE *InFile )$/;"	f	file:
F	lib/md5.c	101;"	d	file:
F	lib/md5.c	102;"	d	file:
F	lib/md5.c	121;"	d	file:
F	lib/md5.c	122;"	d	file:
F	lib/md5.c	141;"	d	file:
F	lib/md5.c	62;"	d	file:
F	lib/md5.c	81;"	d	file:
F	lib/md5.c	82;"	d	file:
F	lib/mdfour.c	33;"	d	file:
F1	mongoose.c	2036;"	d	file:
F2	mongoose.c	2037;"	d	file:
F3	mongoose.c	2038;"	d	file:
F4	mongoose.c	2039;"	d	file:
FALSE	lib/wildmatch.c	18;"	d	file:
FAR	zlib/zconf.h	185;"	d
FAR	zlib/zconf.h	187;"	d
FAR	zlib/zconf.h	194;"	d
FAR	zlib/zconf.h	196;"	d
FAR	zlib/zconf.h	220;"	d
FAR	zlib/zconf.h	257;"	d
FAR	zlib/zconf.h	311;"	d
FCLIENT	rsync.h	/^    FCLIENT=7 \/* never transmitted (e.g. server converts to FINFO) *\/$/;"	e	enum:logcode
FDEXTSTAT	lib/pool_alloc.c	335;"	d	file:
FDPRINT	lib/pool_alloc.c	328;"	d	file:
FD_ZERO	rsync.h	1225;"	d
FD_ZERO	rsync.h	1226;"	d
FERROR	rsync.h	/^    FERROR=3, FWARNING=4, \/* sent over socket for protocols >= 30 *\/$/;"	e	enum:logcode
FERROR_SOCKET	rsync.h	/^    FERROR_SOCKET=5, FLOG=6, \/* only sent via receiver -> generator pipe *\/$/;"	e	enum:logcode
FERROR_UTF8	rsync.h	/^    FERROR_UTF8=8, \/* only sent via receiver -> generator pipe *\/$/;"	e	enum:logcode
FERROR_XFER	rsync.h	/^    FERROR_XFER=1, FINFO=2, \/* sent over socket for any protocol *\/$/;"	e	enum:logcode
FES_NO_SEND	io.c	/^enum festatus { FES_SUCCESS, FES_REDO, FES_NO_SEND };$/;"	e	enum:festatus	file:
FES_REDO	io.c	/^enum festatus { FES_SUCCESS, FES_REDO, FES_NO_SEND };$/;"	e	enum:festatus	file:
FES_SUCCESS	io.c	/^enum festatus { FES_SUCCESS, FES_REDO, FES_NO_SEND };$/;"	e	enum:festatus	file:
FILESFROM_BUFLEN	io.c	152;"	d	file:
FILE_STRUCT_LEN	rsync.h	714;"	d
FILTRULES_FROM_CONTAINER	exclude.c	771;"	d	file:
FILTRULES_SIDES	rsync.h	877;"	d
FILTRULE_ABS_PATH	rsync.h	860;"	d
FILTRULE_CLEAR_LIST	rsync.h	874;"	d
FILTRULE_CVS_IGNORE	rsync.h	871;"	d
FILTRULE_DIRECTORY	rsync.h	862;"	d
FILTRULE_EXCLUDE_SELF	rsync.h	868;"	d
FILTRULE_FINISH_SETUP	rsync.h	869;"	d
FILTRULE_INCLUDE	rsync.h	861;"	d
FILTRULE_MERGE_FILE	rsync.h	866;"	d
FILTRULE_NEGATE	rsync.h	870;"	d
FILTRULE_NO_INHERIT	rsync.h	864;"	d
FILTRULE_NO_PREFIXES	rsync.h	865;"	d
FILTRULE_PERDIR_MERGE	rsync.h	867;"	d
FILTRULE_PERISHABLE	rsync.h	875;"	d
FILTRULE_RECEIVER_SIDE	rsync.h	873;"	d
FILTRULE_SENDER_SIDE	rsync.h	872;"	d
FILTRULE_WILD	rsync.h	856;"	d
FILTRULE_WILD2	rsync.h	857;"	d
FILTRULE_WILD2_PREFIX	rsync.h	858;"	d
FILTRULE_WILD3_SUFFIX	rsync.h	859;"	d
FILTRULE_WORD_SPLIT	rsync.h	863;"	d
FINFO	rsync.h	/^    FERROR_XFER=1, FINFO=2, \/* sent over socket for any protocol *\/$/;"	e	enum:logcode
FINISH_STATE	zlib/deflate.h	57;"	d
FLAGS	zlib/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anon9
FLAG_CONTENT_DIR	rsync.h	72;"	d
FLAG_DIRS_ONLY	chmod.c	27;"	d	file:
FLAG_DIR_CREATED	rsync.h	71;"	d
FLAG_DIVERT_DIRS	rsync.h	89;"	d
FLAG_DUPLICATE	rsync.h	75;"	d
FLAG_FILES_ONLY	chmod.c	28;"	d	file:
FLAG_FILE_SENT	rsync.h	70;"	d
FLAG_HLINKED	rsync.h	77;"	d
FLAG_HLINK_DONE	rsync.h	81;"	d
FLAG_HLINK_FIRST	rsync.h	78;"	d
FLAG_HLINK_LAST	rsync.h	80;"	d
FLAG_IMPLIED_DIR	rsync.h	79;"	d
FLAG_LENGTH64	rsync.h	82;"	d
FLAG_MISSING_DIR	rsync.h	76;"	d
FLAG_MOD_NSEC	rsync.h	85;"	d
FLAG_MOUNT_DIR	rsync.h	73;"	d
FLAG_OWNED_BY_US	rsync.h	69;"	d
FLAG_SKIP_GROUP	rsync.h	83;"	d
FLAG_SKIP_HLINK	rsync.h	74;"	d
FLAG_TIME_FAILED	rsync.h	84;"	d
FLAG_TOP_DIR	rsync.h	68;"	d
FLAG_X_KEEP	chmod.c	26;"	d	file:
FLIST_LINEAR	rsync.h	795;"	d
FLIST_START	rsync.h	794;"	d
FLIST_TEMP	rsync.h	809;"	d
FLOG	rsync.h	/^    FERROR_SOCKET=5, FLOG=6, \/* only sent via receiver -> generator pipe *\/$/;"	e	enum:logcode
FLUSH_BLOCK	zlib/deflate.c	1378;"	d	file:
FLUSH_BLOCK_ONLY	zlib/deflate.c	1366;"	d	file:
FNAMECMP_BACKUP	rsync.h	180;"	d
FNAMECMP_BASIS_DIR_HIGH	rsync.h	177;"	d
FNAMECMP_BASIS_DIR_LOW	rsync.h	176;"	d
FNAMECMP_FNAME	rsync.h	178;"	d
FNAMECMP_FUZZY	rsync.h	181;"	d
FNAMECMP_PARTIAL_DIR	rsync.h	179;"	d
FNONE	rsync.h	/^    FNONE=0, \/* never sent *\/$/;"	e	enum:logcode
FN_GLOBAL_BOOL	loadparm.c	430;"	d	file:
FN_GLOBAL_CHAR	loadparm.c	432;"	d	file:
FN_GLOBAL_INTEGER	loadparm.c	434;"	d	file:
FN_GLOBAL_STRING	loadparm.c	428;"	d	file:
FN_LOCAL_BOOL	loadparm.c	439;"	d	file:
FN_LOCAL_CHAR	loadparm.c	441;"	d	file:
FN_LOCAL_INTEGER	loadparm.c	443;"	d	file:
FN_LOCAL_STRING	loadparm.c	437;"	d	file:
FULL_FLUSH	rsync.h	169;"	d
FWARNING	rsync.h	/^    FERROR=3, FWARNING=4, \/* sent over socket for protocols >= 30 *\/$/;"	e	enum:logcode
F_ACL	rsync.h	752;"	d
F_DEPTH	rsync.h	747;"	d
F_DIR_DEFACL	rsync.h	763;"	d
F_DIR_DEV_P	rsync.h	764;"	d
F_DIR_NODE_P	rsync.h	759;"	d
F_DIR_RELNAMES_P	rsync.h	761;"	d
F_GROUP	rsync.h	751;"	d
F_HLINK_NOT_FIRST	rsync.h	778;"	d
F_HLINK_NOT_LAST	rsync.h	779;"	d
F_HL_GNUM	rsync.h	757;"	d
F_HL_PREV	rsync.h	758;"	d
F_IS_ACTIVE	rsync.h	775;"	d
F_IS_HLINKED	rsync.h	776;"	d
F_LENGTH	rsync.h	732;"	d
F_LENGTH	rsync.h	734;"	d
F_MOD_NSEC	rsync.h	738;"	d
F_NDX	rsync.h	754;"	d
F_OPEN	zlib/zutil.h	113;"	d
F_OPEN	zlib/zutil.h	176;"	d
F_OWNER	rsync.h	750;"	d
F_PATHNAME	rsync.h	744;"	d
F_RDEV_P	rsync.h	768;"	d
F_SUM	rsync.h	771;"	d
F_SYMLINK	rsync.h	741;"	d
F_XATTR	rsync.h	753;"	d
F_option_cnt	options.c	/^static int F_option_cnt = 0;$/;"	v	file:
False	rsync.h	21;"	d
Freq	zlib/deflate.h	73;"	d
G	lib/mdfour.c	34;"	d	file:
GDL_IGNORE_FILTER_RULES	rsync.h	92;"	d
GENFILES	Makefile	/^GENFILES=configure.sh config.h.in #proto.h proto.h-tstamp rsync.1 rsyncd.conf.5 proto.h below line's$/;"	m
GETACL	lib/sysacls.c	347;"	d	file:
GETACLCNT	lib/sysacls.c	348;"	d	file:
GETGROUPS_T	config.h	32;"	d
GETGROUPS_T	uidlist.c	42;"	d	file:
GETPGRP_ARG	progress.c	36;"	d	file:
GETPGRP_ARG	progress.c	38;"	d	file:
GETPGRP_VOID	config.h	35;"	d
GF2_DIM	zlib/crc32.c	339;"	d	file:
GLOBAL_NAME	loadparm.c	85;"	d	file:
GLOBAL_PASSWORDS_FILE	mongoose.c	/^  GLOBAL_PASSWORDS_FILE, INDEX_FILES, ENABLE_KEEP_ALIVE, ACCESS_CONTROL_LIST,$/;"	e	enum:__anon3	file:
GROUP	lib/sysacls.h	142;"	d
GUNZIP	zlib/inflate.h	16;"	d
GZIP	zlib/deflate.h	23;"	d
H	lib/mdfour.c	35;"	d	file:
HASH_LOAD_LIMIT	hashtable.c	22;"	d	file:
HAS_PREFIX	xattrs.c	46;"	d	file:
HAVE_ALLOCA	config.h	50;"	d
HAVE_ALLOCA_H	config.h	54;"	d
HAVE_ARPA_INET_H	config.h	57;"	d
HAVE_ARPA_NAMESER_H	config.h	60;"	d
HAVE_ASPRINTF	config.h	63;"	d
HAVE_ASPRINTF	lib/snprintf.c	115;"	d	file:
HAVE_C99_VSNPRINTF	config.h	75;"	d
HAVE_C99_VSNPRINTF	lib/snprintf.c	114;"	d	file:
HAVE_CHMOD	config.h	78;"	d
HAVE_CHOWN	config.h	81;"	d
HAVE_CONNECT	config.h	87;"	d
HAVE_CTYPE_H	config.h	90;"	d
HAVE_DIRENT_H	config.h	94;"	d
HAVE_ERRNO_DECL	config.h	100;"	d
HAVE_FALLOCATE	config.h	107;"	d
HAVE_FCHMOD	config.h	110;"	d
HAVE_FCNTL_H	config.h	113;"	d
HAVE_FLOAT_H	config.h	116;"	d
HAVE_FSTAT	config.h	122;"	d
HAVE_FTRUNCATE	config.h	125;"	d
HAVE_GETADDRINFO	config.h	128;"	d
HAVE_GETCWD	config.h	131;"	d
HAVE_GETEGID	config.h	134;"	d
HAVE_GETEUID	config.h	137;"	d
HAVE_GETGROUPLIST	config.h	140;"	d
HAVE_GETGROUPS	config.h	143;"	d
HAVE_GETPGRP	config.h	146;"	d
HAVE_GETTIMEOFDAY_TZ	config.h	149;"	d
HAVE_GETXATTR	config.h	152;"	d
HAVE_GRP_H	config.h	155;"	d
HAVE_ICONV_H	config.h	161;"	d
HAVE_ICONV_OPEN	config.h	164;"	d
HAVE_ID_T	config.h	167;"	d
HAVE_INET_NTOP	config.h	170;"	d
HAVE_INET_PTON	config.h	173;"	d
HAVE_INITGROUPS	config.h	176;"	d
HAVE_INTTYPES_H	config.h	179;"	d
HAVE_LANGINFO_H	config.h	185;"	d
HAVE_LCHOWN	config.h	191;"	d
HAVE_LIMITS_H	config.h	224;"	d
HAVE_LINK	config.h	227;"	d
HAVE_LINUX_FALLOC_H	config.h	230;"	d
HAVE_LINUX_XATTRS	config.h	233;"	d
HAVE_LOCALE_H	config.h	239;"	d
HAVE_LONG_DOUBLE	config.h	243;"	d
HAVE_LONG_DOUBLE_WIDER	config.h	247;"	d
HAVE_LONG_LONG	lib/snprintf.c	155;"	d	file:
HAVE_LSEEK64	config.h	250;"	d
HAVE_LUTIMES	config.h	253;"	d
HAVE_MALLINFO	config.h	256;"	d
HAVE_MALLOC_H	config.h	259;"	d
HAVE_MCHECK_H	config.h	262;"	d
HAVE_MEMCPY	zlib/zutil.h	225;"	d
HAVE_MEMMOVE	config.h	265;"	d
HAVE_MEMORY_H	config.h	268;"	d
HAVE_MKFIFO	config.h	271;"	d
HAVE_MKNOD	config.h	274;"	d
HAVE_MKSTEMP64	config.h	277;"	d
HAVE_MODE_T	config.h	280;"	d
HAVE_MTRACE	config.h	283;"	d
HAVE_NETDB_H	config.h	289;"	d
HAVE_NETINET_IN_SYSTM_H	config.h	292;"	d
HAVE_NETINET_IP_H	config.h	295;"	d
HAVE_NL_LANGINFO	config.h	298;"	d
HAVE_OFF_T	config.h	301;"	d
HAVE_OPEN64	config.h	304;"	d
HAVE_PID_T	config.h	313;"	d
HAVE_POSIX_FALLOCATE	config.h	325;"	d
HAVE_PUTENV	config.h	328;"	d
HAVE_READLINK	config.h	331;"	d
HAVE_SECURE_MKSTEMP	config.h	337;"	d
HAVE_SETEUID	config.h	343;"	d
HAVE_SETGROUPS	config.h	346;"	d
HAVE_SETLOCALE	config.h	349;"	d
HAVE_SETSID	config.h	355;"	d
HAVE_SETVBUF	config.h	358;"	d
HAVE_SIGACTION	config.h	361;"	d
HAVE_SIGPROCMASK	config.h	364;"	d
HAVE_SIZE_T	config.h	367;"	d
HAVE_SNPRINTF	config.h	370;"	d
HAVE_SNPRINTF	lib/snprintf.c	112;"	d	file:
HAVE_SOCKADDR_IN6_SCOPE_ID	config.h	373;"	d
HAVE_SOCKETPAIR	config.h	385;"	d
HAVE_STDINT_H	config.h	394;"	d
HAVE_STDLIB_H	config.h	397;"	d
HAVE_STRCASECMP	config.h	400;"	d
HAVE_STRCHR	config.h	403;"	d
HAVE_STRDUP	config.h	406;"	d
HAVE_STRERROR	config.h	409;"	d
HAVE_STRFTIME	config.h	412;"	d
HAVE_STRINGS_H	config.h	415;"	d
HAVE_STRING_H	config.h	418;"	d
HAVE_STRPBRK	config.h	427;"	d
HAVE_STRTOL	config.h	430;"	d
HAVE_STRUCT_ADDRINFO	config.h	433;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	config.h	436;"	d
HAVE_STRUCT_STAT64	config.h	439;"	d
HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC	config.h	445;"	d
HAVE_STRUCT_STAT_ST_RDEV	config.h	448;"	d
HAVE_STRUCT_UTIMBUF	config.h	451;"	d
HAVE_SYS_FALLOCATE	config.h	467;"	d
HAVE_SYS_FCNTL_H	config.h	470;"	d
HAVE_SYS_IOCTL_H	config.h	476;"	d
HAVE_SYS_PARAM_H	config.h	486;"	d
HAVE_SYS_SELECT_H	config.h	489;"	d
HAVE_SYS_SOCKET_H	config.h	492;"	d
HAVE_SYS_STAT_H	config.h	495;"	d
HAVE_SYS_TIME_H	config.h	498;"	d
HAVE_SYS_TYPES_H	config.h	501;"	d
HAVE_SYS_UNISTD_H	config.h	504;"	d
HAVE_SYS_UN_H	config.h	507;"	d
HAVE_SYS_WAIT_H	config.h	510;"	d
HAVE_SYS_XATTR_H	config.h	513;"	d
HAVE_TCGETPGRP	config.h	516;"	d
HAVE_UNISTD_H	config.h	522;"	d
HAVE_UTIME	config.h	528;"	d
HAVE_UTIMENSAT	config.h	531;"	d
HAVE_UTIMES	config.h	534;"	d
HAVE_UTIME_H	config.h	537;"	d
HAVE_UTIME_NULL	config.h	540;"	d
HAVE_VASPRINTF	config.h	543;"	d
HAVE_VASPRINTF	lib/snprintf.c	116;"	d	file:
HAVE_VSNPRINTF	config.h	549;"	d
HAVE_VSNPRINTF	lib/snprintf.c	113;"	d	file:
HAVE_VSNPRINTF	zlib/zutil.h	183;"	d
HAVE_VSNPRINTF	zlib/zutil.h	188;"	d
HAVE_WAIT4	config.h	552;"	d
HAVE_WAITPID	config.h	555;"	d
HAVE_ZLIB_H	config.h	558;"	d
HCRC	zlib/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anon9
HCRC_STATE	zlib/deflate.h	55;"	d
HEAD	zlib/inflate.h	/^    HEAD,       \/* i: waiting for magic header *\/$/;"	e	enum:__anon9
HEADERS	Makefile	/^HEADERS=byteorder.h config.h errcode.h  rsync.h ifuncs.h itypes.h inums.h \\$/;"	m
HEAP_SIZE	zlib/deflate.h	45;"	d
HELP_PRIORITY	options.c	229;"	d	file:
HEXTOI	mongoose.c	1668;"	d	file:
HIDE_FILES	mongoose.c	/^  NUM_THREADS, RUN_AS_USER, REWRITE, HIDE_FILES, REQUEST_TIMEOUT,$/;"	e	enum:__anon3	file:
HLINK_BUMP	rsync.h	727;"	d
HOST_NAME_MAX	lib/getaddrinfo.c	57;"	d	file:
HT_KEY	rsync.h	629;"	d
HT_NODE	rsync.h	628;"	d
HUMANIFY	lib/compat.c	158;"	d	file:
H_FINDME	popt/findme.h	10;"	d
H_POPT	popt/popt.h	10;"	d
H_POPTINT	popt/poptint.h	10;"	d
ICB_CIRCULAR_OUT	rsync.h	951;"	d
ICB_EXPAND_OUT	rsync.h	948;"	d
ICB_INCLUDE_BAD	rsync.h	949;"	d
ICB_INCLUDE_INCOMPLETE	rsync.h	950;"	d
ICB_INIT	rsync.h	952;"	d
ICONV_CONST	config.h	576;"	d
ICONV_CONST	rsync.h	459;"	d
ICONV_CONST	rsync.h	463;"	d
ICONV_OPTION	config.h	580;"	d
ICONV_OPTION	rsync.h	466;"	d
INADDR_LOOPBACK	rsync.h	1150;"	d
INADDR_NONE	rsync.h	1154;"	d
INADDR_NONE	rsync.h	665;"	d
INDEX_FILES	mongoose.c	/^  GLOBAL_PASSWORDS_FILE, INDEX_FILES, ENABLE_KEEP_ALIVE, ACCESS_CONTROL_LIST,$/;"	e	enum:__anon3	file:
INET6	config.h	583;"	d
INFO_BACKUP	rsync.h	1236;"	d
INFO_COPY	rsync.h	1237;"	d
INFO_DEL	rsync.h	1238;"	d
INFO_EQ	rsync.h	1232;"	d
INFO_FLIST	rsync.h	1239;"	d
INFO_GTE	rsync.h	1231;"	d
INFO_MISC	rsync.h	1240;"	d
INFO_MOUNT	rsync.h	1241;"	d
INFO_NAME	rsync.h	1242;"	d
INFO_PROGRESS	rsync.h	1243;"	d
INFO_REMOVE	rsync.h	1244;"	d
INFO_SKIP	rsync.h	1245;"	d
INFO_STATS	rsync.h	1246;"	d
INFO_SYMSAFE	rsync.h	1247;"	d
INFO_WORD	options.c	247;"	d	file:
INITACCESSPERMS	rsync.h	1167;"	d
INITBITS	zlib/inflate.c	425;"	d	file:
INITIAL_ACL_SIZE	lib/sysacls.c	402;"	d	file:
INITIAL_ACL_SIZE	lib/sysacls.c	874;"	d	file:
INIT_CONST_XBUF	rsync.h	946;"	d
INIT_STATE	zlib/deflate.h	51;"	d
INIT_XBUF	rsync.h	943;"	d
INIT_XBUF_STRLEN	rsync.h	944;"	d
INSERT_STRING	zlib/deflate.c	186;"	d	file:
INSERT_STRING	zlib/deflate.c	191;"	d	file:
INSTALLCMD	Makefile	/^INSTALLCMD=\/usr\/bin\/install -c$/;"	m
INSTALLMAN	Makefile	/^INSTALLMAN=\/usr\/bin\/install -c$/;"	m
INT64_FMT	mongoose.c	124;"	d	file:
INT64_FMT	mongoose.c	243;"	d	file:
INT64_MAX	mongoose.c	176;"	d	file:
INVALID_SOCKET	mongoose.c	242;"	d	file:
IN_LOOPBACKNET	rsync.h	669;"	d
IN_MULTIPLEXED	io.c	136;"	d	file:
IN_MULTIPLEXED_AND_READY	io.c	137;"	d	file:
IOBUF_FREE_BUFS	rsync.h	955;"	d
IOBUF_KEEP_BUFS	rsync.h	954;"	d
IOBUF_RESTORE_SIZE	io.c	134;"	d	file:
IOBUF_WAS_REDUCED	io.c	133;"	d	file:
IOERR_DEL_LIMIT	rsync.h	148;"	d
IOERR_GENERAL	rsync.h	146;"	d
IOERR_VANISHED	rsync.h	147;"	d
IO_BUFFER_SIZE	rsync.h	138;"	d
IPos	zlib/deflate.h	/^typedef unsigned IPos;$/;"	t
ISALNUM	lib/wildmatch.c	47;"	d	file:
ISALPHA	lib/wildmatch.c	48;"	d	file:
ISASCII	lib/wildmatch.c	28;"	d	file:
ISASCII	lib/wildmatch.c	30;"	d	file:
ISBLANK	lib/wildmatch.c	34;"	d	file:
ISBLANK	lib/wildmatch.c	36;"	d	file:
ISCNTRL	lib/wildmatch.c	49;"	d	file:
ISDIGIT	lib/wildmatch.c	46;"	d	file:
ISGRAPH	lib/wildmatch.c	40;"	d	file:
ISGRAPH	lib/wildmatch.c	42;"	d	file:
ISLOWER	lib/wildmatch.c	50;"	d	file:
ISPRINT	lib/wildmatch.c	45;"	d	file:
ISPUNCT	lib/wildmatch.c	51;"	d	file:
ISSPACE	lib/wildmatch.c	52;"	d	file:
ISUPPER	lib/wildmatch.c	53;"	d	file:
ISXDIGIT	lib/wildmatch.c	54;"	d	file:
IS_DEVICE	rsync.h	1158;"	d
IS_SPECIAL	rsync.h	1157;"	d
ITEM_BASIS_TYPE_FOLLOWS	rsync.h	194;"	d
ITEM_DELETED	rsync.h	201;"	d
ITEM_IS_NEW	rsync.h	196;"	d
ITEM_LOCAL_CHANGE	rsync.h	197;"	d
ITEM_MATCHED	rsync.h	202;"	d
ITEM_MISSING_DATA	rsync.h	200;"	d
ITEM_REPORT_ACL	rsync.h	192;"	d
ITEM_REPORT_ATIME	rsync.h	184;"	d
ITEM_REPORT_CHANGE	rsync.h	185;"	d
ITEM_REPORT_GROUP	rsync.h	191;"	d
ITEM_REPORT_OWNER	rsync.h	190;"	d
ITEM_REPORT_PERMS	rsync.h	189;"	d
ITEM_REPORT_SIZE	rsync.h	186;"	d
ITEM_REPORT_TIME	rsync.h	188;"	d
ITEM_REPORT_TIMEFAIL	rsync.h	187;"	d
ITEM_REPORT_XATTR	rsync.h	193;"	d
ITEM_TRANSFER	rsync.h	198;"	d
ITEM_XNAME_FOLLOWS	rsync.h	195;"	d
IVAL	byteorder.h	/^IVAL(const char *buf, int pos)$/;"	f
IVAL	byteorder.h	40;"	d
IVAL	byteorder.h	56;"	d
IVALu	byteorder.h	/^IVALu(const uchar *buf, int pos)$/;"	f
IVALu	byteorder.h	45;"	d
IVALu	byteorder.h	59;"	d
LDFLAGS	Makefile	/^LDFLAGS=$/;"	m
LDOUBLE	lib/snprintf.c	149;"	d	file:
LDOUBLE	lib/snprintf.c	151;"	d	file:
LEN	zlib/inflate.h	/^            LEN,        \/* i: waiting for length\/lit code *\/$/;"	e	enum:__anon9
LEN64_BUMP	rsync.h	725;"	d
LENEXT	zlib/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anon9
LENGTH	zlib/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anon9
LENGTH_CODES	zlib/deflate.h	30;"	d
LENLENS	zlib/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anon9
LENS	zlib/inftrees.h	/^    LENS,$/;"	e	enum:__anon14
LIBOBJ	Makefile	/^LIBOBJ=lib\/wildmatch.o lib\/compat.o lib\/snprintf.o lib\/mdfour.o lib\/md5.o \\$/;"	m
LIBS	Makefile	/^LIBS= libmongoose.so$/;"	m
LIMIT_PRIORITY	options.c	231;"	d	file:
LISTENING_PORTS	mongoose.c	/^  EXTRA_MIME_TYPES, LISTENING_PORTS, DOCUMENT_ROOT, SSL_CERTIFICATE,$/;"	e	enum:__anon3	file:
LIT	zlib/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anon9
LITERALS	zlib/deflate.h	33;"	d
LLONG	lib/snprintf.c	158;"	d	file:
LLONG	lib/snprintf.c	160;"	d	file:
LOAD	zlib/inflate.c	403;"	d	file:
LOCAL_STRING_COUNT	loadparm.c	135;"	d	file:
LOG2	util.c	1587;"	d	file:
LOG_DAEMON	loadparm.c	53;"	d	file:
LP_SNUM_OK	loadparm.c	90;"	d	file:
L_CODES	zlib/deflate.h	36;"	d
Len	zlib/deflate.h	76;"	d
MAKEDEV	rsync.h	443;"	d
MAKEDEV	rsync.h	445;"	d
MAKEUQUAD	mongoose.c	93;"	d	file:
MALLOC_MAX	util.c	1387;"	d	file:
MAP_FAILED	mongoose.c	3985;"	d	file:
MAP_PRIVATE	mongoose.c	3986;"	d	file:
MASK32	lib/mdfour.c	31;"	d	file:
MATCH	zlib/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anon9
MAX	lib/snprintf.c	224;"	d	file:
MAX	rsync.h	637;"	d
MAXBITS	zlib/inftrees.c	9;"	d	file:
MAXCHILDPROCS	main.c	161;"	d	file:
MAXD	zlib/inftrees.h	44;"	d
MAXHOSTNAMELEN	rsync.h	641;"	d
MAXPATHLEN	rsync.h	649;"	d
MAXSEG_64K	zlib/zconf.h	89;"	d
MAX_ARGS	rsync.h	150;"	d
MAX_BASIS_DIRS	rsync.h	151;"	d
MAX_BATCH_NAME_LEN	options.c	197;"	d	file:
MAX_BITS	zlib/deflate.h	48;"	d
MAX_BLOCK_SIZE	rsync.h	139;"	d
MAX_BL_BITS	zlib/trees.c	46;"	d	file:
MAX_CGI_ENVIR_VARS	mongoose.c	259;"	d	file:
MAX_DATA_COUNT	token.c	271;"	d	file:
MAX_DIGEST_LEN	lib/mdigest.h	5;"	d
MAX_DIST	zlib/deflate.h	276;"	d
MAX_FILECNT_LOOKAHEAD	rsync.h	130;"	d
MAX_FULL_DATUM	xattrs.c	44;"	d	file:
MAX_GID_LIST	clientserver.c	63;"	d	file:
MAX_MAP_SIZE	rsync.h	137;"	d
MAX_MATCH	zlib/zutil.h	85;"	d
MAX_MEM_LEVEL	zlib/zconf.h	136;"	d
MAX_MEM_LEVEL	zlib/zconf.h	138;"	d
MAX_OUT_LEVEL	options.c	224;"	d	file:
MAX_PROTOCOL_VERSION	rsync.h	127;"	d
MAX_PTR	zlib/zutil.c	198;"	d	file:
MAX_RENAMES	util.c	429;"	d	file:
MAX_RENAMES_DIGITS	util.c	428;"	d	file:
MAX_REQUEST_SIZE	mongoose.c	261;"	d	file:
MAX_RULE_PREFIX	exclude.c	48;"	d	file:
MAX_SERVER_ARGS	rsync.h	152;"	d
MAX_UNIQUE_LOOP	receiver.c	73;"	d	file:
MAX_UNIQUE_NUMBER	receiver.c	72;"	d	file:
MAX_VERBOSITY	options.c	216;"	d	file:
MAX_WBITS	zlib/zconf.h	148;"	d
MD4_DIGEST_LEN	lib/mdigest.h	3;"	d
MD5Context	mongoose.c	/^typedef struct MD5Context {$/;"	s	file:
MD5Final	mongoose.c	/^static void MD5Final(unsigned char digest[16], MD5_CTX *ctx) {$/;"	f	file:
MD5Init	mongoose.c	/^static void MD5Init(MD5_CTX *ctx) {$/;"	f	file:
MD5STEP	mongoose.c	2041;"	d	file:
MD5Transform	mongoose.c	/^static void MD5Transform(uint32_t buf[4], uint32_t const in[16]) {$/;"	f	file:
MD5Update	mongoose.c	/^static void MD5Update(MD5_CTX *ctx, unsigned char const *buf, unsigned len) {$/;"	f	file:
MD5_CTX	mongoose.c	/^} MD5_CTX;$/;"	t	typeref:struct:MD5Context	file:
MD5_DIGEST_LEN	lib/mdigest.h	4;"	d
MEM	zlib/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anon9
MG_BUF_LEN	mongoose.c	260;"	d	file:
MIGHT_NEED_RPRE	xattrs.c	61;"	d	file:
MIGHT_NEED_RPRE	xattrs.c	64;"	d	file:
MIN	rsync.h	633;"	d
MINALIGN	lib/pool_alloc.c	41;"	d	file:
MIN_FILECNT_LOOKAHEAD	rsync.h	129;"	d
MIN_LOOKAHEAD	zlib/deflate.c	115;"	d	file:
MIN_LOOKAHEAD	zlib/deflate.h	271;"	d
MIN_MATCH	zlib/zutil.h	84;"	d
MIN_PROTOCOL_VERSION	rsync.h	125;"	d
MISSING_NAME	flist.c	105;"	d	file:
MKNOD_CREATES_FIFOS	config.h	597;"	d
MKNOD_CREATES_SOCKETS	config.h	600;"	d
MKP_DROP_NAME	rsync.h	272;"	d
MKP_SKIP_SLASH	rsync.h	273;"	d
MOD	zlib/adler32.c	23;"	d	file:
MOD	zlib/adler32.c	52;"	d	file:
MOD4	zlib/adler32.c	43;"	d	file:
MOD4	zlib/adler32.c	53;"	d	file:
MONGOOSE_HEADER_INCLUDED	mongoose.h	22;"	d
MONGOOSE_VERSION	mongoose.c	256;"	d	file:
MPLEX_BASE	rsync.h	154;"	d
MPLX_ALL_DONE	rsync.h	958;"	d
MPLX_SWITCHING	rsync.h	957;"	d
MPLX_TO_BUFFERED	rsync.h	959;"	d
MSDOS	zlib/zconf.h	63;"	d
MSG_CLIENT	rsync.h	/^	MSG_LOG=FLOG, MSG_CLIENT=FCLIENT, \/* sibling logging *\/$/;"	e	enum:msgcode
MSG_DATA	rsync.h	/^	MSG_DATA=0,	\/* raw data on the multiplexed stream *\/$/;"	e	enum:msgcode
MSG_DELETED	rsync.h	/^	MSG_DELETED=101,\/* successfully deleted a file on receiving side *\/$/;"	e	enum:msgcode
MSG_ERROR	rsync.h	/^	MSG_ERROR=FERROR, MSG_WARNING=FWARNING, \/* protocol-30 remote logging *\/$/;"	e	enum:msgcode
MSG_ERROR_EXIT	rsync.h	/^	MSG_ERROR_EXIT=86, \/* synchronize an error exit (siblings and protocol >= 31) *\/$/;"	e	enum:msgcode
MSG_ERROR_SOCKET	rsync.h	/^	MSG_ERROR_SOCKET=FERROR_SOCKET, \/* sibling logging *\/$/;"	e	enum:msgcode
MSG_ERROR_UTF8	rsync.h	/^	MSG_ERROR_UTF8=FERROR_UTF8, \/* sibling logging *\/$/;"	e	enum:msgcode
MSG_ERROR_XFER	rsync.h	/^	MSG_ERROR_XFER=FERROR_XFER, MSG_INFO=FINFO, \/* remote logging *\/$/;"	e	enum:msgcode
MSG_INFO	rsync.h	/^	MSG_ERROR_XFER=FERROR_XFER, MSG_INFO=FINFO, \/* remote logging *\/$/;"	e	enum:msgcode
MSG_IO_ERROR	rsync.h	/^	MSG_IO_ERROR=22,\/* the sending side had an I\/O error *\/$/;"	e	enum:msgcode
MSG_IO_TIMEOUT	rsync.h	/^	MSG_IO_TIMEOUT=33,\/* tell client about a daemon's timeout value *\/$/;"	e	enum:msgcode
MSG_LOG	rsync.h	/^	MSG_LOG=FLOG, MSG_CLIENT=FCLIENT, \/* sibling logging *\/$/;"	e	enum:msgcode
MSG_NOOP	rsync.h	/^	MSG_NOOP=42,	\/* a do-nothing message (legacy protocol-30 only) *\/$/;"	e	enum:msgcode
MSG_NOSIGNAL	mongoose.c	298;"	d	file:
MSG_NO_SEND	rsync.h	/^	MSG_NO_SEND=102,\/* sender failed to open a file we wanted *\/$/;"	e	enum:msgcode
MSG_REDO	rsync.h	/^	MSG_REDO=9,	\/* reprocess indicated flist index *\/$/;"	e	enum:msgcode
MSG_STATS	rsync.h	/^	MSG_STATS=10,	\/* message has stats data for generator *\/$/;"	e	enum:msgcode
MSG_SUCCESS	rsync.h	/^	MSG_SUCCESS=100,\/* successfully updated indicated flist index *\/$/;"	e	enum:msgcode
MSG_WARNING	rsync.h	/^	MSG_ERROR=FERROR, MSG_WARNING=FWARNING, \/* protocol-30 remote logging *\/$/;"	e	enum:msgcode
MSK_ACTIVE_RECEIVER	rsync.h	277;"	d
MSK_ALLOW_FLUSH	rsync.h	276;"	d
MYDEBUG	popt/popt.c	9;"	d	file:
MY_ABS	popt/popt.c	974;"	d	file:
MY_GID	rsync.h	1219;"	d
MY_GID	rsync.h	1221;"	d
MY_UID	rsync.h	1213;"	d
MY_UID	rsync.h	1215;"	d
MY_ZCALLOC	zlib/zutil.c	190;"	d	file:
MY_ZCALLOC	zlib/zutil.c	268;"	d	file:
MemoryStruct	http.c	/^struct MemoryStruct {$/;"	s	file:
MemoryStruct	main.c	/^struct MemoryStruct {$/;"	s	file:
ModeAND	chmod.c	/^	int ModeAND, ModeOR;$/;"	m	struct:chmod_mode_struct	file:
ModeOR	chmod.c	/^	int ModeAND, ModeOR;$/;"	m	struct:chmod_mode_struct	file:
NAME	zlib/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anon9
NAME_IS_USER	acls.c	46;"	d	file:
NAME_MAX	rsync.h	661;"	d
NAME_STATE	zlib/deflate.h	53;"	d
NDX_DEL_STATS	rsync.h	251;"	d
NDX_DONE	rsync.h	249;"	d
NDX_FLIST_EOF	rsync.h	250;"	d
NDX_FLIST_OFFSET	rsync.h	252;"	d
NEEDBITS	zlib/inflate.c	443;"	d	file:
NEGATE_CLASS	lib/wildmatch.c	15;"	d	file:
NEGATE_CLASS2	lib/wildmatch.c	16;"	d	file:
NFLAGS_NAME_MATCH	uidlist.c	47;"	d	file:
NFLAGS_WILD_NAME_MATCH	uidlist.c	46;"	d	file:
NIL	zlib/deflate.c	107;"	d	file:
NI_DGRAM	lib/addrinfo.h	114;"	d
NI_MAXHOST	lib/addrinfo.h	119;"	d
NI_MAXSERV	lib/addrinfo.h	123;"	d
NI_NAMEREQD	lib/addrinfo.h	110;"	d
NI_NOFQDN	lib/addrinfo.h	106;"	d
NI_NUMERICHOST	lib/addrinfo.h	98;"	d
NI_NUMERICSERV	lib/addrinfo.h	102;"	d
NMAX	zlib/adler32.c	12;"	d	file:
NOBODY_GROUP	config.h	603;"	d
NOBODY_USER	config.h	606;"	d
NONBLOCK_FLAG	rsync.h	1142;"	d
NONBLOCK_FLAG	rsync.h	1144;"	d
NONBLOCK_FLAG	rsync.h	1146;"	d
NORETURN	rsync.h	980;"	d
NORETURN	rsync.h	986;"	d
NORMAL_EXTENT	rsync.h	806;"	d
NORMAL_FLUSH	rsync.h	170;"	d
NORMAL_NAME	flist.c	102;"	d	file:
NO_CGI	mongoose.c	47;"	d	file:
NO_CGI	mongoose.c	85;"	d	file:
NO_DUMMY_DECL	zlib/zconf.h	130;"	d
NO_ENTRY	acls.c	44;"	d	file:
NO_FILTERS	rsync.h	156;"	d
NO_MEMCPY	zlib/zutil.h	215;"	d
NO_MEMCPY	zlib/zutil.h	222;"	d
NO_SOCKLEN_T	mongoose.c	116;"	d	file:
NO_SSL	mongoose.c	46;"	d	file:
NO_SYMLINK_USER_XATTRS	config.h	615;"	d
NO_vsnprintf	zlib/zconf.h	305;"	d
NO_vsnprintf	zlib/zconf.h	309;"	d
NO_vsnprintf	zlib/zutil.h	195;"	d
NO_vsnprintf	zlib/zutil.h	198;"	d
NO_vsnprintf	zlib/zutil.h	207;"	d
NO_vsnprintf	zlib/zutil.h	211;"	d
NS	rsync.h	1170;"	d
NSEC_BUMP	rsync.h	724;"	d
NS_IN6ADDRSZ	lib/inet_ntop.c	22;"	d	file:
NS_IN6ADDRSZ	lib/inet_pton.c	22;"	d	file:
NS_INADDRSZ	lib/inet_pton.c	21;"	d	file:
NS_INT16SZ	lib/inet_ntop.c	21;"	d	file:
NS_INT16SZ	lib/inet_pton.c	20;"	d	file:
NUMPARAMETERS	loadparm.c	244;"	d	file:
NUM_OPTIONS	mongoose.c	/^  NUM_OPTIONS$/;"	e	enum:__anon3	file:
NUM_THREADS	mongoose.c	/^  NUM_THREADS, RUN_AS_USER, REWRITE, HIDE_FILES, REQUEST_TIMEOUT,$/;"	e	enum:__anon3	file:
N_	popt/poptint.h	120;"	d
OBJS	Makefile	/^OBJS=$(OBJS1) $(OBJS2) $(OBJS3) $(DAEMON_OBJ) $(LIBOBJ) $(zlib_OBJS) $(popt_OBJS)$/;"	m
OBJS1	Makefile	/^OBJS1=flist.o rsync.o generator.o receiver.o cleanup.o sender.o exclude.o \\$/;"	m
OBJS2	Makefile	/^OBJS2=options.o io.o compat.o hlink.o token.o uidlist.o socket.o hashtable.o \\$/;"	m
OBJS3	Makefile	/^OBJS3=progress.o pipe.o$/;"	m
OBUF_SIZE	token.c	293;"	d	file:
OBUF_SIZE	token.c	295;"	d	file:
OF	zlib/zconf.h	168;"	d
OF	zlib/zconf.h	170;"	d
OFF	zlib/inffast.c	25;"	d	file:
OFF	zlib/inffast.c	28;"	d	file:
OFF_T	rsync.h	562;"	d
OFF_T	rsync.h	566;"	d
OLD_MAX_BLOCK_SIZE	rsync.h	142;"	d
OLD_PROTOCOL_VERSION	rsync.h	126;"	d
ONE_SEC	io.c	1977;"	d	file:
OPT_APPEND	options.c	/^      OPT_NO_D, OPT_APPEND, OPT_NO_ICONV, OPT_INFO, OPT_DEBUG,$/;"	e	enum:__anon35	file:
OPT_BOOL	socket.c	/^enum SOCK_OPT_TYPES {OPT_BOOL,OPT_INT,OPT_ON};$/;"	e	enum:SOCK_OPT_TYPES	file:
OPT_BWLIMIT	options.c	/^      OPT_USERMAP, OPT_GROUPMAP, OPT_CHOWN, OPT_BWLIMIT,$/;"	e	enum:__anon35	file:
OPT_CHMOD	options.c	/^      OPT_INCLUDE, OPT_INCLUDE_FROM, OPT_MODIFY_WINDOW, OPT_MIN_SIZE, OPT_CHMOD,$/;"	e	enum:__anon35	file:
OPT_CHOWN	options.c	/^      OPT_USERMAP, OPT_GROUPMAP, OPT_CHOWN, OPT_BWLIMIT,$/;"	e	enum:__anon35	file:
OPT_COMPARE_DEST	options.c	/^      OPT_FILTER, OPT_COMPARE_DEST, OPT_COPY_DEST, OPT_LINK_DEST, OPT_HELP,$/;"	e	enum:__anon35	file:
OPT_COPY_DEST	options.c	/^      OPT_FILTER, OPT_COMPARE_DEST, OPT_COPY_DEST, OPT_LINK_DEST, OPT_HELP,$/;"	e	enum:__anon35	file:
OPT_DAEMON	options.c	/^enum {OPT_VERSION = 1000, OPT_DAEMON, OPT_SENDER, OPT_EXCLUDE, OPT_EXCLUDE_FROM,$/;"	e	enum:__anon35	file:
OPT_DEBUG	options.c	/^      OPT_NO_D, OPT_APPEND, OPT_NO_ICONV, OPT_INFO, OPT_DEBUG,$/;"	e	enum:__anon35	file:
OPT_EXCLUDE	options.c	/^enum {OPT_VERSION = 1000, OPT_DAEMON, OPT_SENDER, OPT_EXCLUDE, OPT_EXCLUDE_FROM,$/;"	e	enum:__anon35	file:
OPT_EXCLUDE_FROM	options.c	/^enum {OPT_VERSION = 1000, OPT_DAEMON, OPT_SENDER, OPT_EXCLUDE, OPT_EXCLUDE_FROM,$/;"	e	enum:__anon35	file:
OPT_EXTRA	rsync.h	722;"	d
OPT_FILTER	options.c	/^      OPT_FILTER, OPT_COMPARE_DEST, OPT_COPY_DEST, OPT_LINK_DEST, OPT_HELP,$/;"	e	enum:__anon35	file:
OPT_GROUPMAP	options.c	/^      OPT_USERMAP, OPT_GROUPMAP, OPT_CHOWN, OPT_BWLIMIT,$/;"	e	enum:__anon35	file:
OPT_HELP	options.c	/^      OPT_FILTER, OPT_COMPARE_DEST, OPT_COPY_DEST, OPT_LINK_DEST, OPT_HELP,$/;"	e	enum:__anon35	file:
OPT_INCLUDE	options.c	/^      OPT_INCLUDE, OPT_INCLUDE_FROM, OPT_MODIFY_WINDOW, OPT_MIN_SIZE, OPT_CHMOD,$/;"	e	enum:__anon35	file:
OPT_INCLUDE_FROM	options.c	/^      OPT_INCLUDE, OPT_INCLUDE_FROM, OPT_MODIFY_WINDOW, OPT_MIN_SIZE, OPT_CHMOD,$/;"	e	enum:__anon35	file:
OPT_INFO	options.c	/^      OPT_NO_D, OPT_APPEND, OPT_NO_ICONV, OPT_INFO, OPT_DEBUG,$/;"	e	enum:__anon35	file:
OPT_INT	socket.c	/^enum SOCK_OPT_TYPES {OPT_BOOL,OPT_INT,OPT_ON};$/;"	e	enum:SOCK_OPT_TYPES	file:
OPT_LINK_DEST	options.c	/^      OPT_FILTER, OPT_COMPARE_DEST, OPT_COPY_DEST, OPT_LINK_DEST, OPT_HELP,$/;"	e	enum:__anon35	file:
OPT_MAX_SIZE	options.c	/^      OPT_READ_BATCH, OPT_WRITE_BATCH, OPT_ONLY_WRITE_BATCH, OPT_MAX_SIZE,$/;"	e	enum:__anon35	file:
OPT_MIN_SIZE	options.c	/^      OPT_INCLUDE, OPT_INCLUDE_FROM, OPT_MODIFY_WINDOW, OPT_MIN_SIZE, OPT_CHMOD,$/;"	e	enum:__anon35	file:
OPT_MODIFY_WINDOW	options.c	/^      OPT_INCLUDE, OPT_INCLUDE_FROM, OPT_MODIFY_WINDOW, OPT_MIN_SIZE, OPT_CHMOD,$/;"	e	enum:__anon35	file:
OPT_NO_D	options.c	/^      OPT_NO_D, OPT_APPEND, OPT_NO_ICONV, OPT_INFO, OPT_DEBUG,$/;"	e	enum:__anon35	file:
OPT_NO_ICONV	options.c	/^      OPT_NO_D, OPT_APPEND, OPT_NO_ICONV, OPT_INFO, OPT_DEBUG,$/;"	e	enum:__anon35	file:
OPT_ON	socket.c	/^enum SOCK_OPT_TYPES {OPT_BOOL,OPT_INT,OPT_ON};$/;"	e	enum:SOCK_OPT_TYPES	file:
OPT_ONLY_WRITE_BATCH	options.c	/^      OPT_READ_BATCH, OPT_WRITE_BATCH, OPT_ONLY_WRITE_BATCH, OPT_MAX_SIZE,$/;"	e	enum:__anon35	file:
OPT_READ_BATCH	options.c	/^      OPT_READ_BATCH, OPT_WRITE_BATCH, OPT_ONLY_WRITE_BATCH, OPT_MAX_SIZE,$/;"	e	enum:__anon35	file:
OPT_REFUSED_BASE	options.c	/^      OPT_SERVER, OPT_REFUSED_BASE = 9000};$/;"	e	enum:__anon35	file:
OPT_SENDER	options.c	/^enum {OPT_VERSION = 1000, OPT_DAEMON, OPT_SENDER, OPT_EXCLUDE, OPT_EXCLUDE_FROM,$/;"	e	enum:__anon35	file:
OPT_SERVER	options.c	/^      OPT_SERVER, OPT_REFUSED_BASE = 9000};$/;"	e	enum:__anon35	file:
OPT_USERMAP	options.c	/^      OPT_USERMAP, OPT_GROUPMAP, OPT_CHOWN, OPT_BWLIMIT,$/;"	e	enum:__anon35	file:
OPT_VERSION	options.c	/^enum {OPT_VERSION = 1000, OPT_DAEMON, OPT_SENDER, OPT_EXCLUDE, OPT_EXCLUDE_FROM,$/;"	e	enum:__anon35	file:
OPT_WRITE_BATCH	options.c	/^      OPT_READ_BATCH, OPT_WRITE_BATCH, OPT_ONLY_WRITE_BATCH, OPT_MAX_SIZE,$/;"	e	enum:__anon35	file:
OS	zlib/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anon9
OS2	zlib/zconf.h	66;"	d
OSX_BROKEN_GETENTRY	lib/sysacls.c	2593;"	d	file:
OS_CODE	zlib/zutil.h	108;"	d
OS_CODE	zlib/zutil.h	112;"	d
OS_CODE	zlib/zutil.h	118;"	d
OS_CODE	zlib/zutil.h	122;"	d
OS_CODE	zlib/zutil.h	129;"	d
OS_CODE	zlib/zutil.h	140;"	d
OS_CODE	zlib/zutil.h	145;"	d
OS_CODE	zlib/zutil.h	150;"	d
OS_CODE	zlib/zutil.h	172;"	d
OS_CODE	zlib/zutil.h	93;"	d
OUT_MULTIPLEXED	io.c	138;"	d	file:
O_BINARY	mongoose.c	235;"	d	file:
O_BINARY	rsync.h	1192;"	d
O_NONBLOCK	mongoose.c	119;"	d	file:
OpenConfFile	params.c	/^static FILE *OpenConfFile( char *FileName )$/;"	f	file:
P	lib/md5.c	60;"	d	file:
PACKAGE	popt/system.h	128;"	d
PACKAGE_BUGREPORT	config.h	621;"	d
PACKAGE_NAME	config.h	624;"	d
PACKAGE_STRING	config.h	627;"	d
PACKAGE_TARNAME	config.h	630;"	d
PACKAGE_URL	config.h	633;"	d
PACKAGE_VERSION	config.h	636;"	d
PASSWORDS_FILE_NAME	mongoose.c	257;"	d	file:
PATH_MAX	mongoose.c	306;"	d	file:
PATH_MAX	mongoose.c	48;"	d	file:
PATH_MAX	mongoose.c	77;"	d	file:
PBM_ALLOC	popt/poptint.h	45;"	d
PBM_CLR	popt/poptint.h	48;"	d
PBM_FREE	popt/poptint.h	46;"	d
PBM_ISSET	popt/poptint.h	49;"	d
PBM_SET	popt/poptint.h	47;"	d
PDIR_CREATE	rsync.h	172;"	d
PDIR_DELETE	rsync.h	173;"	d
PERMSTRING_SIZE	lib/permstring.h	1;"	d
PIO_CONSUME_INPUT	io.c	144;"	d	file:
PIO_INPUT_AND_CONSUME	io.c	146;"	d	file:
PIO_NEED_FLAGS	io.c	147;"	d	file:
PIO_NEED_INPUT	io.c	140;"	d	file:
PIO_NEED_MSGROOM	io.c	142;"	d	file:
PIO_NEED_OUTROOM	io.c	141;"	d	file:
POLLIN	mongoose.c	196;"	d	file:
POOL_CLEAR	lib/pool_alloc.h	3;"	d
POOL_DEF_EXTENT	lib/pool_alloc.c	3;"	d	file:
POOL_INTERN	lib/pool_alloc.h	5;"	d
POOL_NO_QALIGN	lib/pool_alloc.h	4;"	d
POOL_PREPEND	lib/pool_alloc.h	6;"	d
POOL_QALIGN_P2	lib/pool_alloc.c	5;"	d	file:
POPT_	popt/poptint.h	114;"	d
POPT_	popt/poptint.h	117;"	d
POPT_ARGFLAG_AND	popt/popt.h	51;"	d
POPT_ARGFLAG_DOC_HIDDEN	popt/popt.h	45;"	d
POPT_ARGFLAG_LOGICALOPS	popt/popt.h	55;"	d
POPT_ARGFLAG_NAND	popt/popt.h	52;"	d
POPT_ARGFLAG_NOR	popt/popt.h	50;"	d
POPT_ARGFLAG_NOT	popt/popt.h	54;"	d
POPT_ARGFLAG_ONEDASH	popt/popt.h	44;"	d
POPT_ARGFLAG_OPTIONAL	popt/popt.h	47;"	d
POPT_ARGFLAG_OR	popt/popt.h	49;"	d
POPT_ARGFLAG_SHOW_DEFAULT	popt/popt.h	63;"	d
POPT_ARGFLAG_STRIP	popt/popt.h	46;"	d
POPT_ARGFLAG_XOR	popt/popt.h	53;"	d
POPT_ARGV_ARRAY_GROW_DELTA	popt/poptparse.c	13;"	d	file:
POPT_ARG_CALLBACK	popt/popt.h	25;"	d
POPT_ARG_DOUBLE	popt/popt.h	35;"	d
POPT_ARG_FLOAT	popt/popt.h	34;"	d
POPT_ARG_INCLUDE_TABLE	popt/popt.h	24;"	d
POPT_ARG_INT	popt/popt.h	22;"	d
POPT_ARG_INTL_DOMAIN	popt/popt.h	29;"	d
POPT_ARG_LONG	popt/popt.h	23;"	d
POPT_ARG_MASK	popt/popt.h	37;"	d
POPT_ARG_NONE	popt/popt.h	20;"	d
POPT_ARG_STRING	popt/popt.h	21;"	d
POPT_ARG_VAL	popt/popt.h	33;"	d
POPT_AUTOALIAS	popt/popt.h	165;"	d
POPT_AUTOHELP	popt/popt.h	181;"	d
POPT_BADOPTION_NOALIAS	popt/popt.h	100;"	d
POPT_BIT_CLR	popt/popt.h	60;"	d
POPT_BIT_SET	popt/popt.h	58;"	d
POPT_CALLBACK_REASON_OPTION	popt/popt.h	/^    POPT_CALLBACK_REASON_OPTION = 2$/;"	e	enum:poptCallbackReason
POPT_CALLBACK_REASON_POST	popt/popt.h	/^    POPT_CALLBACK_REASON_POST	= 1,$/;"	e	enum:poptCallbackReason
POPT_CALLBACK_REASON_PRE	popt/popt.h	/^    POPT_CALLBACK_REASON_PRE	= 0, $/;"	e	enum:poptCallbackReason
POPT_CBFLAG_CONTINUE	popt/popt.h	76;"	d
POPT_CBFLAG_INC_DATA	popt/popt.h	73;"	d
POPT_CBFLAG_POST	popt/popt.h	72;"	d
POPT_CBFLAG_PRE	popt/popt.h	71;"	d
POPT_CBFLAG_SKIPOPTION	popt/popt.h	75;"	d
POPT_CONTEXT_ARG_OPTS	popt/popt.h	110;"	d
POPT_CONTEXT_KEEP_FIRST	popt/popt.h	108;"	d
POPT_CONTEXT_NO_EXEC	popt/popt.h	107;"	d
POPT_CONTEXT_POSIXMEHARDER	popt/popt.h	109;"	d
POPT_ERROR_BADNUMBER	popt/popt.h	89;"	d
POPT_ERROR_BADOPERATION	popt/popt.h	91;"	d
POPT_ERROR_BADOPT	popt/popt.h	84;"	d
POPT_ERROR_BADQUOTE	popt/popt.h	87;"	d
POPT_ERROR_ERRNO	popt/popt.h	88;"	d
POPT_ERROR_MALLOC	popt/popt.h	93;"	d
POPT_ERROR_NOARG	popt/popt.h	83;"	d
POPT_ERROR_NULLARG	popt/popt.h	92;"	d
POPT_ERROR_OPTSTOODEEP	popt/popt.h	86;"	d
POPT_ERROR_OVERFLOW	popt/popt.h	90;"	d
POPT_ERROR_UNWANTEDARG	popt/popt.h	85;"	d
POPT_OPTION_DEPTH	popt/popt.h	14;"	d
POPT_TABLEEND	popt/popt.h	184;"	d
POW10	lib/snprintf.c	/^static LDOUBLE POW10(int exp)$/;"	f	file:
PREALLOCATE_NEEDS_TRUNCATE	rsync.h	684;"	d
PREALLOCATE_NEEDS_TRUNCATE	rsync.h	689;"	d
PRESERVE_DIR_TIMES	rsync.h	1161;"	d
PRESERVE_FILE_TIMES	rsync.h	1160;"	d
PRESERVE_LINK_TIMES	rsync.h	1162;"	d
PRESET_DICT	zlib/zutil.h	88;"	d
PRINTF_ARGS	mongoose.h	169;"	d
PRINTF_ARGS	mongoose.h	171;"	d
PRINTF_FORMAT_STRING	mongoose.h	156;"	d
PRINTF_FORMAT_STRING	mongoose.h	160;"	d
PRINTF_FORMAT_STRING	mongoose.h	162;"	d
PRINTF_FORMAT_STRING	mongoose.h	165;"	d
PROGRAM	tls.c	41;"	d	file:
PROGRESS_HISTORY_SECS	progress.c	33;"	d	file:
PROTECT_URI	mongoose.c	/^  PROTECT_URI, AUTHENTICATION_DOMAIN, SSI_EXTENSIONS, THROTTLE,$/;"	e	enum:__anon3	file:
PROTOCOL_VERSION	rsync.h	101;"	d
PROT_READ	mongoose.c	3987;"	d	file:
PTR_ADD	lib/pool_alloc.c	45;"	d	file:
PTR_EXTRA_CNT	rsync.h	716;"	d
PTR_SIZE	flist.c	89;"	d	file:
PULLBYTE	zlib/inflate.c	433;"	d	file:
PUP	zlib/inffast.c	26;"	d	file:
PUP	zlib/inffast.c	29;"	d	file:
PUT_DELETE_PASSWORDS_FILE	mongoose.c	/^  CGI_EXTENSIONS, CGI_ENVIRONMENT, PUT_DELETE_PASSWORDS_FILE, CGI_INTERPRETER,$/;"	e	enum:__anon3	file:
PVAL	byteorder.h	39;"	d
P_BOOL	loadparm.c	/^	P_BOOL, P_BOOLREV, P_CHAR, P_INTEGER,$/;"	e	enum:__anon16	file:
P_BOOLREV	loadparm.c	/^	P_BOOL, P_BOOLREV, P_CHAR, P_INTEGER,$/;"	e	enum:__anon16	file:
P_CHAR	loadparm.c	/^	P_BOOL, P_BOOLREV, P_CHAR, P_INTEGER,$/;"	e	enum:__anon16	file:
P_ENUM	loadparm.c	/^	P_OCTAL, P_PATH, P_STRING, P_ENUM$/;"	e	enum:__anon16	file:
P_GLOBAL	loadparm.c	/^	P_LOCAL, P_GLOBAL, P_NONE$/;"	e	enum:__anon17	file:
P_INTEGER	loadparm.c	/^	P_BOOL, P_BOOLREV, P_CHAR, P_INTEGER,$/;"	e	enum:__anon16	file:
P_LOCAL	loadparm.c	/^	P_LOCAL, P_GLOBAL, P_NONE$/;"	e	enum:__anon17	file:
P_NONE	loadparm.c	/^	P_LOCAL, P_GLOBAL, P_NONE$/;"	e	enum:__anon17	file:
P_OCTAL	loadparm.c	/^	P_OCTAL, P_PATH, P_STRING, P_ENUM$/;"	e	enum:__anon16	file:
P_PATH	loadparm.c	/^	P_OCTAL, P_PATH, P_STRING, P_ENUM$/;"	e	enum:__anon16	file:
P_STRING	loadparm.c	/^	P_OCTAL, P_PATH, P_STRING, P_ENUM$/;"	e	enum:__anon16	file:
Parameter	params.c	/^static BOOL Parameter( FILE *InFile, BOOL (*pfunc)(char *, char *), int c )$/;"	f	file:
Parse	params.c	/^static int Parse( FILE *InFile,$/;"	f	file:
Pipelining	tech_report.tex	/^blocks of $B$ in order.$/;"	s
Pos	zlib/deflate.h	/^typedef ush Pos;$/;"	t
Posf	zlib/deflate.h	/^typedef Pos FAR Posf;$/;"	t
R0	mongoose.c	3664;"	d	file:
R1	mongoose.c	3665;"	d	file:
R2	mongoose.c	3666;"	d	file:
R3	mongoose.c	3667;"	d	file:
R4	mongoose.c	3668;"	d	file:
RATE_DIFF	mongoose.c	95;"	d	file:
REMOTE_OPTION_ERROR	io.c	149;"	d	file:
REMOTE_OPTION_ERROR2	io.c	150;"	d	file:
REPZ_11_138	zlib/trees.c	58;"	d	file:
REPZ_3_10	zlib/trees.c	55;"	d	file:
REP_3_6	zlib/trees.c	52;"	d	file:
REQUEST_TIMEOUT	mongoose.c	/^  NUM_THREADS, RUN_AS_USER, REWRITE, HIDE_FILES, REQUEST_TIMEOUT,$/;"	e	enum:__anon3	file:
REQ_EXTRA	rsync.h	721;"	d
RERR_CMD_FAILED	errcode.h	61;"	d
RERR_CMD_KILLED	errcode.h	62;"	d
RERR_CMD_NOTFOUND	errcode.h	64;"	d
RERR_CMD_RUN	errcode.h	63;"	d
RERR_CONTIMEOUT	errcode.h	48;"	d
RERR_CRASHED	errcode.h	36;"	d
RERR_DEL_LIMIT	errcode.h	45;"	d
RERR_FILEIO	errcode.h	32;"	d
RERR_FILESELECT	errcode.h	27;"	d
RERR_IPC	errcode.h	35;"	d
RERR_MALLOC	errcode.h	42;"	d
RERR_MESSAGEIO	errcode.h	34;"	d
RERR_OK	errcode.h	24;"	d
RERR_PARTIAL	errcode.h	43;"	d
RERR_PROTOCOL	errcode.h	26;"	d
RERR_SIGNAL	errcode.h	40;"	d
RERR_SIGNAL1	errcode.h	39;"	d
RERR_SOCKETIO	errcode.h	31;"	d
RERR_STARTCLIENT	errcode.h	29;"	d
RERR_STREAMIO	errcode.h	33;"	d
RERR_SYNTAX	errcode.h	25;"	d
RERR_TERMINATED	errcode.h	37;"	d
RERR_TIMEOUT	errcode.h	47;"	d
RERR_UNSUPPORTED	errcode.h	28;"	d
RERR_VANISHED	errcode.h	44;"	d
RERR_WAITCHILD	errcode.h	41;"	d
RESTORE	zlib/inflate.c	414;"	d	file:
RETSIGTYPE	config.h	639;"	d
RETURN_ERROR_IF	syscall.c	44;"	d	file:
RETURN_ERROR_IF_RO_OR_LO	syscall.c	52;"	d	file:
REV	zlib/crc32.c	56;"	d	file:
REVERSE	zlib/inflate.c	468;"	d	file:
REWRITE	mongoose.c	/^  NUM_THREADS, RUN_AS_USER, REWRITE, HIDE_FILES, REQUEST_TIMEOUT,$/;"	e	enum:__anon3	file:
RL_CONVERT	rsync.h	963;"	d
RL_DUMP_COMMENTS	rsync.h	962;"	d
RL_EOL_NULLS	rsync.h	961;"	d
ROUND	lib/snprintf.c	/^static LLONG ROUND(LDOUBLE value)$/;"	f	file:
ROUND1	lib/mdfour.c	38;"	d	file:
ROUND2	lib/mdfour.c	39;"	d	file:
ROUND3	lib/mdfour.c	40;"	d	file:
ROUND_UP_1024	rsync.h	144;"	d
RPRE_LEN	xattrs.c	67;"	d	file:
RSYNCD_SYSCONF	config.h	642;"	d
RSYNCD_USERCONF	rsync.h	30;"	d
RSYNC_NAME	rsync.h	28;"	d
RSYNC_PATH	config.h	645;"	d
RSYNC_PORT	rsync.h	132;"	d
RSYNC_PREFIX	xattrs.c	62;"	d	file:
RSYNC_PREFIX	xattrs.c	65;"	d	file:
RSYNC_RSH	config.h	648;"	d
RSYNC_RSH_ENV	rsync.h	25;"	d
RSYNC_RSH_IO_ENV	rsync.h	26;"	d
RSYNC_VERSION	config.h	654;"	d
RSYNC_XAL_INITIAL	xattrs.c	41;"	d	file:
RSYNC_XAL_LIST_INITIAL	xattrs.c	42;"	d	file:
RTLD_LAZY	mongoose.c	141;"	d	file:
RULE_STRCMP	exclude.c	758;"	d	file:
RUN_AS_USER	mongoose.c	/^  NUM_THREADS, RUN_AS_USER, REWRITE, HIDE_FILES, REQUEST_TIMEOUT,$/;"	e	enum:__anon3	file:
Results	tech_report.tex	/^both directions for most of the time. $/;"	s
S	lib/md5.c	58;"	d	file:
SAFE_FREE	lib/sysacls.c	/^void SAFE_FREE(void *mem)$/;"	f
SECTION_PTR	loadparm.c	91;"	d	file:
SEEK_CUR	zlib/zconf.h	297;"	d
SEEK_END	zlib/zconf.h	298;"	d
SEEK_SET	zlib/zconf.h	296;"	d
SELECT_TIMEOUT	io.c	41;"	d	file:
SEPARATOR	zlib/trees.c	326;"	d	file:
SERVER_FILTERS	rsync.h	157;"	d
SETACL	lib/sysacls.c	346;"	d	file:
SHA1Final	mongoose.c	/^static void SHA1Final(unsigned char digest[20], SHA1_CTX* context) {$/;"	f	file:
SHA1HANDSOFF	mongoose.c	3644;"	d	file:
SHA1Init	mongoose.c	/^static void SHA1Init(SHA1_CTX* context) {$/;"	f	file:
SHA1Transform	mongoose.c	/^static void SHA1Transform(uint32_t state[5], const unsigned char buffer[64]) {$/;"	f	file:
SHA1Update	mongoose.c	/^static void SHA1Update(SHA1_CTX* context, const unsigned char* data,$/;"	f	file:
SHA1_CTX	mongoose.c	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon5	file:
SHELL	Makefile	/^SHELL=\/bin\/sh$/;"	m
SHORT_SUM_LENGTH	rsync.h	645;"	d
SHUT_WR	mongoose.c	127;"	d	file:
SIGACTION	rsync.h	1056;"	d
SIGACTION	rsync.h	1059;"	d
SIGACTMASK	main.c	165;"	d	file:
SIGACTMASK	main.c	167;"	d	file:
SIGKILL	mongoose.c	1262;"	d	file:
SIGNED_CHAR_OK	config.h	660;"	d
SIGNIFICANT_ITEM_FLAGS	rsync.h	204;"	d
SIVAL	byteorder.h	/^SIVAL(char *buf, int pos, uint32 val)$/;"	f
SIVAL	byteorder.h	43;"	d
SIVAL	byteorder.h	57;"	d
SIVALX	byteorder.h	42;"	d
SIVALu	byteorder.h	/^SIVALu(uchar *buf, int pos, uint32 val)$/;"	f
SIVALu	byteorder.h	46;"	d
SIVALu	byteorder.h	60;"	d
SIZEOF	rounding.c	23;"	d	file:
SIZEOF_CAPITAL_OFF_T	rsync.h	564;"	d
SIZEOF_CAPITAL_OFF_T	rsync.h	569;"	d
SIZEOF_INT	config.h	663;"	d
SIZEOF_INT16_T	config.h	666;"	d
SIZEOF_INT32	rsync.h	530;"	d
SIZEOF_INT32	rsync.h	533;"	d
SIZEOF_INT32	rsync.h	536;"	d
SIZEOF_INT32	rsync.h	539;"	d
SIZEOF_INT32	rsync.h	542;"	d
SIZEOF_INT32	rsync.h	545;"	d
SIZEOF_INT32	rsync.h	550;"	d
SIZEOF_INT32_T	config.h	669;"	d
SIZEOF_INT64	rsync.h	580;"	d
SIZEOF_INT64	rsync.h	583;"	d
SIZEOF_INT64	rsync.h	586;"	d
SIZEOF_INT64	rsync.h	589;"	d
SIZEOF_INT64	rsync.h	592;"	d
SIZEOF_INT64	rsync.h	595;"	d
SIZEOF_INT64	rsync.h	598;"	d
SIZEOF_INT64	rsync.h	601;"	d
SIZEOF_INT64	rsync.h	604;"	d
SIZEOF_INT64	rsync.h	608;"	d
SIZEOF_INT64_T	config.h	672;"	d
SIZEOF_LONG	config.h	675;"	d
SIZEOF_LONG_LONG	config.h	678;"	d
SIZEOF_OFF64_T	config.h	681;"	d
SIZEOF_OFF_T	config.h	684;"	d
SIZEOF_OFF_T	rsync.h	489;"	d
SIZEOF_OFF_T	rsync.h	490;"	d
SIZEOF_SHORT	config.h	687;"	d
SIZEOF_TIME_T	config.h	690;"	d
SIZEOF_UINT16_T	config.h	693;"	d
SIZEOF_UINT32_T	config.h	696;"	d
SLASH_ENDING_NAME	flist.c	103;"	d	file:
SLASH_WILD3_SUFFIX	exclude.c	50;"	d	file:
SMALLEST	zlib/trees.c	426;"	d	file:
SMALL_EXTENT	rsync.h	807;"	d
SMALL_MEDIUM	zlib/zconf.h	183;"	d
SMALL_MEDIUM	zlib/zconf.h	192;"	d
SMB_ACL_ENTRY_T	lib/sysacls.h	/^typedef struct acl *SMB_ACL_ENTRY_T;$/;"	t	typeref:struct:acl
SMB_ACL_ENTRY_T	lib/sysacls.h	198;"	d
SMB_ACL_ENTRY_T	lib/sysacls.h	231;"	d
SMB_ACL_ENTRY_T	lib/sysacls.h	265;"	d
SMB_ACL_ENTRY_T	lib/sysacls.h	54;"	d
SMB_ACL_ENTRY_T	lib/sysacls.h	84;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	123;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	166;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	200;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	245;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	270;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	56;"	d
SMB_ACL_FIRST_ENTRY	lib/sysacls.h	86;"	d
SMB_ACL_GROUP	lib/sysacls.h	109;"	d
SMB_ACL_GROUP	lib/sysacls.h	152;"	d
SMB_ACL_GROUP	lib/sysacls.h	187;"	d
SMB_ACL_GROUP	lib/sysacls.h	240;"	d
SMB_ACL_GROUP	lib/sysacls.h	268;"	d
SMB_ACL_GROUP	lib/sysacls.h	47;"	d
SMB_ACL_GROUP	lib/sysacls.h	77;"	d
SMB_ACL_GROUP_OBJ	lib/sysacls.h	110;"	d
SMB_ACL_GROUP_OBJ	lib/sysacls.h	153;"	d
SMB_ACL_GROUP_OBJ	lib/sysacls.h	188;"	d
SMB_ACL_GROUP_OBJ	lib/sysacls.h	241;"	d
SMB_ACL_GROUP_OBJ	lib/sysacls.h	48;"	d
SMB_ACL_GROUP_OBJ	lib/sysacls.h	78;"	d
SMB_ACL_LOSES_SPECIAL_MODE_BITS	lib/sysacls.h	135;"	d
SMB_ACL_MASK	lib/sysacls.h	112;"	d
SMB_ACL_MASK	lib/sysacls.h	155;"	d
SMB_ACL_MASK	lib/sysacls.h	190;"	d
SMB_ACL_MASK	lib/sysacls.h	243;"	d
SMB_ACL_MASK	lib/sysacls.h	50;"	d
SMB_ACL_MASK	lib/sysacls.h	80;"	d
SMB_ACL_NEED_SORT	lib/sysacls.h	132;"	d
SMB_ACL_NEED_SORT	lib/sysacls.h	175;"	d
SMB_ACL_NEED_SORT	lib/sysacls.h	209;"	d
SMB_ACL_NEED_SORT	lib/sysacls.h	254;"	d
SMB_ACL_NEED_SORT	lib/sysacls.h	65;"	d
SMB_ACL_NEED_SORT	lib/sysacls.h	95;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	124;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	167;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	201;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	246;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	271;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	57;"	d
SMB_ACL_NEXT_ENTRY	lib/sysacls.h	87;"	d
SMB_ACL_OTHER	lib/sysacls.h	111;"	d
SMB_ACL_OTHER	lib/sysacls.h	154;"	d
SMB_ACL_OTHER	lib/sysacls.h	189;"	d
SMB_ACL_OTHER	lib/sysacls.h	242;"	d
SMB_ACL_OTHER	lib/sysacls.h	49;"	d
SMB_ACL_OTHER	lib/sysacls.h	79;"	d
SMB_ACL_T	lib/sysacls.h	/^typedef struct SMB_ACL_T {$/;"	s
SMB_ACL_T	lib/sysacls.h	/^} *SMB_ACL_T;$/;"	t	typeref:struct:SMB_ACL_T
SMB_ACL_T	lib/sysacls.h	232;"	d
SMB_ACL_T	lib/sysacls.h	263;"	d
SMB_ACL_T	lib/sysacls.h	52;"	d
SMB_ACL_T	lib/sysacls.h	82;"	d
SMB_ACL_TAG_T	lib/sysacls.h	/^typedef int SMB_ACL_TAG_T;$/;"	t
SMB_ACL_TAG_T	lib/sysacls.h	181;"	d
SMB_ACL_TAG_T	lib/sysacls.h	234;"	d
SMB_ACL_TAG_T	lib/sysacls.h	260;"	d
SMB_ACL_TAG_T	lib/sysacls.h	41;"	d
SMB_ACL_TAG_T	lib/sysacls.h	71;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	126;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	169;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	203;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	248;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	273;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	59;"	d
SMB_ACL_TYPE_ACCESS	lib/sysacls.h	89;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	127;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	170;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	204;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	249;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	274;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	60;"	d
SMB_ACL_TYPE_DEFAULT	lib/sysacls.h	90;"	d
SMB_ACL_TYPE_T	lib/sysacls.h	/^typedef int SMB_ACL_TYPE_T;$/;"	t
SMB_ACL_TYPE_T	lib/sysacls.h	182;"	d
SMB_ACL_TYPE_T	lib/sysacls.h	235;"	d
SMB_ACL_TYPE_T	lib/sysacls.h	261;"	d
SMB_ACL_TYPE_T	lib/sysacls.h	42;"	d
SMB_ACL_TYPE_T	lib/sysacls.h	72;"	d
SMB_ACL_USER	lib/sysacls.h	107;"	d
SMB_ACL_USER	lib/sysacls.h	150;"	d
SMB_ACL_USER	lib/sysacls.h	185;"	d
SMB_ACL_USER	lib/sysacls.h	238;"	d
SMB_ACL_USER	lib/sysacls.h	267;"	d
SMB_ACL_USER	lib/sysacls.h	45;"	d
SMB_ACL_USER	lib/sysacls.h	75;"	d
SMB_ACL_USER_OBJ	lib/sysacls.h	108;"	d
SMB_ACL_USER_OBJ	lib/sysacls.h	151;"	d
SMB_ACL_USER_OBJ	lib/sysacls.h	186;"	d
SMB_ACL_USER_OBJ	lib/sysacls.h	239;"	d
SMB_ACL_USER_OBJ	lib/sysacls.h	46;"	d
SMB_ACL_USER_OBJ	lib/sysacls.h	76;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	129;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	172;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	206;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	251;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	276;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	62;"	d
SMB_ACL_VALID_NAME_BITS	lib/sysacls.h	92;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	130;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	173;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	207;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	252;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	277;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	63;"	d
SMB_ACL_VALID_OBJ_BITS	lib/sysacls.h	93;"	d
SMB_MALLOC	lib/getaddrinfo.c	49;"	d	file:
SMB_MALLOC	lib/sysacls.h	31;"	d
SMB_MALLOC_ARRAY	lib/sysacls.h	33;"	d
SMB_MALLOC_P	lib/sysacls.h	32;"	d
SMB_REALLOC	lib/sysacls.h	34;"	d
SMB_STRDUP	lib/getaddrinfo.c	53;"	d	file:
SOCKET	mongoose.c	/^typedef int SOCKET;$/;"	t	file:
SOCK_OPT_TYPES	socket.c	/^enum SOCK_OPT_TYPES {OPT_BOOL,OPT_INT,OPT_ON};$/;"	g	file:
SOMAXCONN	mongoose.c	302;"	d	file:
SPARSE_WRITE_SIZE	rsync.h	134;"	d
SPRE_LEN	xattrs.c	58;"	d	file:
SP_DEFAULT	rsync.h	212;"	d
SP_KEEP_DOT_DIRS	rsync.h	213;"	d
SSI_EXTENSIONS	mongoose.c	/^  PROTECT_URI, AUTHENTICATION_DOMAIN, SSI_EXTENSIONS, THROTTLE,$/;"	e	enum:__anon3	file:
SSL	mongoose.c	/^typedef struct ssl_st SSL;$/;"	t	typeref:struct:ssl_st	file:
SSL_CERTIFICATE	mongoose.c	/^  EXTRA_MIME_TYPES, LISTENING_PORTS, DOCUMENT_ROOT, SSL_CERTIFICATE,$/;"	e	enum:__anon3	file:
SSL_CTX	mongoose.c	/^typedef struct ssl_ctx_st SSL_CTX;$/;"	t	typeref:struct:ssl_ctx_st	file:
SSL_CTX_free	mongoose.c	342;"	d	file:
SSL_CTX_new	mongoose.c	333;"	d	file:
SSL_CTX_set_default_passwd_cb	mongoose.c	340;"	d	file:
SSL_CTX_set_verify	mongoose.c	348;"	d	file:
SSL_CTX_use_PrivateKey_file	mongoose.c	336;"	d	file:
SSL_CTX_use_certificate_chain_file	mongoose.c	344;"	d	file:
SSL_CTX_use_certificate_file	mongoose.c	338;"	d	file:
SSL_LIB	mongoose.c	117;"	d	file:
SSL_LIB	mongoose.c	224;"	d	file:
SSL_LIB	mongoose.c	228;"	d	file:
SSL_METHOD	mongoose.c	/^typedef struct ssl_method_st SSL_METHOD;$/;"	t	typeref:struct:ssl_method_st	file:
SSL_accept	mongoose.c	326;"	d	file:
SSL_connect	mongoose.c	327;"	d	file:
SSL_free	mongoose.c	325;"	d	file:
SSL_get_error	mongoose.c	330;"	d	file:
SSL_library_init	mongoose.c	335;"	d	file:
SSL_load_error_strings	mongoose.c	343;"	d	file:
SSL_new	mongoose.c	332;"	d	file:
SSL_pending	mongoose.c	347;"	d	file:
SSL_read	mongoose.c	328;"	d	file:
SSL_set_fd	mongoose.c	331;"	d	file:
SSL_write	mongoose.c	329;"	d	file:
SSLv23_client_method	mongoose.c	346;"	d	file:
SSLv23_server_method	mongoose.c	334;"	d	file:
SSVALX	byteorder.h	41;"	d
START_BUMP	rsync.h	726;"	d
STATE_1ST_HALF	chmod.c	42;"	d	file:
STATE_2ND_HALF	chmod.c	43;"	d	file:
STATE_ERROR	chmod.c	41;"	d	file:
STATE_OCTAL_NUM	chmod.c	44;"	d	file:
STATIC_TREES	zlib/zutil.h	80;"	d
STDC	zlib/zconf.h	106;"	d
STDC	zlib/zconf.h	109;"	d
STDC	zlib/zconf.h	112;"	d
STDC	zlib/zconf.h	115;"	d
STDC	zlib/zconf.h	119;"	d
STDC	zlib/zconf.h	97;"	d
STDC99	zlib/zconf.h	101;"	d
STDC_HEADERS	config.h	707;"	d
STDERR_FILENO	rsync.h	1075;"	d
STDIN_FILENO	rsync.h	1067;"	d
STDOUT_FILENO	rsync.h	1071;"	d
STORED	zlib/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anon9
STORED_BLOCK	zlib/zutil.h	79;"	d
STR	mongoose.c	105;"	d	file:
STRUCT_FILE_INITIALIZER	mongoose.c	427;"	d	file:
STRUCT_STAT	rsync.h	563;"	d
STRUCT_STAT	rsync.h	567;"	d
STRX	mongoose.c	104;"	d	file:
ST_MTIME_NSEC	rsync.h	388;"	d
ST_MTIME_NSEC	rsync.h	390;"	d
SUBPROTOCOL_VERSION	rsync.h	106;"	d
SUM2HASH	match.c	49;"	d	file:
SUM2HASH2	match.c	48;"	d	file:
SUMFLG_SAME_OFFSET	rsync.h	824;"	d
SUM_EXTRA_CNT	rsync.h	719;"	d
SUM_LENGTH	rsync.h	644;"	d
SUPPORT_HARD_LINKS	rsync.h	1052;"	d
SUPPORT_LINKS	rsync.h	1046;"	d
SUPPORT_PREALLOCATION	rsync.h	681;"	d
SUPPORT_PREALLOCATION	rsync.h	683;"	d
SUPPORT_PREALLOCATION	rsync.h	688;"	d
SUPPORT_XATTRS	config.h	713;"	d
SYMLINK_PREFIX	rsync.h	35;"	d
SYMLINK_PREFIX_LEN	rsync.h	36;"	d
SYNC	zlib/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anon9
SYS16BIT	zlib/zconf.h	79;"	d
SYS2UNIX_TIME	mongoose.c	97;"	d	file:
SYSTEM_PREFIX	xattrs.c	57;"	d	file:
S_IRUSR	rsync.h	1079;"	d
S_ISBLK	rsync.h	1109;"	d
S_ISCHR	rsync.h	1113;"	d
S_ISDIR	rsync.h	1133;"	d
S_ISFIFO	rsync.h	1126;"	d
S_ISFIFO	rsync.h	1128;"	d
S_ISLNK	rsync.h	1105;"	d
S_ISREG	rsync.h	1137;"	d
S_ISSOCK	rsync.h	1118;"	d
S_ISSOCK	rsync.h	1120;"	d
S_ISVTX	rsync.h	1091;"	d
S_IWUSR	rsync.h	1083;"	d
Section	params.c	/^static BOOL Section( FILE *InFile, BOOL (*sfunc)(char *) )$/;"	f	file:
TABLE	zlib/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anon9
TBLS	zlib/crc32.c	62;"	d	file:
TBLS	zlib/crc32.c	64;"	d	file:
THROTTLE	mongoose.c	/^  PROTECT_URI, AUTHENTICATION_DOMAIN, SSI_EXTENSIONS, THROTTLE,$/;"	e	enum:__anon3	file:
TIME	zlib/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anon9
TIMEOUT_ENV	testrun.c	6;"	d	file:
TIMEOUT_SECONDS	support/savetransfer.c	28;"	d	file:
TIME_WITH_SYS_TIME	config.h	716;"	d
TLS_OBJ	Makefile	/^TLS_OBJ = tls.o syscall.o lib\/compat.o lib\/snprintf.o lib\/permstring.o lib\/sysxattrs.o $(popt_OBJS)$/;"	m
TMPNAME_SUFFIX	receiver.c	70;"	d	file:
TMPNAME_SUFFIX_LEN	receiver.c	71;"	d	file:
TOKENRUN_LONG	token.c	266;"	d	file:
TOKENRUN_REL	token.c	269;"	d	file:
TOKEN_LONG	token.c	265;"	d	file:
TOKEN_REL	token.c	268;"	d	file:
TOO_FAR	zlib/deflate.c	111;"	d	file:
TRADITIONAL_TABLESIZE	match.c	43;"	d	file:
TRIMSLASH_OBJ	Makefile	/^TRIMSLASH_OBJ = trimslash.o syscall.o lib\/compat.o lib\/snprintf.o$/;"	m
TRUE	lib/wildmatch.c	19;"	d	file:
TRY_FREE	zlib/zutil.h	270;"	d
TYPE	zlib/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anon9
TYPEDO	zlib/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anon9
TYPE_DEVICE	generator.c	/^    TYPE_DIR, TYPE_SPECIAL, TYPE_DEVICE, TYPE_SYMLINK$/;"	e	enum:nonregtype	file:
TYPE_DIR	generator.c	/^    TYPE_DIR, TYPE_SPECIAL, TYPE_DEVICE, TYPE_SYMLINK$/;"	e	enum:nonregtype	file:
TYPE_SPECIAL	generator.c	/^    TYPE_DIR, TYPE_SPECIAL, TYPE_DEVICE, TYPE_SYMLINK$/;"	e	enum:nonregtype	file:
TYPE_SYMLINK	generator.c	/^    TYPE_DIR, TYPE_SPECIAL, TYPE_DEVICE, TYPE_SYMLINK$/;"	e	enum:nonregtype	file:
T_UNSAFE_OBJ	Makefile	/^T_UNSAFE_OBJ = t_unsafe.o syscall.o util.o t_stub.o lib\/compat.o lib\/snprintf.o lib\/wildmatch.o$/;"	m
The problem	tech_report.tex	/^\\end{abstract}$/;"	s
Trace	zlib/zutil.h	249;"	d
Trace	zlib/zutil.h	256;"	d
Tracec	zlib/zutil.h	252;"	d
Tracec	zlib/zutil.h	259;"	d
Tracecv	zlib/zutil.h	253;"	d
Tracecv	zlib/zutil.h	260;"	d
Tracev	zlib/zutil.h	250;"	d
Tracev	zlib/zutil.h	257;"	d
Tracevv	zlib/zutil.h	251;"	d
Tracevv	zlib/zutil.h	258;"	d
TreeBuilder	testhelp/maketree.py	/^class TreeBuilder:$/;"	c
True	rsync.h	22;"	d
UNALIGNED_OK	zlib/zconf.h	92;"	d
UNIT	util.c	1467;"	d	file:
UNUSED	getgroups.c	/^main(UNUSED(int argc), UNUSED(char *argv[]))$/;"	f
UNUSED	lib/sysacls.c	/^int sys_acl_delete_def_file(UNUSED(const char *name))$/;"	f
UNUSED	main.c	/^RETSIGTYPE remember_children(UNUSED(int val))$/;"	f
UNUSED	main.c	/^static RETSIGTYPE rsync_panic_handler(UNUSED(int whatsig))$/;"	f	file:
UNUSED	main.c	/^static RETSIGTYPE sigusr1_handler(UNUSED(int val))$/;"	f	file:
UNUSED	main.c	/^static RETSIGTYPE sigusr2_handler(UNUSED(int val))$/;"	f	file:
UNUSED	popt/system.h	126;"	d
UNUSED	rounding.c	/^ int main(UNUSED(int argc), UNUSED(char *argv[]))$/;"	f
UNUSED	rsync.h	984;"	d
UNUSED	socket.c	/^static RETSIGTYPE contimeout_handler(UNUSED(int val))$/;"	f	file:
UNUSED	socket.c	/^static RETSIGTYPE sigchld_handler(UNUSED(int val))$/;"	f	file:
UNUSED	t_stub.c	/^		  UNUSED(const char *name), UNUSED(int name_is_dir))$/;"	f
UNUSED	t_stub.c	/^ BOOL lp_use_chroot(UNUSED(int mod))$/;"	f
UNUSED	t_stub.c	/^ char *lp_name(UNUSED(int mod))$/;"	f
UNUSED	t_stub.c	/^ int copy_xattrs(UNUSED(const char *source), UNUSED(const char *dest))$/;"	f
UPDATE	zlib/inflate.c	377;"	d	file:
UPDATE	zlib/inflate.c	380;"	d	file:
UPDATE_HASH	zlib/deflate.c	172;"	d	file:
UPRE_LEN	xattrs.c	56;"	d	file:
URL_PREFIX	rsync.h	33;"	d
USER_PREFIX	xattrs.c	55;"	d	file:
USER_PRIORITY	options.c	230;"	d	file:
USE_ICONV_OPEN	config.h	719;"	d
USE_STAT64_FUNCS	rsync.h	568;"	d
UTF8_CHARSET	config.h	722;"	d
UVAL	byteorder.h	35;"	d
Usage	support/lsh.pl	/^Usage: lsh [-l user] [--sudo] [--no-cd] localhost COMMAND [...]$/;"	l
VA_COPY	lib/snprintf.c	165;"	d	file:
VA_COPY	lib/snprintf.c	168;"	d	file:
VA_COPY	lib/snprintf.c	170;"	d	file:
VERSION	Makefile	/^VERSION=3.1.0dev$/;"	m
Vars	loadparm.c	/^static all_vars Vars;$/;"	v	file:
Vars_stack	loadparm.c	/^static item_list Vars_stack = EMPTY_ITEM_LIST;$/;"	v	file:
WEXITSTATUS	rsync.h	1204;"	d
WIFEXITED	rsync.h	1207;"	d
WILD_TEST_ITERATIONS	wildtest.c	22;"	d	file:
WIN32	zlib/zconf.h	73;"	d
WIN32_LEAN_AND_MEAN	mongoose.c	42;"	d	file:
WINCDECL	mongoose.c	126;"	d	file:
WINCDECL	mongoose.c	245;"	d	file:
WINDOWS	zlib/zconf.h	69;"	d
WORDS_BIGENDIAN	config.h	728;"	d
WRITE_SIZE	rsync.h	135;"	d
W_CLI	options.c	233;"	d	file:
W_REC	options.c	236;"	d	file:
W_SND	options.c	235;"	d	file:
W_SRV	options.c	234;"	d	file:
WriteMemoryCallback	http.c	/^WriteMemoryCallback(void *contents, size_t size, size_t nmemb, void *userp)$/;"	f	file:
WriteMemoryCallback	main.c	/^WriteMemoryCallback(void *contents, size_t size, size_t nmemb, void *userp)$/;"	f	file:
XACC_ACL_ATTR	xattrs.c	72;"	d	file:
XACC_ACL_SUFFIX	xattrs.c	71;"	d	file:
XATTR_ABBREV	xattrs.c	49;"	d	file:
XATTR_READY	rsync.h	1001;"	d
XDEF_ACL_ATTR	xattrs.c	74;"	d	file:
XDEF_ACL_SUFFIX	xattrs.c	73;"	d	file:
XFLAG_NAME_FOLLOWS	acls.c	52;"	d	file:
XFLAG_NAME_IS_USER	acls.c	53;"	d	file:
XFLG_ABS_IF_SLASH	rsync.h	163;"	d
XFLG_ANCHORED2ABS	rsync.h	162;"	d
XFLG_DIR2WILD3	rsync.h	164;"	d
XFLG_FATAL_ERRORS	rsync.h	160;"	d
XFLG_OLD_PREFIXES	rsync.h	161;"	d
XMIT_EXTENDED_FLAGS	rsync.h	49;"	d
XMIT_GROUP_NAME_FOLLOWS	rsync.h	61;"	d
XMIT_GROUP_OBJ	acls.c	39;"	d	file:
XMIT_HLINKED	rsync.h	57;"	d
XMIT_HLINK_FIRST	rsync.h	62;"	d
XMIT_IO_ERROR_ENDLIST	rsync.h	63;"	d
XMIT_LONG_NAME	rsync.h	53;"	d
XMIT_MASK_OBJ	acls.c	40;"	d	file:
XMIT_MOD_NSEC	rsync.h	64;"	d
XMIT_NAME_LIST	acls.c	42;"	d	file:
XMIT_NO_CONTENT_DIR	rsync.h	56;"	d
XMIT_OTHER_OBJ	acls.c	41;"	d	file:
XMIT_RDEV_MINOR_8_pre30	rsync.h	60;"	d
XMIT_SAME_DEV_pre30	rsync.h	58;"	d
XMIT_SAME_GID	rsync.h	51;"	d
XMIT_SAME_MODE	rsync.h	47;"	d
XMIT_SAME_NAME	rsync.h	52;"	d
XMIT_SAME_RDEV_MAJOR	rsync.h	55;"	d
XMIT_SAME_RDEV_pre28	rsync.h	48;"	d
XMIT_SAME_TIME	rsync.h	54;"	d
XMIT_SAME_UID	rsync.h	50;"	d
XMIT_TOP_DIR	rsync.h	46;"	d
XMIT_USER_NAME_FOLLOWS	rsync.h	59;"	d
XMIT_USER_OBJ	acls.c	38;"	d	file:
XSTATE_ABBREV	xattrs.c	51;"	d	file:
XSTATE_DONE	xattrs.c	52;"	d	file:
XSTATE_TODO	xattrs.c	53;"	d	file:
XSTAT_ATTR	tls.c	59;"	d	file:
XSTAT_ATTR	tls.c	61;"	d	file:
XSTAT_ATTR	xattrs.c	70;"	d	file:
XSTAT_SUFFIX	xattrs.c	69;"	d	file:
ZALLOC	zlib/zutil.h	267;"	d
ZCONF_H	zlib/zconf.h	9;"	d
ZEXPORT	zlib/zconf.h	225;"	d
ZEXPORT	zlib/zconf.h	237;"	d
ZEXPORT	zlib/zconf.h	240;"	d
ZEXPORT	zlib/zconf.h	250;"	d
ZEXPORTVA	zlib/zconf.h	227;"	d
ZEXPORTVA	zlib/zconf.h	229;"	d
ZEXPORTVA	zlib/zconf.h	238;"	d
ZEXPORTVA	zlib/zconf.h	241;"	d
ZEXPORTVA	zlib/zconf.h	253;"	d
ZEXTERN	zlib/zconf.h	208;"	d
ZEXTERN	zlib/zconf.h	210;"	d
ZEXTERN	zlib/zconf.h	247;"	d
ZFREE	zlib/zutil.h	269;"	d
ZLIB_H	zlib/zlib.h	32;"	d
ZLIB_INTERNAL	zlib/adler32.c	8;"	d	file:
ZLIB_INTERNAL	zlib/compress.c	8;"	d	file:
ZLIB_INTERNAL	zlib/zutil.h	16;"	d
ZLIB_VERNUM	zlib/zlib.h	41;"	d
ZLIB_VERSION	zlib/zlib.h	40;"	d
ZUTIL_H	zlib/zutil.h	14;"	d
Z_ASCII	zlib/zlib.h	199;"	d
Z_BEST_COMPRESSION	zlib/zlib.h	186;"	d
Z_BEST_SPEED	zlib/zlib.h	185;"	d
Z_BINARY	zlib/zlib.h	197;"	d
Z_BLOCK	zlib/zlib.h	167;"	d
Z_BUF_ERROR	zlib/zlib.h	178;"	d
Z_DATA_ERROR	zlib/zlib.h	176;"	d
Z_DEFAULT_COMPRESSION	zlib/zlib.h	187;"	d
Z_DEFAULT_STRATEGY	zlib/zlib.h	194;"	d
Z_DEFLATED	zlib/zlib.h	203;"	d
Z_ERRNO	zlib/zlib.h	174;"	d
Z_FILTERED	zlib/zlib.h	190;"	d
Z_FINISH	zlib/zlib.h	166;"	d
Z_FIXED	zlib/zlib.h	193;"	d
Z_FULL_FLUSH	zlib/zlib.h	165;"	d
Z_HUFFMAN_ONLY	zlib/zlib.h	191;"	d
Z_INSERT_ONLY	token.c	27;"	d	file:
Z_INSERT_ONLY	zlib/zlib.h	169;"	d
Z_MEM_ERROR	zlib/zlib.h	177;"	d
Z_NEED_DICT	zlib/zlib.h	173;"	d
Z_NO_COMPRESSION	zlib/zlib.h	184;"	d
Z_NO_FLUSH	zlib/zlib.h	162;"	d
Z_NULL	zlib/zlib.h	206;"	d
Z_OK	zlib/zlib.h	171;"	d
Z_PARTIAL_FLUSH	zlib/zlib.h	163;"	d
Z_RLE	zlib/zlib.h	192;"	d
Z_STREAM_END	zlib/zlib.h	172;"	d
Z_STREAM_ERROR	zlib/zlib.h	175;"	d
Z_SYNC_FLUSH	zlib/zlib.h	164;"	d
Z_TEXT	zlib/zlib.h	198;"	d
Z_UNKNOWN	zlib/zlib.h	200;"	d
Z_VERSION_ERROR	zlib/zlib.h	179;"	d
_	popt/poptint.h	107;"	d
_	popt/poptint.h	109;"	d
_CRT_SECURE_NO_WARNINGS	mongoose.c	22;"	d	file:
_DARWIN_UNLIMITED_SELECT	mongoose.c	295;"	d	file:
_GNU_SOURCE	config.h	740;"	d
_Insure_trap_error	util.c	/^int _Insure_trap_error(int a1, int a2, int a3, int a4, int a5, int a6)$/;"	f
_LARGEFILE_SOURCE	mongoose.c	27;"	d	file:
_POSIX_	mongoose.c	123;"	d	file:
_PTRDIFF_T_DEFINED	zlib/zutil.h	162;"	d
_S_IFLNK	rsync.h	1101;"	d
_S_IFMT	rsync.h	1097;"	d
_WIN32_WINNT	mongoose.c	72;"	d	file:
_WIN32_WINNT	mongoose.c	73;"	d	file:
_XOPEN_SOURCE	mongoose.c	25;"	d	file:
__PBM_BITS	popt/poptint.h	43;"	d
__PBM_IX	popt/poptint.h	36;"	d
__PBM_MASK	popt/poptint.h	37;"	d
__PBM_NBITS	popt/poptint.h	35;"	d
__STDC_FORMAT_MACROS	mongoose.c	28;"	d	file:
__STDC_LIMIT_MACROS	mongoose.c	29;"	d	file:
__attribute__	popt/system.h	50;"	d
__attribute__	rsync.h	977;"	d
__func__	mongoose.c	106;"	d	file:
__func__	mongoose.c	110;"	d	file:
__init__	testhelp/maketree.py	/^    def __init__(self):$/;"	m	class:TreeBuilder
__pbm_bits	popt/poptint.h	/^typedef	unsigned int __pbm_bits;$/;"	t
_dist_code	zlib/trees.c	/^uch _dist_code[DIST_CODE_LEN];$/;"	v
_dist_code	zlib/trees.h	/^const uch _dist_code[DIST_CODE_LEN] = {$/;"	v
_exit_cleanup	cleanup.c	/^NORETURN void _exit_cleanup(int code, const char *file, int line)$/;"	f
_exit_cleanup	t_stub.c	/^ void _exit_cleanup(int code, const char *file, int line)$/;"	f
_free	popt/poptint.h	/^_free(\/*@only@*\/ \/*@null@*\/ const void * p)$/;"	f
_halloc	zlib/zutil.c	271;"	d	file:
_hfree	zlib/zutil.c	272;"	d	file:
_length_code	zlib/trees.c	/^uch _length_code[MAX_MATCH-MIN_MATCH+1];$/;"	v
_length_code	zlib/trees.h	/^const uch _length_code[MAX_MATCH-MIN_MATCH+1]= {$/;"	v
_new_array	util.c	/^void *_new_array(unsigned long num, unsigned int size, int use_calloc)$/;"	f
_popt_debug	popt/popt.c	/^int _popt_debug = 0;$/;"	v
_realloc_array	util.c	/^void *_realloc_array(void *ptr, unsigned int size, size_t num)$/;"	f
_tr_align	zlib/trees.c	/^void _tr_align(s)$/;"	f
_tr_flush_block	zlib/trees.c	/^void _tr_flush_block(s, buf, stored_len, eof)$/;"	f
_tr_init	zlib/trees.c	/^void _tr_init(s)$/;"	f
_tr_stored_block	zlib/trees.c	/^void _tr_stored_block(s, buf, stored_len, eof)$/;"	f
_tr_tally	zlib/trees.c	/^int _tr_tally (s, dist, lc)$/;"	f
_tr_tally_dist	zlib/deflate.h	315;"	d
_tr_tally_dist	zlib/deflate.h	327;"	d
_tr_tally_lit	zlib/deflate.h	308;"	d
_tr_tally_lit	zlib/deflate.h	326;"	d
abs_val	lib/snprintf.c	/^static LDOUBLE abs_val(LDOUBLE value)$/;"	f	file:
absize	util.c	/^	int absize, fbsize, maxargs, argc;$/;"	m	struct:glob_data	file:
abuffer	testhelp/maketree.py	/^abuffer = 'a' * 1024$/;"	v
ac_fn_c_check_func	configure.sh	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure.sh	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure.sh	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure.sh	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_check_type	configure.sh	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	configure.sh	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure.sh	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure.sh	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure.sh	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure.sh	/^ac_fn_c_try_run ()$/;"	f
acc_acl	rsync.h	/^    struct rsync_acl *acc_acl; \/* access ACL *\/$/;"	m	struct:__anon33	typeref:struct:__anon33::rsync_acl
accept_new_connection	mongoose.c	/^static void accept_new_connection(const struct socket *listener,$/;"	f	file:
access	acls.c	/^	uint32 access;$/;"	m	struct:__anon22	file:
access_acl_list	acls.c	/^static item_list access_acl_list = EMPTY_ITEM_LIST;$/;"	v	file:
access_match	access.c	/^static int access_match(const char *list, const char *addr, const char **host_ptr)$/;"	f	file:
ace_access	lib/sysacls.h	/^	unsigned int ace_access;$/;"	m	struct:new_acl_entry
ace_id	lib/sysacls.h	/^	struct ace_id ace_id[1];$/;"	m	struct:new_acl_entry	typeref:struct:new_acl_entry::ace_id
ace_len	lib/sysacls.h	/^	unsigned short ace_len;$/;"	m	struct:new_acl_entry
ace_type	lib/sysacls.h	/^	unsigned short ace_type;$/;"	m	struct:new_acl_entry
acl	lib/sysacls.h	/^	struct acl acl[1];$/;"	m	struct:SMB_ACL_T	typeref:struct:SMB_ACL_T::acl
acl_duo	acls.c	/^} acl_duo;$/;"	t	typeref:struct:__anon25	file:
acl_entry_link	lib/sysacls.h	/^struct acl_entry_link{$/;"	s
acl_get_perm	lib/sysacls.c	91;"	d	file:
acl_sort	lib/sysacls.c	/^static int acl_sort(SMB_ACL_T acl_d)$/;"	f	file:
aclp	lib/sysacls.h	/^	struct acl *aclp;$/;"	m	struct:SMB_ACL_T	typeref:struct:SMB_ACL_T::acl
acls_differ	generator.c	/^static inline int acls_differ(const char *fname, struct file_struct *file, stat_x *sxp)$/;"	f	file:
acls_ndx	compat.c	/^int uid_ndx, gid_ndx, acls_ndx, xattrs_ndx, unsort_ndx;$/;"	v
active_bytecnt	io.c	/^static OFF_T active_bytecnt = 0;$/;"	v	file:
active_filecnt	io.c	/^static int active_filecnt = 0;$/;"	v	file:
add_a_group	clientserver.c	/^static int add_a_group(int f_out, const char *gname)$/;"	f	file:
add_a_section	loadparm.c	/^static int add_a_section(char *name)$/;"	f	file:
add_cnk_list_entry	lib/snprintf.c	/^static int add_cnk_list_entry(struct pr_chunk_x **list,$/;"	f	file:
add_dirs_to_tree	flist.c	/^static void add_dirs_to_tree(int parent_ndx, struct file_list *from_flist,$/;"	f	file:
add_gid	uidlist.c	/^const char *add_gid(gid_t gid)$/;"	f
add_nocompress_suffixes	token.c	/^static void add_nocompress_suffixes(const char *str)$/;"	f	file:
add_rule	exclude.c	/^static void add_rule(filter_rule_list *listp, const char *pat, unsigned int pat_len,$/;"	f	file:
add_suffix	token.c	/^static void add_suffix(struct suffix_tree **prior, char ltr, const char *str)$/;"	f	file:
add_to_list	uidlist.c	/^static struct idlist *add_to_list(struct idlist **root, id_t id, union name_or_id noiu,$/;"	f	file:
add_uid	uidlist.c	/^const char *add_uid(uid_t uid)$/;"	f
addenv	mongoose.c	/^static char *addenv(struct cgi_env_block *block, const char *fmt, ...) {$/;"	f	file:
addrinfo	lib/addrinfo.h	/^struct addrinfo$/;"	s
adler	zlib/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	zlib/adler32.c	/^uLong ZEXPORT adler32(adler, buf, len)$/;"	f
adler32	zlib/zconf.h	41;"	d
adler32_combine	zlib/adler32.c	/^uLong ZEXPORT adler32_combine(adler1, adler2, len2)$/;"	f
ah	mongoose.c	/^struct ah {$/;"	s	file:
ai_addr	lib/addrinfo.h	/^	struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	lib/addrinfo.h	/^	size_t		ai_addrlen;$/;"	m	struct:addrinfo
ai_canonname	lib/addrinfo.h	/^	char	   *ai_canonname;$/;"	m	struct:addrinfo
ai_family	lib/addrinfo.h	/^	int			ai_family;$/;"	m	struct:addrinfo
ai_flags	lib/addrinfo.h	/^	int			ai_flags;$/;"	m	struct:addrinfo
ai_next	lib/addrinfo.h	/^	struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	lib/addrinfo.h	/^	int			ai_protocol;$/;"	m	struct:addrinfo
ai_socktype	lib/addrinfo.h	/^	int			ai_socktype;$/;"	m	struct:addrinfo
aliases	popt/poptint.h	/^    poptItem aliases;$/;"	m	struct:poptContext_s
align_test	lib/pool_alloc.c	/^struct align_test {$/;"	s	file:
all_pids	util.c	/^static pid_t all_pids[10];$/;"	v	file:
all_vars	loadparm.c	/^} all_vars;$/;"	t	typeref:struct:__anon20	file:
alloc_entry	lib/getaddrinfo.c	/^static struct addrinfo *alloc_entry(const struct addrinfo *hints,$/;"	f	file:
alloc_func	zlib/zconf.h	46;"	d
alloc_func	zlib/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alloc_pool	lib/pool_alloc.c	/^struct alloc_pool$/;"	s	file:
alloc_pool_t	lib/pool_alloc.h	/^typedef void *alloc_pool_t;$/;"	t
alloc_vprintf	mongoose.c	/^static int alloc_vprintf(char **buf, size_t size, const char *fmt, va_list ap) {$/;"	f	file:
alloc_xbuf	ifuncs.h	/^alloc_xbuf(xbuf *xb, size_t sz)$/;"	f
alloca	popt/system.h	82;"	d
alloca	popt/system.h	84;"	d
alloca	popt/system.h	89;"	d
allow_8bit_chars	options.c	/^int allow_8bit_chars = 0;$/;"	v
allow_access	access.c	/^int allow_access(const char *addr, const char **host_ptr, int i)$/;"	f
allow_forward_dns	access.c	/^static int allow_forward_dns;$/;"	v	file:
allow_inc_recurse	options.c	/^int allow_inc_recurse = 1;$/;"	v
allowed_lull	io.c	/^int allowed_lull = 0;$/;"	v
always_checksum	options.c	/^int always_checksum = 0;$/;"	v
am_daemon	options.c	/^int am_daemon = 0;$/;"	v
am_generator	main.c	/^int am_generator = 0; \/* Only set to 1 after the receiver\/generator fork. *\/$/;"	v
am_receiver	main.c	/^int am_receiver = 0;  \/* Only set to 1 after the receiver\/generator fork. *\/$/;"	v
am_root	options.c	/^int am_root = 0; \/* 0 = normal, 1 = root, 2 = --super, -1 = --fake-super *\/$/;"	v
am_root	t_unsafe.c	/^int am_root = 0;$/;"	v
am_root	tls.c	/^int am_root = 0;$/;"	v
am_root	trimslash.c	/^int am_root = 0;$/;"	v
am_sender	options.c	/^int am_sender = 0;$/;"	v
am_sender	t_unsafe.c	/^int am_sender = 1;$/;"	v
am_sender	tls.c	/^int am_sender = 1;$/;"	v
am_sender	trimslash.c	/^int am_sender = 1;$/;"	v
am_server	options.c	/^int am_server = 0;$/;"	v
am_starting_up	options.c	/^int am_starting_up = 1;$/;"	v
appName	popt/poptint.h	/^    const char * appName;$/;"	m	struct:poptContext_s
append_mode	options.c	/^int append_mode = 0;$/;"	v
arg	popt/popt.h	/^    void * arg;			\/*!< depends on argInfo *\/$/;"	m	struct:poptOption
argDescrip	popt/popt.h	/^    const char * argDescrip;	\/*!< argument description for autohelp *\/$/;"	m	struct:poptOption
argInfo	popt/popt.h	/^    int argInfo;$/;"	m	struct:poptOption
arg_buf	util.c	/^	char *arg_buf, *filt_buf, **argv;$/;"	m	struct:glob_data	file:
arg_strip	popt/poptint.h	/^    pbm_set * arg_strip;$/;"	m	struct:poptContext_s
argb	popt/poptint.h	/^    pbm_set * argb;$/;"	m	struct:optionStackEntry
argc	popt/popt.h	/^    int argc;			\/*!< (alias) no. of args. *\/$/;"	m	struct:poptItem_s
argc	popt/popt.h	/^    int argc;$/;"	m	struct:poptAlias
argc	popt/poptint.h	/^    int argc;$/;"	m	struct:optionStackEntry
argc	util.c	/^	int absize, fbsize, maxargs, argc;$/;"	m	struct:glob_data	file:
argv	popt/popt.h	/^    const char ** argv;		\/*!< (alias) args, must be free()able. *\/$/;"	m	struct:poptItem_s
argv	popt/popt.h	/^    const char ** argv;		\/*!< must be free()able *\/$/;"	m	struct:poptAlias
argv	popt/poptint.h	/^    const char ** argv;$/;"	m	struct:optionStackEntry
argv	util.c	/^	char *arg_buf, *filt_buf, **argv;$/;"	m	struct:glob_data	file:
arr_size	mongoose.c	/^  int arr_size;$/;"	m	struct:dir_scan_data	file:
as_fn_append	configure.sh	/^  as_fn_append ()$/;"	f
as_fn_arith	configure.sh	/^  as_fn_arith ()$/;"	f
as_fn_error	configure.sh	/^as_fn_error ()$/;"	f
as_fn_exit	configure.sh	/^as_fn_exit ()$/;"	f
as_fn_failure	configure.sh	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	configure.sh	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure.sh	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure.sh	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	configure.sh	/^as_fn_set_status ()$/;"	f
as_fn_success	configure.sh	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	configure.sh	/^as_fn_unset ()$/;"	f
asprintf	lib/snprintf.c	/^ int asprintf(char **ptr, const char *format, ...)$/;"	f
atomic_create	generator.c	/^int atomic_create(struct file_struct *file, char *fname, const char *lnk,$/;"	f
auth_client	authenticate.c	/^void auth_client(int fd, const char *user, const char *challenge)$/;"	f
auth_server	authenticate.c	/^char *auth_server(int f_in, int f_out, int module, const char *host,$/;"	f
auth_user	clientserver.c	/^char *auth_user;$/;"	v
auth_users	loadparm.c	/^	char *auth_users;$/;"	m	struct:__anon19	file:
authorize	mongoose.c	/^static int authorize(struct mg_connection *conn, struct file *filep) {$/;"	f	file:
avail_in	zlib/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	zlib/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
bInGlobalSection	loadparm.c	/^static BOOL bInGlobalSection = True;$/;"	v	file:
bSize	params.c	/^static int   bSize = 0;$/;"	v	file:
b_allocated	lib/pool_alloc.c	/^	int64			b_allocated;	\/* cum. bytes allocated	*\/$/;"	m	struct:alloc_pool	file:
b_freed	lib/pool_alloc.c	/^	int64			b_freed;	\/* cum. bytes freed	*\/$/;"	m	struct:alloc_pool	file:
backup_dir	options.c	/^char *backup_dir = NULL;$/;"	v
backup_dir_buf	options.c	/^char backup_dir_buf[MAXPATHLEN];$/;"	v
backup_dir_len	options.c	/^int backup_dir_len = 0;$/;"	v
backup_dir_remainder	options.c	/^unsigned int backup_dir_remainder;$/;"	v
backup_suffix	options.c	/^char *backup_suffix = NULL;$/;"	v
backup_suffix_len	options.c	/^int backup_suffix_len;$/;"	v
bar	lib/pool_alloc.c	/^	} bar;$/;"	m	struct:align_test	typeref:union:align_test::__anon7	file:
base64_encode	authenticate.c	/^void base64_encode(const char *buf, int len, char *out, int pad)$/;"	f
base64_encode	mongoose.c	/^static void base64_encode(const unsigned char *src, int src_len, char *dst) {$/;"	f	file:
base_dist	zlib/trees.c	/^local int base_dist[D_CODES];$/;"	v
base_dist	zlib/trees.h	/^local const int base_dist[D_CODES] = {$/;"	v
base_length	zlib/trees.c	/^local int base_length[LENGTH_CODES];$/;"	v
base_length	zlib/trees.h	/^local const int base_length[LENGTH_CODES] = {$/;"	v
basename	rsync.h	/^	const char basename[1];	\/* The basename (AKA filename) follows *\/$/;"	m	struct:file_struct
basis_dir	options.c	/^char *basis_dir[MAX_BASIS_DIRS+1];$/;"	v
basis_dir_cnt	options.c	/^int basis_dir_cnt = 0;$/;"	v
batch_fd	io.c	/^int batch_fd = -1;$/;"	v
batch_gen_fd	main.c	/^int batch_gen_fd = -1;$/;"	v
batch_name	options.c	/^char *batch_name = NULL;$/;"	v
batch_redo_list	receiver.c	/^static flist_ndx_list batch_redo_list;$/;"	v	file:
batch_stream_flags	batch.c	/^int batch_stream_flags;$/;"	v
become_daemon	clientserver.c	/^static void become_daemon(void)$/;"	f	file:
begin_request	mongoose.h	/^  int  (*begin_request)(struct mg_connection *);$/;"	m	struct:mg_callbacks
begin_request_handler	mongoose.c	/^static int begin_request_handler(struct mg_connection *conn) {$/;"	f	file:
bi_buf	zlib/deflate.h	/^    ush bi_buf;$/;"	m	struct:internal_state
bi_flush	zlib/trees.c	/^local void bi_flush(s)$/;"	f
bi_reverse	zlib/trees.c	/^local unsigned bi_reverse(code, len)$/;"	f
bi_valid	zlib/deflate.h	/^    int bi_valid;$/;"	m	struct:internal_state
bi_windup	zlib/trees.c	/^local void bi_windup(s)$/;"	f
big_dnum	inums.h	/^big_dnum(double dnum, int decimal_digits)$/;"	f
big_num	inums.h	/^big_num(int64 num)$/;"	f
bin2str	mongoose.c	/^static void bin2str(char *to, const unsigned char *p, size_t len) {$/;"	f	file:
bind_address	loadparm.c	/^	char *bind_address;$/;"	m	struct:__anon18	file:
bind_address	options.c	/^char *bind_address;$/;"	v
bindir	Makefile	/^bindir=${exec_prefix}\/bin$/;"	m
birth_time	mongoose.c	/^  time_t birth_time;          \/\/ Time when request was received$/;"	m	struct:mg_connection	file:
bitbag	util.c	/^struct bitbag {$/;"	s	file:
bitbag_create	util.c	/^struct bitbag *bitbag_create(int max_ndx)$/;"	f
bitbag_next_bit	util.c	/^int bitbag_next_bit(struct bitbag *bb, int after)$/;"	f
bitbag_set_bit	util.c	/^void bitbag_set_bit(struct bitbag *bb, int ndx)$/;"	f
bits	mongoose.c	/^  uint32_t bits[2];$/;"	m	struct:MD5Context	file:
bits	popt/poptint.h	/^    __pbm_bits bits[1];$/;"	m	struct:__anon1
bits	util.c	/^    uint32 **bits;$/;"	m	struct:bitbag	file:
bits	zlib/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state
bits	zlib/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon13
bits_sent	zlib/deflate.h	/^    ulg bits_sent;      \/* bit length of compressed data sent mod 2^32 *\/$/;"	m	struct:internal_state
bl_count	zlib/deflate.h	/^    ush bl_count[MAX_BITS+1];$/;"	m	struct:internal_state
bl_desc	zlib/deflate.h	/^    struct tree_desc_s bl_desc;              \/* desc. for bit length tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
bl_order	zlib/trees.c	/^local const uch bl_order[BL_CODES]$/;"	v
bl_tree	zlib/deflate.h	/^    struct ct_data_s bl_tree[2*BL_CODES+1];  \/* Huffman tree for bit lengths *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
blength	rsync.h	/^	int32 blength;		\/**< block_length *\/$/;"	m	struct:sum_struct
blk	mongoose.c	3662;"	d	file:
blk0	mongoose.c	/^static uint32_t blk0(union char64long16 *block, int i) {$/;"	f	file:
block_done	zlib/deflate.c	/^    block_done,     \/* block flush performed *\/$/;"	e	enum:__anon12	file:
block_size	options.c	/^long block_size = 0; \/* "long" because popt can't set an int32. *\/$/;"	v
block_start	zlib/deflate.h	/^    long block_start;$/;"	m	struct:internal_state
block_state	zlib/deflate.c	/^} block_state;$/;"	t	typeref:enum:__anon12	file:
blocking_io	options.c	/^int blocking_io = -1;$/;"	v
bomb	lib/pool_alloc.c	/^	void			(*bomb)();	\/* function to call if$/;"	m	struct:alloc_pool	file:
bool	wildtest.c	/^typedef char bool;$/;"	t	file:
bound	lib/pool_alloc.c	/^	size_t			bound;		\/* trapped free bytes	*\/$/;"	m	struct:pool_extent	file:
broadcast	mongoose.c	/^typedef struct {HANDLE signal, broadcast;} pthread_cond_t;$/;"	m	struct:__anon2	file:
buf	mongoose.c	/^  char *buf;                  \/\/ Buffer for received data$/;"	m	struct:mg_connection	file:
buf	mongoose.c	/^  char buf[CGI_ENVIRONMENT_SIZE]; \/\/ Environment buffer$/;"	m	struct:cgi_env_block	file:
buf	mongoose.c	/^  uint32_t buf[4];$/;"	m	struct:MD5Context	file:
buf	rsync.h	/^	char *buf;$/;"	m	struct:__anon31
buf	support/savetransfer.c	/^char buf[4096];$/;"	v
buf_size	mongoose.c	/^  int buf_size;               \/\/ Buffer size$/;"	m	struct:mg_connection	file:
buffer	lib/mdigest.h	/^	uchar buffer[CSUM_CHUNK];$/;"	m	struct:__anon8
buffer	mongoose.c	/^    unsigned char buffer[64];$/;"	m	struct:__anon5	file:
bufr	params.c	/^static char *bufr  = NULL;$/;"	v	file:
build_bl_tree	zlib/trees.c	/^local int build_bl_tree(s)$/;"	f
build_hash_table	match.c	/^static void build_hash_table(struct sum_struct *s)$/;"	f	file:
build_tree	testhelp/maketree.py	/^    def build_tree(self, prefix, depth):$/;"	m	class:TreeBuilder
build_tree	zlib/trees.c	/^local void build_tree(s, desc)$/;"	f
builtin_mime_types	mongoose.c	/^} builtin_mime_types[] = {$/;"	v	typeref:struct:__anon4	file:
bwlimit	options.c	/^int bwlimit = 0;$/;"	v
bwlimit_arg	options.c	/^static char *bwlimit_arg, *max_size_arg, *min_size_arg;$/;"	v	file:
bwlimit_writemax	options.c	/^size_t bwlimit_writemax = 0;$/;"	v
byteReverse	mongoose.c	/^static void byteReverse(unsigned char *buf, unsigned longs) {$/;"	f	file:
c	mongoose.c	/^union char64long16 { unsigned char c[64]; uint32_t l[16]; };$/;"	m	union:char64long16	file:
cache_rsync_acl	acls.c	/^static int cache_rsync_acl(rsync_acl *racl, SMB_ACL_TYPE_T type, item_list *racl_list)$/;"	f	file:
cache_tmp_acl	acls.c	/^void cache_tmp_acl(struct file_struct *file, stat_x *sxp)$/;"	f
cache_tmp_xattr	xattrs.c	/^void cache_tmp_xattr(struct file_struct *file, stat_x *sxp)$/;"	f
calc_sacl_entries	acls.c	/^static int calc_sacl_entries(const rsync_acl *racl)$/;"	f	file:
call_glob_match	util.c	/^static inline void call_glob_match(const char *name, int len, int from_glob,$/;"	f	file:
callbacks	mongoose.c	/^  struct mg_callbacks callbacks;  \/\/ User-defined callback function$/;"	m	struct:mg_context	typeref:struct:mg_context::mg_callbacks	file:
can_continue	testhelp/maketree.py	/^    def can_continue(self):$/;"	m	class:TreeBuilder
canon_name_from_hostent	lib/getaddrinfo.c	/^static char *canon_name_from_hostent(struct hostent *hp,$/;"	f	file:
cbuf	token.c	/^static char *cbuf;$/;"	v	file:
cflags	lib/snprintf.c	/^	int cflags;$/;"	m	struct:pr_chunk	file:
cgi_env_block	mongoose.c	/^struct cgi_env_block {$/;"	s	file:
chain	rsync.h	/^	int32 chain;		\/**< next hash-table collision *\/$/;"	m	struct:sum_buf
change_dir	util.c	/^int change_dir(const char *dir, int set_path_only)$/;"	f
change_local_filter_dir	exclude.c	/^void change_local_filter_dir(const char *dname, int dlen, int dir_depth)$/;"	f
change_pathname	flist.c	/^int change_pathname(struct file_struct *file, const char *dir, int dirlen)$/;"	f
change_sacl_perms	acls.c	/^static mode_t change_sacl_perms(SMB_ACL_T sacl, rsync_acl *racl, mode_t old_mode, mode_t mode)$/;"	f	file:
change_slashes_to_backslashes	mongoose.c	/^static void change_slashes_to_backslashes(char *path) {$/;"	f	file:
char64long16	mongoose.c	/^union char64long16 { unsigned char c[64]; uint32_t l[16]; };$/;"	u	file:
char_to_int	lib/snprintf.c	222;"	d	file:
charf	zlib/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	zlib/zconf.h	54;"	d
charset	loadparm.c	/^	char *charset;$/;"	m	struct:__anon19	file:
check	zlib/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state
check_acl	mongoose.c	/^static int check_acl(struct mg_context *ctx, uint32_t remote_ip) {$/;"	f	file:
check_alt_basis_dirs	main.c	/^static void check_alt_basis_dirs(void)$/;"	f	file:
check_authorization	mongoose.c	/^static int check_authorization(struct mg_connection *conn, const char *path) {$/;"	f	file:
check_batch_flags	batch.c	/^void check_batch_flags(void)$/;"	f
check_filter	exclude.c	/^int check_filter(filter_rule_list *listp, enum logcode code,$/;"	f
check_for_d_option_error	io.c	/^static void check_for_d_option_error(const char *msg)$/;"	f	file:
check_for_finished_files	generator.c	/^void check_for_finished_files(int itemizing, enum logcode code, int check_redo)$/;"	f
check_for_hostspec	options.c	/^char *check_for_hostspec(char *s, char **host_ptr, int *port_ptr)$/;"	f
check_git_state	packaging/git-status.pl	/^sub check_git_state$/;"	s
check_git_status	packaging/git-status.pl	/^sub check_git_status$/;"	s
check_hostent_err	lib/getaddrinfo.c	/^static int check_hostent_err(struct hostent *hp)$/;"	f	file:
check_match	zlib/deflate.c	/^local void check_match(s, start, match, length)$/;"	f
check_match	zlib/deflate.c	1255;"	d	file:
check_name	clientname.c	/^int check_name(int fd,$/;"	f
check_password	mongoose.c	/^static int check_password(const char *method, const char *ha1, const char *uri,$/;"	f	file:
check_prior	hlink.c	/^static char *check_prior(struct file_struct *file, int gnum,$/;"	f	file:
check_secret	authenticate.c	/^static const char *check_secret(int module, const char *user, const char *group,$/;"	f	file:
check_sub_protocol	compat.c	/^static void check_sub_protocol(void)$/;"	f	file:
check_timeout	io.c	/^static void check_timeout(BOOL allow_keepalive)$/;"	f	file:
checksum_len	flist.c	/^int checksum_len;$/;"	v
checksum_seed	options.c	/^int checksum_seed = 0;$/;"	v
child	token.c	/^	struct suffix_tree *child;$/;"	m	struct:suffix_tree	typeref:struct:suffix_tree::suffix_tree	file:
child_main	main.c	/^int child_main(int argc, char *argv[])$/;"	f
chmod_mode_struct	chmod.c	/^struct chmod_mode_struct {$/;"	s	file:
chmod_modes	options.c	/^struct chmod_mode_struct *chmod_modes = NULL;$/;"	v	typeref:struct:chmod_mode_struct
chunks	lib/snprintf.c	/^	struct pr_chunk **chunks;$/;"	m	struct:pr_chunk_x	typeref:struct:pr_chunk_x::pr_chunk	file:
claim_connection	connection.c	/^int claim_connection(char *fname, int max_connections)$/;"	f
class	loadparm.c	/^	parm_class class;$/;"	m	struct:parm_struct	file:
cleanOSE	popt/popt.c	/^static void cleanOSE(\/*@special@*\/ struct optionStackEntry *os)$/;"	f	file:
clean_fname	util.c	/^unsigned int clean_fname(char *name, int flags)$/;"	f
cleanup_child_pid	cleanup.c	/^pid_t cleanup_child_pid = -1;$/;"	v
cleanup_disable	cleanup.c	/^void cleanup_disable(void)$/;"	f
cleanup_fd_r	cleanup.c	/^static int cleanup_fd_r, cleanup_fd_w;$/;"	v	file:
cleanup_fd_w	cleanup.c	/^static int cleanup_fd_r, cleanup_fd_w;$/;"	v	file:
cleanup_file	cleanup.c	/^static struct file_struct *cleanup_file;$/;"	v	typeref:struct:file_struct	file:
cleanup_fname	cleanup.c	/^static const char *cleanup_fname;$/;"	v	file:
cleanup_got_literal	cleanup.c	/^int cleanup_got_literal = 0;$/;"	v
cleanup_new_fname	cleanup.c	/^static const char *cleanup_new_fname;$/;"	v	file:
cleanup_pid	cleanup.c	/^static pid_t cleanup_pid = 0;$/;"	v	file:
cleanup_set	cleanup.c	/^void cleanup_set(const char *fnametmp, const char *fname, struct file_struct *file,$/;"	f
cleanup_set_pid	cleanup.c	/^void cleanup_set_pid(pid_t pid)$/;"	f
clear_file	flist.c	/^void clear_file(struct file_struct *file)$/;"	f
clear_filter_list	exclude.c	/^static void clear_filter_list(filter_rule_list *listp)$/;"	f	file:
client	mongoose.c	/^  struct socket client;       \/\/ Connected client$/;"	m	struct:mg_connection	typeref:struct:mg_connection::socket	file:
client_addr	clientname.c	/^char *client_addr(int fd)$/;"	f
client_info	compat.c	/^static const char *client_info;$/;"	v	file:
client_name	clientname.c	/^char *client_name(int fd)$/;"	f
client_run	main.c	/^int client_run(int f_in, int f_out, pid_t pid, int argc, char *argv[])$/;"	f
client_sockaddr	clientname.c	/^void client_sockaddr(int fd,$/;"	f
client_ssl_ctx	mongoose.c	/^  SSL_CTX *client_ssl_ctx;    \/\/ SSL context for client connections$/;"	m	struct:mg_connection	file:
close	mongoose.c	139;"	d	file:
close_all	cleanup.c	/^void close_all(void)$/;"	f
close_all_listening_sockets	mongoose.c	/^static void close_all_listening_sockets(struct mg_context *ctx) {$/;"	f	file:
close_connection	mongoose.c	/^static void close_connection(struct mg_connection *conn) {$/;"	f	file:
close_socket_gracefully	mongoose.c	/^static void close_socket_gracefully(struct mg_connection *conn) {$/;"	f	file:
closedir	mongoose.c	/^static int closedir(DIR *dir) {$/;"	f	file:
closesocket	mongoose.c	237;"	d	file:
cmp_time	util.c	/^int cmp_time(time_t file1, time_t file2)$/;"	f
cnonce	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
code	log.c	/^        int code;$/;"	m	struct:__anon27	file:
code	zlib/deflate.h	/^        ush  code;       \/* bit string *\/$/;"	m	union:ct_data_s::__anon10
code	zlib/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon13
codes	zlib/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state
codetype	zlib/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon14
comm_max	zlib/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comma_dnum	inums.h	/^comma_dnum(double dnum, int decimal_digits)$/;"	f
comma_num	inums.h	/^comma_num(int64 num)$/;"	f
comment	loadparm.c	/^	char *comment;$/;"	m	struct:__anon19	file:
comment	zlib/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
compare_addrinfo_sockaddr	clientname.c	/^int compare_addrinfo_sockaddr(const struct addrinfo *ai,$/;"	f
compare_dest	options.c	/^int compare_dest = 0;$/;"	v
compare_dir_entries	mongoose.c	/^static int WINCDECL compare_dir_entries(const void *p1, const void *p2) {$/;"	f	file:
compat_flags	compat.c	/^int compat_flags = 0;$/;"	v
compress	zlib/compress.c	/^int ZEXPORT compress (dest, destLen, source, sourceLen)$/;"	f
compress	zlib/zconf.h	37;"	d
compress2	zlib/compress.c	/^int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)$/;"	f
compress2	zlib/zconf.h	38;"	d
compressBound	zlib/compress.c	/^uLong ZEXPORT compressBound (sourceLen)$/;"	f
compressBound	zlib/zconf.h	39;"	d
compress_block	zlib/trees.c	/^local void compress_block(s, ltree, dtree)$/;"	f
compress_func	zlib/deflate.c	/^typedef block_state (*compress_func) OF((deflate_state *s, int flush));$/;"	t	file:
compressed_len	zlib/deflate.h	/^    ulg compressed_len; \/* total bit length of compressed file mod 2^32 *\/$/;"	m	struct:internal_state
compression_level	token.c	/^static int compression_level, per_file_default_level;$/;"	v	file:
cond	mongoose.c	/^  pthread_cond_t  cond;      \/\/ Condvar for tracking workers terminations$/;"	m	struct:mg_context	file:
config	mongoose.c	/^  char *config[NUM_OPTIONS];      \/\/ Mongoose configuration parameters$/;"	m	struct:mg_context	file:
config	zlib/deflate.c	/^} config;$/;"	t	typeref:struct:config_s	file:
configLine	popt/poptconfig.c	/^static void configLine(poptContext con, char * line)$/;"	f	file:
config_file	options.c	/^char *config_file = NULL;$/;"	v
config_options	mongoose.c	/^static const char *config_options[] = {$/;"	v	file:
config_s	zlib/deflate.c	/^typedef struct config_s {$/;"	s	file:
configuration_table	zlib/deflate.c	/^local const config configuration_table[10] = {$/;"	v
configuration_table	zlib/deflate.c	/^local const config configuration_table[2] = {$/;"	v
conn	mongoose.c	/^  struct mg_connection *conn;$/;"	m	struct:cgi_env_block	typeref:struct:cgi_env_block::mg_connection	file:
conn	mongoose.c	/^  struct mg_connection *conn;$/;"	m	struct:de	typeref:struct:de::mg_connection	file:
connect_timeout	options.c	/^int connect_timeout = 0;$/;"	v
const	zlib/zconf.h	124;"	d
construct_etag	mongoose.c	/^static void construct_etag(char *buf, size_t buf_len,$/;"	f	file:
construct_http_req	http.c	/^void construct_http_req()$/;"	f
consume_socket	mongoose.c	/^static int consume_socket(struct mg_context *ctx, struct socket *sp) {$/;"	f	file:
consumed_content	mongoose.c	/^  int64_t consumed_content;   \/\/ How many bytes of content have been read$/;"	m	struct:mg_connection	file:
content_len	mongoose.c	/^  int64_t content_len;        \/\/ Content-Length header value$/;"	m	struct:mg_connection	file:
convert_uri_to_file_name	mongoose.c	/^static void convert_uri_to_file_name(struct mg_connection *conn, char *buf,$/;"	f	file:
copy4	lib/mdfour.c	/^static void copy4(uchar *out,uint32 x)$/;"	f	file:
copy64	lib/mdfour.c	/^static void copy64(uint32 *M, const uchar *in)$/;"	f	file:
copy_altdest_file	generator.c	/^static int copy_altdest_file(const char *src, const char *dest, struct file_struct *file)$/;"	f	file:
copy_argv	main.c	/^static int copy_argv(char *argv[])$/;"	f	file:
copy_block	zlib/trees.c	/^local void copy_block(s, buf, len, header)$/;"	f
copy_dest	options.c	/^int copy_dest = 0;$/;"	v
copy_dirlinks	options.c	/^int copy_dirlinks = 0;$/;"	v
copy_file	util.c	/^int copy_file(const char *source, const char *dest, int ofd, mode_t mode)$/;"	f
copy_links	options.c	/^int copy_links = 0;$/;"	v
copy_section	loadparm.c	/^static void copy_section(local_vars *psectionDest, local_vars *psectionSource)$/;"	f	file:
copy_unsafe_links	options.c	/^int copy_unsafe_links = 0;$/;"	v
copy_valid_path	backup.c	/^static BOOL copy_valid_path(const char *fname)$/;"	f	file:
copy_xattrs	xattrs.c	/^int copy_xattrs(const char *source, const char *dest)$/;"	f
count	acls.c	/^	int count;$/;"	m	struct:__anon23	file:
count	lib/sysacls.h	/^	int count;$/;"	m	struct:SMB_ACL_T
count	lib/sysacls.h	/^	int count;$/;"	m	struct:acl_entry_link
count	mongoose.c	/^    uint32_t count[2];$/;"	m	struct:__anon5	file:
count	rsync.h	/^	int32 count;		\/**< how many chunks *\/$/;"	m	struct:sum_struct
count	rsync.h	/^	size_t count;$/;"	m	struct:__anon30
count_args	options.c	/^static int count_args(const char **argv)$/;"	f	file:
count_dir_elements	util.c	/^int count_dir_elements(const char *p)$/;"	f
crc32	zlib/crc32.c	/^unsigned long ZEXPORT crc32(crc, buf, len)$/;"	f
crc32	zlib/zconf.h	42;"	d
crc32_big	zlib/crc32.c	/^local unsigned long crc32_big(crc, buf, len)$/;"	f
crc32_combine	zlib/crc32.c	/^uLong ZEXPORT crc32_combine(crc1, crc2, len2)$/;"	f
crc32_little	zlib/crc32.c	/^local unsigned long crc32_little(crc, buf, len)$/;"	f
crc_table	zlib/crc32.c	/^local unsigned long FAR crc_table[TBLS][256];$/;"	v
crc_table	zlib/crc32.h	/^local const unsigned long FAR crc_table[TBLS][256] =$/;"	v
crc_table_empty	zlib/crc32.c	/^local volatile int crc_table_empty = 1;$/;"	v
create_pid_file	clientserver.c	/^static void create_pid_file(void)$/;"	f	file:
create_racl	acls.c	/^static rsync_acl *create_racl(void)$/;"	f	file:
create_refuse_error	options.c	/^static void create_refuse_error(int which)$/;"	f	file:
created_devices	rsync.h	/^	int created_files, created_dirs, created_symlinks, created_devices, created_specials;$/;"	m	struct:stats
created_dirs	rsync.h	/^	int created_files, created_dirs, created_symlinks, created_devices, created_specials;$/;"	m	struct:stats
created_files	rsync.h	/^	int created_files, created_dirs, created_symlinks, created_devices, created_specials;$/;"	m	struct:stats
created_specials	rsync.h	/^	int created_files, created_dirs, created_symlinks, created_devices, created_specials;$/;"	m	struct:stats
created_symlinks	rsync.h	/^	int created_files, created_dirs, created_symlinks, created_devices, created_specials;$/;"	m	struct:stats
cry	mongoose.c	/^static void cry(struct mg_connection *conn, const char *fmt, ...) {$/;"	f	file:
crypto_sw	mongoose.c	/^static struct ssl_func crypto_sw[] = {$/;"	v	typeref:struct:ssl_func	file:
csum_length	io.c	/^int csum_length = SHORT_SUM_LENGTH; \/* initial value *\/$/;"	v
ct_data	zlib/deflate.h	/^} FAR ct_data;$/;"	t	typeref:struct:ct_data_s
ct_data_s	zlib/deflate.h	/^typedef struct ct_data_s {$/;"	s
ctx	mongoose.c	/^  struct mg_context *ctx;$/;"	m	struct:mg_connection	typeref:struct:mg_connection::mg_context	file:
cur_flist	flist.c	/^struct file_list *cur_flist, *first_flist, *dir_flist;$/;"	v	typeref:struct:file_list
currAlias	popt/poptint.h	/^    poptItem currAlias;$/;"	m	struct:optionStackEntry
curr_dir	util.c	/^char curr_dir[MAXPATHLEN];$/;"	v
curr_dir_depth	util.c	/^int curr_dir_depth; \/* This is only set for a sanitizing daemon. *\/$/;"	v
curr_dir_len	util.c	/^unsigned int curr_dir_len;$/;"	v
current_file_index	progress.c	/^static int current_file_index;$/;"	v	file:
cvs_exclude	options.c	/^int cvs_exclude = 0;$/;"	v
cvs_filter_list	exclude.c	/^filter_rule_list cvs_filter_list = { .debug_type = " [global CVS]" };$/;"	v
d_buf	zlib/deflate.h	/^    ushf *d_buf;$/;"	m	struct:internal_state
d_code	zlib/deflate.h	290;"	d
d_desc	zlib/deflate.h	/^    struct tree_desc_s d_desc;               \/* desc. for distance tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
d_name	ifuncs.h	/^d_name(struct dirent *di)$/;"	f
d_name	mongoose.c	/^  char d_name[PATH_MAX];$/;"	m	struct:dirent	file:
dad	zlib/deflate.h	/^        ush  dad;        \/* father node in Huffman tree *\/$/;"	m	union:ct_data_s::__anon11
daemon_bwlimit	options.c	/^int daemon_bwlimit = 0;$/;"	v
daemon_chmod_modes	clientserver.c	/^struct chmod_mode_struct *daemon_chmod_modes;$/;"	v	typeref:struct:chmod_mode_struct
daemon_filter_list	exclude.c	/^filter_rule_list daemon_filter_list = { .debug_type = " [daemon]" };$/;"	v
daemon_filter_list	t_stub.c	/^filter_rule_list daemon_filter_list;$/;"	v
daemon_main	clientserver.c	/^int daemon_main(void)$/;"	f
daemon_opt	options.c	/^static int daemon_opt;   \/* sets am_daemon after option error-reporting *\/$/;"	v	file:
daemon_over_rsh	main.c	/^int daemon_over_rsh = 0;$/;"	v
daemon_usage	options.c	/^static void daemon_usage(enum logcode F)$/;"	f	file:
data	rsync.h	/^	void *data;$/;"	m	struct:ht_int32_node
data	rsync.h	/^	void *data;$/;"	m	struct:ht_int64_node
data_len	mongoose.c	/^  int data_len;               \/\/ Total size of data in a buffer$/;"	m	struct:mg_connection	file:
data_transfer	match.c	/^static int64 data_transfer;$/;"	v	file:
data_type	zlib/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
datarootdir	Makefile	/^datarootdir=${prefix}\/share$/;"	m
datum	xattrs.c	/^	char *datum, *name;$/;"	m	struct:__anon15	file:
datum_len	xattrs.c	/^	size_t datum_len, name_len;$/;"	m	struct:__anon15	file:
dbuf	token.c	/^static char *dbuf;$/;"	v	file:
de	mongoose.c	/^struct de {$/;"	s	file:
debug_levels	options.c	/^short info_levels[COUNT_INFO], debug_levels[COUNT_DEBUG];$/;"	v
debug_levels	t_unsafe.c	/^short info_levels[COUNT_INFO], debug_levels[COUNT_DEBUG];$/;"	v
debug_type	rsync.h	/^	char *debug_type;$/;"	m	struct:filter_list_struct
debug_verbosity	options.c	/^static const char *debug_verbosity[] = {$/;"	v	file:
debug_words	options.c	/^static struct output_struct debug_words[COUNT_DEBUG+1] = {$/;"	v	typeref:struct:output_struct	file:
def_acl	rsync.h	/^    struct rsync_acl *def_acl; \/* default ACL *\/$/;"	m	struct:__anon33	typeref:struct:__anon33::rsync_acl
def_compress_level	options.c	/^int def_compress_level = Z_DEFAULT_COMPRESSION;$/;"	v
def_window_size	rsync.h	/^	int32 def_window_size;	\/* Default window size			*\/$/;"	m	struct:map_struct
default_acl_list	acls.c	/^static item_list default_acl_list = EMPTY_ITEM_LIST;$/;"	v	file:
default_af_hint	options.c	/^int default_af_hint$/;"	v
default_charset	rsync.c	/^static const char *default_charset(void)$/;"	f	file:
default_cvsignore	exclude.c	/^static char default_cvsignore[] =$/;"	v	file:
default_name	clientname.c	/^static const char default_name[] = "UNKNOWN";$/;"	v	file:
default_perms_for_dir	acls.c	/^int default_perms_for_dir(const char *dir)$/;"	f
deflate	zlib/deflate.c	/^int ZEXPORT deflate (strm, flush)$/;"	f
deflate	zlib/zconf.h	17;"	d
deflateBound	zlib/deflate.c	/^uLong ZEXPORT deflateBound(strm, sourceLen)$/;"	f
deflateBound	zlib/zconf.h	27;"	d
deflateCopy	zlib/deflate.c	/^int ZEXPORT deflateCopy (dest, source)$/;"	f
deflateCopy	zlib/zconf.h	24;"	d
deflateEnd	zlib/deflate.c	/^int ZEXPORT deflateEnd (strm)$/;"	f
deflateEnd	zlib/zconf.h	18;"	d
deflateInit	zlib/zlib.h	1332;"	d
deflateInit2	zlib/zlib.h	1336;"	d
deflateInit2_	zlib/deflate.c	/^int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,$/;"	f
deflateInit2_	zlib/zconf.h	22;"	d
deflateInit_	zlib/deflate.c	/^int ZEXPORT deflateInit_(strm, level, version, stream_size)$/;"	f
deflateInit_	zlib/zconf.h	16;"	d
deflateParams	zlib/deflate.c	/^int ZEXPORT deflateParams(strm, level, strategy)$/;"	f
deflateParams	zlib/zconf.h	26;"	d
deflatePrime	zlib/deflate.c	/^int ZEXPORT deflatePrime (strm, bits, value)$/;"	f
deflatePrime	zlib/zconf.h	28;"	d
deflateReset	zlib/deflate.c	/^int ZEXPORT deflateReset (strm)$/;"	f
deflateReset	zlib/zconf.h	25;"	d
deflateSetDictionary	zlib/deflate.c	/^int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)$/;"	f
deflateSetDictionary	zlib/zconf.h	23;"	d
deflateSetHeader	zlib/deflate.c	/^int ZEXPORT deflateSetHeader (strm, head)$/;"	f
deflateTune	zlib/deflate.c	/^int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)$/;"	f
deflate_copyright	zlib/deflate.c	/^const char deflate_copyright[] =$/;"	v
deflate_fast	zlib/deflate.c	/^local block_state deflate_fast(s, flush)$/;"	f
deflate_slow	zlib/deflate.c	/^local block_state deflate_slow(s, flush)$/;"	f
deflate_state	zlib/deflate.h	/^} FAR deflate_state;$/;"	t	typeref:struct:internal_state
deflate_stored	zlib/deflate.c	/^local block_state deflate_stored(s, flush)$/;"	f
del_def_xattr_acl	xattrs.c	/^int del_def_xattr_acl(const char *fname)$/;"	f
delay_updates	options.c	/^int delay_updates = 0;$/;"	v
delayed_bits	receiver.c	/^static struct bitbag *delayed_bits = NULL;$/;"	v	typeref:struct:bitbag	file:
deldelay_buf	generator.c	/^static char *deldelay_buf = NULL;$/;"	v	file:
deldelay_cnt	generator.c	/^static int deldelay_size = 0, deldelay_cnt = 0;$/;"	v	file:
deldelay_fd	generator.c	/^static int deldelay_fd = -1;$/;"	v	file:
deldelay_size	generator.c	/^static int deldelay_size = 0, deldelay_cnt = 0;$/;"	v	file:
delete_after	options.c	/^int delete_after = 0;$/;"	v
delete_before	options.c	/^int delete_before = 0;$/;"	v
delete_dir_contents	delete.c	/^static enum delret delete_dir_contents(char *fname, uint16 flags)$/;"	f	file:
delete_during	options.c	/^int delete_during = 0;$/;"	v
delete_excluded	options.c	/^int delete_excluded = 0;$/;"	v
delete_in_dir	generator.c	/^static void delete_in_dir(char *fbuf, struct file_struct *file, dev_t *fs_dev)$/;"	f	file:
delete_item	delete.c	/^enum delret delete_item(char *fbuf, uint16 mode, uint16 flags)$/;"	f
delete_mode	options.c	/^int delete_mode = 0;$/;"	v
deleted_devices	rsync.h	/^	int deleted_files, deleted_dirs, deleted_symlinks, deleted_devices, deleted_specials;$/;"	m	struct:stats
deleted_dirs	rsync.h	/^	int deleted_files, deleted_dirs, deleted_symlinks, deleted_devices, deleted_specials;$/;"	m	struct:stats
deleted_files	rsync.h	/^	int deleted_files, deleted_dirs, deleted_symlinks, deleted_devices, deleted_specials;$/;"	m	struct:stats
deleted_specials	rsync.h	/^	int deleted_files, deleted_dirs, deleted_symlinks, deleted_devices, deleted_specials;$/;"	m	struct:stats
deleted_symlinks	rsync.h	/^	int deleted_files, deleted_dirs, deleted_symlinks, deleted_devices, deleted_specials;$/;"	m	struct:stats
delret	rsync.h	/^enum delret {$/;"	g
depth	testhelp/maketree.py	/^depth = 5$/;"	v
depth	zlib/deflate.h	/^    uch depth[2*L_CODES+1];$/;"	m	struct:internal_state
descrip	popt/popt.h	/^    const char * descrip;	\/*!< description for autohelp -- may be NULL *\/$/;"	m	struct:poptOption
dest_mode	rsync.c	/^mode_t dest_mode(mode_t flist_mode, mode_t stat_mode, int dflt_perms,$/;"	f
dest_option	options.c	/^char *dest_option = NULL;$/;"	v
dev_tbl	hlink.c	/^static struct hashtable *dev_tbl;$/;"	v	typeref:struct:hashtable	file:
dev_zero	generator.c	/^static dev_t dev_zero;$/;"	v	file:
dflt_perms	generator.c	/^static int dflt_perms;$/;"	v	file:
dir_flist	flist.c	/^struct file_list *cur_flist, *first_flist, *dir_flist;$/;"	v	typeref:struct:
dir_scan_callback	mongoose.c	/^static void dir_scan_callback(struct de *de, void *data) {$/;"	f	file:
dir_scan_data	mongoose.c	/^struct dir_scan_data {$/;"	s	file:
dir_tweaking	generator.c	/^static int dir_tweaking;$/;"	v	file:
dirbuf	exclude.c	/^static char dirbuf[MAXPATHLEN+1];$/;"	v	file:
dirbuf_depth	exclude.c	/^static int dirbuf_depth;$/;"	v	file:
dirbuf_len	exclude.c	/^static unsigned int dirbuf_len = 0;$/;"	v	file:
dirent	mongoose.c	/^struct dirent {$/;"	s	file:
dirent	rsync.h	421;"	d
dirname	rsync.h	/^	const char *dirname;	\/* The dir info inside the transfer *\/$/;"	m	struct:file_struct
discard_receive_data	receiver.c	/^static void discard_receive_data(int f_in, OFF_T length)$/;"	f	file:
displayArgs	popt/popthelp.c	/^static void displayArgs(poptContext con,$/;"	f	file:
distbits	zlib/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state
distcode	zlib/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state
distfix	zlib/inffixed.h	/^    static const code distfix[32] = {$/;"	v
dl	zlib/deflate.h	/^    } dl;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon11
dlopen	mongoose.c	/^static HANDLE dlopen(const char *dll_name, int flags) {$/;"	f	file:
dlsym	mongoose.c	140;"	d	file:
dmax	zlib/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state
doExec	popt/poptint.h	/^    poptItem doExec;$/;"	m	struct:poptContext_s
do_big_dnum	lib/compat.c	/^char *do_big_dnum(double dnum, int human_flag, int decimal_digits)$/;"	f
do_big_num	lib/compat.c	/^char *do_big_num(int64 num, int human_flag, const char *fract)$/;"	f
do_chmod	syscall.c	/^int do_chmod(const char *path, mode_t mode)$/;"	f
do_cmd	main.c	/^static pid_t do_cmd(char *cmd, char *machine, char *user, char **remote_argv, int remote_argc,$/;"	f	file:
do_compression	options.c	/^int do_compression = 0;$/;"	v
do_delayed_deletions	generator.c	/^static void do_delayed_deletions(char *delbuf)$/;"	f	file:
do_delete_pass	generator.c	/^static void do_delete_pass(void)$/;"	f	file:
do_fallocate	syscall.c	/^int do_fallocate(int fd, OFF_T offset, OFF_T length)$/;"	f
do_fork	util.c	/^pid_t do_fork(void)$/;"	f
do_fstat	syscall.c	/^int do_fstat(int fd, STRUCT_STAT *st)$/;"	f
do_ftruncate	syscall.c	/^int do_ftruncate(int fd, OFF_T size)$/;"	f
do_lchown	syscall.c	/^int do_lchown(const char *path, uid_t owner, gid_t group)$/;"	f
do_link	syscall.c	/^int do_link(const char *fname1, const char *fname2)$/;"	f
do_lseek	syscall.c	/^OFF_T do_lseek(int fd, OFF_T offset, int whence)$/;"	f
do_lstat	syscall.c	/^int do_lstat(const char *fname, STRUCT_STAT *st)$/;"	f
do_lutimes	syscall.c	/^int do_lutimes(const char *fname, time_t modtime, uint32 mod_nsec)$/;"	f
do_mkdir	syscall.c	/^int do_mkdir(char *fname, mode_t mode)$/;"	f
do_mknod	syscall.c	/^int do_mknod(const char *pathname, mode_t mode, dev_t dev)$/;"	f
do_mkstemp	syscall.c	/^int do_mkstemp(char *template, mode_t perms)$/;"	f
do_open	syscall.c	/^int do_open(const char *pathname, int flags, mode_t mode)$/;"	f
do_open_nofollow	syscall.c	/^int do_open_nofollow(const char *pathname, int flags)$/;"	f
do_over_http	main.c	/^pid_t do_over_http(int *f_in, int *f_out, char* shell_machine)$/;"	f
do_parameter	loadparm.c	/^static BOOL do_parameter(char *parmname, char *parmvalue)$/;"	f	file:
do_progress	options.c	/^static int do_progress = 0;$/;"	v	file:
do_readlink	rsync.h	1048;"	d
do_readlink	syscall.c	/^ssize_t do_readlink(const char *path, char *buf, size_t bufsiz)$/;"	f
do_recv	main.c	/^static int do_recv(int f_in, int f_out, char *local_name)$/;"	f	file:
do_rename	syscall.c	/^int do_rename(const char *fname1, const char *fname2)$/;"	f
do_rmdir	syscall.c	/^int do_rmdir(const char *pathname)$/;"	f
do_section	loadparm.c	/^static BOOL do_section(char *sectionname)$/;"	f	file:
do_server_recv	main.c	/^static void do_server_recv(int f_in, int f_out, int argc, char *argv[])$/;"	f	file:
do_server_sender	main.c	/^static void do_server_sender(int f_in, int f_out, int argc, char *argv[])$/;"	f	file:
do_ssi_exec	mongoose.c	/^static void do_ssi_exec(struct mg_connection *conn, char *tag) {$/;"	f	file:
do_ssi_include	mongoose.c	/^static void do_ssi_include(struct mg_connection *conn, const char *ssi,$/;"	f	file:
do_stat	syscall.c	/^int do_stat(const char *fname, STRUCT_STAT *st)$/;"	f
do_stats	options.c	/^static int do_stats = 0;$/;"	v	file:
do_symlink	syscall.c	/^int do_symlink(const char *lnk, const char *fname)$/;"	f
do_unlink	syscall.c	/^int do_unlink(const char *fname)$/;"	f
do_utime	syscall.c	/^int do_utime(const char *fname, time_t modtime, UNUSED(uint32 mod_nsec))$/;"	f
do_utimensat	syscall.c	/^int do_utimensat(const char *fname, time_t modtime, uint32 mod_nsec)$/;"	f
do_utimes	syscall.c	/^int do_utimes(const char *fname, time_t modtime, uint32 mod_nsec)$/;"	f
do_winexe	main.c	/^ pid_t do_winexe(char **command){$/;"	f
do_winexe_cmd	main.c	/^ pid_t do_winexe_cmd(char *machine,char *user)$/;"	f
do_xfers	options.c	/^int do_xfers = 1;$/;"	v
doliteral	lib/wildmatch.c	/^static int doliteral(const uchar *s, const uchar *text, const uchar*const *a)$/;"	f	file:
done	zlib/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
dont_compress	loadparm.c	/^	char *dont_compress;$/;"	m	struct:__anon19	file:
dopr	lib/snprintf.c	/^static int dopr(char *buffer, size_t maxlen, const char *format, va_list args_in)$/;"	f	file:
dopr_outch	lib/snprintf.c	/^static void dopr_outch(char *buffer, size_t *currlen, size_t maxlen, char c)$/;"	f	file:
dowild	lib/wildmatch.c	/^static int dowild(const uchar *p, const uchar *text, const uchar*const *a)$/;"	f	file:
dparam_list	options.c	/^item_list dparam_list = EMPTY_ITEM_LIST;$/;"	v
drain_multiplex_messages	io.c	/^static void drain_multiplex_messages(void)$/;"	f	file:
dry_run	options.c	/^int dry_run = 0;$/;"	v
dry_run	t_unsafe.c	/^int dry_run = 0;$/;"	v
dry_run	tls.c	/^int dry_run = 0;$/;"	v
dry_run	trimslash.c	/^int dry_run = 0;$/;"	v
dummy	zlib/deflate.c	/^struct static_tree_desc_s {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:static_tree_desc_s	file:
dummy	zlib/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state
dummy	zlib/zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:internal_state	file:
dummy_snprintf	lib/snprintf.c	/^ void dummy_snprintf(void) {} $/;"	f
dyn_dtree	zlib/deflate.h	/^    struct ct_data_s dyn_dtree[2*D_CODES+1]; \/* distance tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
dyn_ltree	zlib/deflate.h	/^    struct ct_data_s dyn_ltree[HEAP_SIZE];   \/* literal and length tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
dyn_tree	zlib/deflate.h	/^    ct_data *dyn_tree;           \/* the dynamic tree *\/$/;"	m	struct:tree_desc_s
e_created	lib/pool_alloc.c	/^	unsigned long		e_created;	\/* extents created	*\/$/;"	m	struct:alloc_pool	file:
e_freed	lib/pool_alloc.c	/^	unsigned long		e_freed;	\/* extents destroyed	*\/$/;"	m	struct:alloc_pool	file:
elems	zlib/trees.c	/^    int     elems;               \/* max number of elements in the tree *\/$/;"	m	struct:static_tree_desc_s	file:
emit_filelist_progress	flist.c	/^static void emit_filelist_progress(int count)$/;"	f	file:
empties_mod	wildtest.c	/^int empties_mod = 0;$/;"	v
empty_at_end	wildtest.c	/^int empty_at_end = 0;$/;"	v
empty_at_start	wildtest.c	/^int empty_at_start = 0;$/;"	v
empty_rsync_acl	acls.c	/^static const rsync_acl empty_rsync_acl = {$/;"	v	file:
empty_sum	flist.c	/^static char empty_sum[MAX_DIGEST_LEN];$/;"	v	file:
empty_xattr	xattrs.c	/^static item_list empty_xattr = EMPTY_ITEM_LIST;$/;"	v	file:
end_progress	progress.c	/^void end_progress(OFF_T size)$/;"	f
end_request	mongoose.h	/^  void (*end_request)(const struct mg_connection *, int reply_status_code);$/;"	m	struct:mg_callbacks
endtime	main.c	/^static time_t starttime, endtime;$/;"	v	file:
entries	mongoose.c	/^  struct de *entries;$/;"	m	struct:dir_scan_data	typeref:struct:dir_scan_data::de	file:
entries	rsync.h	/^	int32 size, entries;$/;"	m	struct:hashtable
entryp	lib/sysacls.h	/^	struct new_acl_entry *entryp;$/;"	m	struct:acl_entry_link	typeref:struct:acl_entry_link::new_acl_entry
enum_facilities	loadparm.c	/^static struct enum_list enum_facilities[] = {$/;"	v	typeref:struct:enum_list	file:
enum_list	loadparm.c	/^	struct enum_list *enum_list;$/;"	m	struct:parm_struct	typeref:struct:parm_struct::enum_list	file:
enum_list	loadparm.c	/^struct enum_list {$/;"	s	file:
eol_nulls	options.c	/^int eol_nulls = 0;$/;"	v
err_buf	options.c	/^static char err_buf[200];$/;"	v	file:
errcode	t_stub.c	/^ void rsyserr(UNUSED(enum logcode code), int errcode, const char *format, ...)$/;"	v
errno	mongoose.c	89;"	d	file:
errno	zlib/zutil.c	/^    int errno = 0;$/;"	v
establish_proxy_connection	socket.c	/^static int establish_proxy_connection(int fd, char *host, int port,$/;"	f	file:
events	mongoose.c	/^  short events;$/;"	m	struct:pollfd	file:
exchange_protocols	clientserver.c	/^static int exchange_protocols(int f_in, int f_out, char *buf, size_t bufsiz, int am_client)$/;"	f	file:
exclude	loadparm.c	/^	char *exclude;$/;"	m	struct:__anon19	file:
exclude_from	loadparm.c	/^	char *exclude_from;$/;"	m	struct:__anon19	file:
execAbsolute	popt/poptint.h	/^    int execAbsolute;$/;"	m	struct:poptContext_s
execCommand	popt/popt.c	/^static int execCommand(poptContext con)$/;"	f	file:
execPath	popt/poptint.h	/^    const char * execPath;$/;"	m	struct:poptContext_s
exec_prefix	Makefile	/^exec_prefix=${prefix}$/;"	m
execs	popt/poptint.h	/^    poptItem execs;$/;"	m	struct:poptContext_s
exit_cleanup	rsync.h	1210;"	d
exit_mongoose	main.c	/^int exit_mongoose =0 ; \/\/ our exit flag for mongoose server to stop. **[Akshay] mg_main()'s while loop will continuously monitor this flag$/;"	v
expandNextArg	popt/popt.c	/^expandNextArg(\/*@special@*\/ poptContext con, const char * s)$/;"	f	file:
expand_item_list	util.c	/^void *expand_item_list(item_list *lp, size_t item_size,$/;"	f
expand_vars	loadparm.c	/^static char *expand_vars(char *str)$/;"	f	file:
explode_mod	wildtest.c	/^int explode_mod = 0;$/;"	v
ext_len	mongoose.c	/^  size_t ext_len;$/;"	m	struct:__anon4	file:
extension	mongoose.c	/^  const char *extension;$/;"	m	struct:__anon4	file:
extents	lib/pool_alloc.c	/^	struct pool_extent	*extents;	\/* top extent is "live" *\/$/;"	m	struct:alloc_pool	typeref:struct:alloc_pool::pool_extent	file:
extra	zlib/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state
extra	zlib/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_base	zlib/trees.c	/^    int     extra_base;          \/* base index for extra_bits *\/$/;"	m	struct:static_tree_desc_s	file:
extra_bits	zlib/trees.c	/^    const intf *extra_bits;      \/* extra bits for each code or NULL *\/$/;"	m	struct:static_tree_desc_s	file:
extra_blbits	zlib/trees.c	/^local const int extra_blbits[BL_CODES]\/* extra bits for each bit length code *\/$/;"	v
extra_dbits	zlib/trees.c	/^local const int extra_dbits[D_CODES] \/* extra bits for each distance code *\/$/;"	v
extra_flist_sending_enabled	sender.c	/^BOOL extra_flist_sending_enabled;$/;"	v
extra_lbits	zlib/trees.c	/^local const int extra_lbits[LENGTH_CODES] \/* extra bits for each length code *\/$/;"	v
extra_len	zlib/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	zlib/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
extras	rounding.c	/^    union file_extras extras[ARRAY_LEN];$/;"	m	struct:test	typeref:union:test::file_extras	file:
f_name	flist.c	/^char *f_name(const struct file_struct *f, char *fbuf)$/;"	f
f_name_buf	flist.c	/^char *f_name_buf(void)$/;"	f
f_name_cmp	flist.c	/^int f_name_cmp(const struct file_struct *f1, const struct file_struct *f2)$/;"	f
f_name_has_prefix	flist.c	/^int f_name_has_prefix(const struct file_struct *f1, const struct file_struct *f2)$/;"	f
failed	tls.c	/^static void failed(char const *what, char const *where)$/;"	f	file:
fake_super	loadparm.c	/^	BOOL fake_super;$/;"	m	struct:__anon19	file:
false_alarms	match.c	/^static int false_alarms;$/;"	v	file:
fatal_unsafe_io_error	flist.c	/^static NORETURN void fatal_unsafe_io_error(void)$/;"	f	file:
fbsize	util.c	/^	int absize, fbsize, maxargs, argc;$/;"	m	struct:glob_data	file:
fc	mongoose.c	/^static struct mg_connection *fc(struct mg_context *ctx) {$/;"	f	file:
fc	zlib/deflate.h	/^    } fc;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon10
fclose_on_exec	mongoose.c	/^static void fclose_on_exec(struct file *filep) {$/;"	f	file:
fd	mongoose.c	/^  int fd;$/;"	m	struct:pollfd	file:
fd	rsync.h	/^	int fd;			\/* File Descriptor			*\/$/;"	m	struct:map_struct
fd_pair	util.c	/^int fd_pair(int fd[2])$/;"	f
fdopen	mongoose.c	143;"	d	file:
fdopen	zlib/zutil.h	134;"	d
fdopen	zlib/zutil.h	154;"	d
fdopen	zlib/zutil.h	159;"	d
fdopen	zlib/zutil.h	165;"	d
festatus	io.c	/^enum festatus { FES_SUCCESS, FES_REDO, FES_NO_SEND };$/;"	g	file:
ff_forward_fd	io.c	/^static int ff_forward_fd = -1;$/;"	v	file:
ff_lastchar	io.c	/^static char ff_lastchar = '\\0';$/;"	v	file:
ff_reenable_multiplex	io.c	/^static int ff_reenable_multiplex = -1;$/;"	v	file:
ff_xb	io.c	/^static xbuf ff_xb = EMPTY_XBUF;$/;"	v	file:
file	mongoose.c	/^  struct file file;$/;"	m	struct:de	typeref:struct:de::file	file:
file	mongoose.c	/^struct file {$/;"	s	file:
file	rounding.c	/^    struct file_struct file;$/;"	m	struct:test	typeref:struct:test::file_struct	file:
file_checksum	checksum.c	/^void file_checksum(char *fname, char *sum, OFF_T size)$/;"	f
file_checksum1	lib/mdfour.c	/^static void file_checksum1(char *fname)$/;"	f	file:
file_compare	flist.c	/^static int file_compare(const void *file1, const void *file2)$/;"	f	file:
file_extra_cnt	compat.c	/^int file_extra_cnt = 0; \/* count of file-list extras that everyone gets *\/$/;"	v
file_extras	rsync.h	/^union file_extras {$/;"	u
file_list	rsync.h	/^struct file_list {$/;"	s
file_name	mongoose.c	/^  char *file_name;$/;"	m	struct:de	file:
file_old_total	flist.c	/^int file_old_total = 0; \/* total of active items that will soon be gone *\/$/;"	v
file_pool	rsync.h	/^	alloc_pool_t file_pool;$/;"	m	struct:file_list
file_size	rsync.h	/^	OFF_T file_size;	\/* File size (from stat)		*\/$/;"	m	struct:map_struct
file_struct	rsync.h	/^struct file_struct {$/;"	s
file_total	flist.c	/^int file_total = 0; \/* total of all active items over all file-lists *\/$/;"	v
fileno	mongoose.c	155;"	d	file:
files	rsync.h	/^	struct file_struct **files, **sorted;$/;"	m	struct:file_list	typeref:struct:file_list::file_struct
files_from	options.c	/^char *files_from = NULL;$/;"	v
filesfrom_convert	compat.c	/^int filesfrom_convert = 0;$/;"	v
filesfrom_fd	options.c	/^int filesfrom_fd = -1;$/;"	v
filesfrom_host	options.c	/^char *filesfrom_host = NULL;$/;"	v
filesystem_dev	flist.c	/^dev_t filesystem_dev; \/* used to implement -x *\/$/;"	v
fill_file	testhelp/maketree.py	/^    def fill_file(self, f, size):$/;"	m	class:TreeBuilder
fill_window	zlib/deflate.c	/^local void fill_window(s)$/;"	f
filt_buf	util.c	/^	char *arg_buf, *filt_buf, **argv;$/;"	m	struct:glob_data	file:
filter	loadparm.c	/^	char *filter;$/;"	m	struct:__anon19	file:
filter_list	exclude.c	/^filter_rule_list filter_list = { .debug_type = "" };$/;"	v
filter_list_struct	rsync.h	/^typedef struct filter_list_struct {$/;"	s
filter_rule	rsync.h	/^} filter_rule;$/;"	t	typeref:struct:filter_struct
filter_rule_list	rsync.h	/^} filter_rule_list;$/;"	t	typeref:struct:filter_list_struct
filter_struct	rsync.h	/^typedef struct filter_struct {$/;"	s
filtered_fwrite	log.c	/^static void filtered_fwrite(FILE *f, const char *buf, int len, int use_isprint)$/;"	f	file:
finalArgv	popt/poptint.h	/^    const char ** finalArgv;$/;"	m	struct:poptContext_s
finalArgvAlloced	popt/poptint.h	/^    int finalArgvAlloced;$/;"	m	struct:poptContext_s
finalArgvCount	popt/poptint.h	/^    int finalArgvCount;$/;"	m	struct:poptContext_s
findNextArg	popt/popt.c	/^static const char * findNextArg(\/*@special@*\/ poptContext con,$/;"	f	file:
findOption	popt/popt.c	/^findOption(const struct poptOption * opt, \/*@null@*\/ const char * longName,$/;"	f	file:
findProgramPath	popt/findme.c	/^const char * findProgramPath(const char * argv0)$/;"	f
find_filename_suffix	util.c	/^const char *find_filename_suffix(const char *fn, int fn_len, int *len_ptr)$/;"	f
find_fuzzy	generator.c	/^static struct file_struct *find_fuzzy(struct file_struct *file, struct file_list *dirlist_array[], uchar *fnamecmp_type_ptr)$/;"	f	file:
find_matching_rsync_acl	acls.c	/^static int find_matching_rsync_acl(const rsync_acl *racl, SMB_ACL_TYPE_T type,$/;"	f	file:
find_matching_xattr	xattrs.c	/^static int find_matching_xattr(item_list *xalp)$/;"	f	file:
find_stack_direction	configure.sh	/^find_stack_direction ()$/;"	f
finish_done	zlib/deflate.c	/^    finish_done     \/* finish done, accept no more input or output *\/$/;"	e	enum:__anon12	file:
finish_filelist_progress	flist.c	/^static void finish_filelist_progress(const struct file_list *flist)$/;"	f	file:
finish_hard_link	hlink.c	/^void finish_hard_link(struct file_struct *file, const char *fname, int fin_ndx,$/;"	f
finish_pre_exec	clientserver.c	/^static char *finish_pre_exec(pid_t pid, int write_fd, int read_fd, char *request,$/;"	f	file:
finish_started	zlib/deflate.c	/^    finish_started, \/* finish started, need only more output at next deflate *\/$/;"	e	enum:__anon12	file:
finish_transfer	rsync.c	/^int finish_transfer(const char *fname, const char *fnametmp,$/;"	f
first_flist	flist.c	/^struct file_list *cur_flist, *first_flist, *dir_flist;$/;"	v	typeref:struct:
first_message	io.c	/^static int first_message = 1;$/;"	v	file:
fixedtables	zlib/inflate.c	/^local void fixedtables(state)$/;"	f
flag	options.c	/^	uchar flag;	\/* The flag's value, for consistency check. *\/$/;"	m	struct:output_struct	file:
flag_name	batch.c	/^static char *flag_name[] = {$/;"	v	file:
flag_ptr	batch.c	/^static int *flag_ptr[] = {$/;"	v	file:
flags	chmod.c	/^	char flags;$/;"	m	struct:chmod_mode_struct	file:
flags	lib/pool_alloc.c	/^	int			flags;$/;"	m	struct:alloc_pool	file:
flags	lib/snprintf.c	/^	int flags;$/;"	m	struct:pr_chunk	file:
flags	loadparm.c	/^	unsigned flags;$/;"	m	struct:parm_struct	file:
flags	popt/poptint.h	/^    int flags;$/;"	m	struct:poptContext_s
flags	rsync.h	/^	short flags;		\/**< flag bits *\/$/;"	m	struct:sum_buf
flags	rsync.h	/^	uint16 flags;		\/* The FLAG_* bits for this item *\/$/;"	m	struct:file_struct
flags	uidlist.c	/^	uint16 flags;$/;"	m	struct:idlist	file:
flags	zlib/inflate.h	/^    int flags;                  \/* gzip header method and flags (0 if zlib) *\/$/;"	m	struct:inflate_state
flength	rsync.h	/^	OFF_T flength;		\/**< total file length *\/$/;"	m	struct:sum_struct
flist_buildtime	rsync.h	/^	int64 flist_buildtime;$/;"	m	struct:stats
flist_cnt	flist.c	/^int flist_cnt = 0; \/* how many (non-tmp) file list objects exist *\/$/;"	v
flist_count_offset	flist.c	/^static int flist_count_offset; \/* for --delete --progress *\/$/;"	v	file:
flist_done_allocating	flist.c	/^static void flist_done_allocating(struct file_list *flist)$/;"	f	file:
flist_eof	flist.c	/^int flist_eof = 0; \/* all the file-lists are now known *\/$/;"	v
flist_expand	flist.c	/^static void flist_expand(struct file_list *flist, int extra)$/;"	f	file:
flist_find	flist.c	/^int flist_find(struct file_list *flist, struct file_struct *f)$/;"	f
flist_find_ignore_dirness	flist.c	/^int flist_find_ignore_dirness(struct file_list *flist, struct file_struct *f)$/;"	f
flist_for_ndx	rsync.c	/^struct file_list *flist_for_ndx(int ndx, const char *fatal_error_loc)$/;"	f
flist_free	flist.c	/^void flist_free(struct file_list *flist)$/;"	f
flist_ndx_item	rsync.h	/^struct flist_ndx_item {$/;"	s
flist_ndx_list	rsync.h	/^} flist_ndx_list;$/;"	t	typeref:struct:__anon29
flist_ndx_pop	util.c	/^int flist_ndx_pop(flist_ndx_list *lp)$/;"	f
flist_ndx_push	util.c	/^void flist_ndx_push(flist_ndx_list *lp, int ndx)$/;"	f
flist_new	flist.c	/^struct file_list *flist_new(int flags, char *msg)$/;"	f
flist_num	rsync.h	/^	int flist_num;  \/* 1-relative file_list number or 0 *\/$/;"	m	struct:file_list
flist_receiving_enabled	io.c	/^BOOL flist_receiving_enabled = False;$/;"	v
flist_size	rsync.h	/^	int64 flist_size;$/;"	m	struct:stats
flist_sort_and_clean	flist.c	/^static void flist_sort_and_clean(struct file_list *flist, int strip_root)$/;"	f	file:
flist_xfertime	rsync.h	/^	int64 flist_xfertime;$/;"	m	struct:stats
flockfile	mongoose.c	146;"	d	file:
flush_delete_delay	generator.c	/^static int flush_delete_delay(void)$/;"	f	file:
flush_pending	zlib/deflate.c	/^local void flush_pending(strm)$/;"	f
flush_write_file	fileio.c	/^int flush_write_file(int f)$/;"	f
fmtfp	lib/snprintf.c	/^static void fmtfp (char *buffer, size_t *currlen, size_t maxlen,$/;"	f	file:
fmtint	lib/snprintf.c	/^static void fmtint(char *buffer, size_t *currlen, size_t maxlen,$/;"	f	file:
fmtstr	lib/snprintf.c	/^static void fmtstr(char *buffer, size_t *currlen, size_t maxlen,$/;"	f	file:
fname	rsync.h	/^	char fname[1]; \/* has variable size *\/$/;"	m	struct:__anon32
fnc_state	flist.c	/^enum fnc_state { s_DIR, s_SLASH, s_BASE, s_TRAILING };$/;"	g	file:
fnc_type	flist.c	/^enum fnc_type { t_PATH, t_ITEM };$/;"	g	file:
fnmatch_errors	wildtest.c	/^int fnmatch_errors = 0;$/;"	v
foo	lib/pool_alloc.c	/^	uchar foo;$/;"	m	struct:align_test	file:
force_delete	options.c	/^int force_delete = 0;$/;"	v
force_lower_case	lib/wildmatch.c	/^static int force_lower_case = 0;$/;"	v	file:
format	t_stub.c	/^ void rprintf(UNUSED(enum logcode code), const char *format, ...)$/;"	v
format	t_stub.c	/^ void rsyserr(UNUSED(enum logcode code), int errcode, const char *format, ...)$/;"	v
forward_body_data	mongoose.c	/^static int forward_body_data(struct mg_connection *conn, FILE *fp,$/;"	f	file:
forward_filesfrom_data	io.c	/^static void forward_filesfrom_data(void)$/;"	f	file:
forward_flist_data	io.c	/^int forward_flist_data = 0;$/;"	v
forward_lookup	loadparm.c	/^	BOOL forward_lookup;$/;"	m	struct:__anon19	file:
found_prefix	flist.c	/^static int found_prefix;$/;"	v	file:
fp	mongoose.c	/^  FILE *fp;$/;"	m	struct:file	file:
free	lib/pool_alloc.c	/^	size_t			free;		\/* free bytecount	*\/$/;"	m	struct:pool_extent	file:
free_acl	acls.c	/^void free_acl(stat_x *sxp)$/;"	f
free_chmod_mode	chmod.c	/^int free_chmod_mode(struct chmod_mode_struct *chmod_modes)$/;"	f
free_context	mongoose.c	/^static void free_context(struct mg_context *ctx) {$/;"	f	file:
free_filter	exclude.c	/^static void free_filter(filter_rule *ex)$/;"	f	file:
free_filters	exclude.c	/^static void free_filters(filter_rule *head)$/;"	f	file:
free_func	zlib/zconf.h	47;"	d
free_func	zlib/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_sums	rsync.c	/^void free_sums(struct sum_struct *s)$/;"	f
free_xattr	xattrs.c	/^void free_xattr(stat_x *sxp)$/;"	f
free_xbuf	ifuncs.h	/^free_xbuf(xbuf *xb)$/;"	f
freeaclp	lib/sysacls.h	/^	BOOL freeaclp;$/;"	m	struct:SMB_ACL_T
freeaddrinfo	lib/addrinfo.h	157;"	d
freeaddrinfo	lib/addrinfo.h	159;"	d
freeaddrinfo	lib/getaddrinfo.c	/^void freeaddrinfo(struct addrinfo *res)$/;"	f
freq	zlib/deflate.h	/^        ush  freq;       \/* frequency count *\/$/;"	m	union:ct_data_s::__anon10
from_wire_mode	ifuncs.h	/^from_wire_mode(int mode)$/;"	f
fseeko	mongoose.c	142;"	d	file:
fsort	flist.c	/^static void fsort(struct file_struct **fp, size_t num)$/;"	f	file:
fsort_tmp	flist.c	/^static void fsort_tmp(struct file_struct **fp, size_t num,$/;"	f	file:
full_fname	util.c	/^char *full_fname(const char *fn)$/;"	f
full_module_path	clientserver.c	/^char *full_module_path;$/;"	v
full_write	util.c	/^int full_write(int desc, const char *ptr, size_t len)$/;"	f
fun	aa.c	/^fun(){gg();}$/;"	f
func	zlib/deflate.c	/^   compress_func func;$/;"	m	struct:config_s	file:
funlockfile	mongoose.c	147;"	d	file:
fuzzy_basis	options.c	/^int fuzzy_basis = 0;$/;"	v
fuzzy_distance	util.c	/^uint32 fuzzy_distance(const char *s1, unsigned len1, const char *s2, unsigned len2)$/;"	f
fvalue	lib/snprintf.c	/^	LDOUBLE fvalue;$/;"	m	struct:pr_chunk	file:
g	loadparm.c	/^	global_vars g;$/;"	m	struct:__anon20	file:
gai_strerror	lib/addrinfo.h	162;"	d
gai_strerror	lib/addrinfo.h	164;"	d
gai_strerror	lib/getaddrinfo.c	/^const char *gai_strerror(int errcode)$/;"	f
gen_bitlen	zlib/trees.c	/^local void gen_bitlen(s, desc)$/;"	f
gen_challenge	authenticate.c	/^static void gen_challenge(const char *addr, char *challenge)$/;"	f	file:
gen_codes	zlib/trees.c	/^local void gen_codes (tree, max_code, bl_count)$/;"	f
gen_trees_header	zlib/trees.c	/^void gen_trees_header()$/;"	f
gen_wants_ndx	receiver.c	/^static int gen_wants_ndx(int desired_ndx, int flist_num)$/;"	f	file:
generate_and_send_sums	generator.c	/^static int generate_and_send_sums(int fd, OFF_T len, int f_out, int f_copy)$/;"	f	file:
generate_files	generator.c	/^void generate_files(int f_out, const char *local_name)$/;"	f
generate_hash	authenticate.c	/^static void generate_hash(const char *in, const char *challenge, char *out)$/;"	f	file:
generate_names	testhelp/maketree.py	/^def generate_names():$/;"	f
getArgDescrip	popt/popthelp.c	/^getArgDescrip(const struct poptOption * opt,$/;"	f	file:
getTableTranslationDomain	popt/popthelp.c	/^getTableTranslationDomain(\/*@null@*\/ const struct poptOption *table)$/;"	f	file:
get_acl	acls.c	/^int get_acl(const char *fname, stat_x *sxp)$/;"	f
get_backup_name	backup.c	/^char *get_backup_name(const char *fname)$/;"	f
get_canon_name_from_addr	lib/getaddrinfo.c	/^static char *get_canon_name_from_addr(struct in_addr ip,$/;"	f	file:
get_checksum1	checksum.c	/^uint32 get_checksum1(char *buf1, int32 len)$/;"	f
get_checksum2	checksum.c	/^void get_checksum2(char *buf, int32 len, char *sum)$/;"	f
get_crc_table	zlib/crc32.c	/^const unsigned long FAR * ZEXPORT get_crc_table()$/;"	f
get_crc_table	zlib/zconf.h	43;"	d
get_cvs_excludes	exclude.c	/^static void get_cvs_excludes(uint32 rflags)$/;"	f	file:
get_del_for_flag	delete.c	/^uint16 get_del_for_flag(uint16 mode)$/;"	f
get_dirlist	flist.c	/^struct file_list *get_dirlist(char *dirname, int dlen, int flags)$/;"	f
get_first_ssl_listener_index	mongoose.c	/^static int get_first_ssl_listener_index(const struct mg_context *ctx) {$/;"	f	file:
get_header	mongoose.c	/^static const char *get_header(const struct mg_request_info *ri,$/;"	f	file:
get_hlink_num	io.c	/^int get_hlink_num(void)$/;"	f
get_local_name	main.c	/^static char *get_local_name(struct file_list *flist, char *dest_path)$/;"	f	file:
get_md5	lib/md5.c	/^void get_md5(uchar *out, const uchar *input, int n)$/;"	f
get_mime_type	mongoose.c	/^static void get_mime_type(struct mg_context *ctx, const char *path,$/;"	f	file:
get_month_index	mongoose.c	/^static int get_month_index(const char *s) {$/;"	f	file:
get_my_canon_name	lib/getaddrinfo.c	/^static char *get_my_canon_name(int *perr)$/;"	f	file:
get_option_index	mongoose.c	/^static int get_option_index(const char *name) {$/;"	f	file:
get_our_ctx	main.c	/^struct mg_context *get_our_ctx(void)$/;"	f
get_panic_action	main.c	/^const char *get_panic_action(void)$/;"	f
get_redo_num	io.c	/^int get_redo_num(void)$/;"	f
get_remote_ip	mongoose.c	/^static uint32_t get_remote_ip(const struct mg_connection *conn) {$/;"	f	file:
get_request_len	mongoose.c	/^static int get_request_len(const char *buf, int buflen) {$/;"	f	file:
get_rsync_acl	acls.c	/^static int get_rsync_acl(const char *fname, rsync_acl *racl,$/;"	f	file:
get_rule_prefix	exclude.c	/^char *get_rule_prefix(filter_rule *rule, const char *pat, int for_xfer,$/;"	f
get_sockaddr_family	clientname.c	/^static int get_sockaddr_family(const struct sockaddr_storage *ss)$/;"	f	file:
get_stat_xattr	xattrs.c	/^int get_stat_xattr(const char *fname, int fd, STRUCT_STAT *fst, STRUCT_STAT *xst)$/;"	f
get_tmpname	receiver.c	/^int get_tmpname(char *fnametmp, const char *fname, BOOL make_unique)$/;"	f
get_xattr	xattrs.c	/^int get_xattr(const char *fname, stat_x *sxp)$/;"	f
get_xattr_acl	xattrs.c	/^char *get_xattr_acl(const char *fname, int is_access_acl, size_t *len_p)$/;"	f
get_xattr_data	xattrs.c	/^static char *get_xattr_data(const char *fname, const char *name, size_t *len_ptr,$/;"	f	file:
get_xattr_names	xattrs.c	/^static ssize_t get_xattr_names(const char *fname)$/;"	f	file:
getaddr_info_name	lib/getaddrinfo.c	/^static int getaddr_info_name(const char *node,$/;"	f	file:
getaddr_info_single_addr	lib/getaddrinfo.c	/^static int getaddr_info_single_addr(const char *service,$/;"	f	file:
getaddrinfo	lib/addrinfo.h	152;"	d
getaddrinfo	lib/addrinfo.h	154;"	d
getaddrinfo	lib/getaddrinfo.c	/^int getaddrinfo(const char *node,$/;"	f
getallgroups	uidlist.c	/^const char *getallgroups(uid_t uid, gid_t *gid_list, int *size_ptr)$/;"	f
getcwd	lib/compat.c	/^ char *getcwd(char *buf, int size)$/;"	f
getenv	popt/system.h	118;"	d
gethostnameinfo	lib/getaddrinfo.c	/^static int gethostnameinfo(const struct sockaddr *sa,$/;"	f	file:
getnameinfo	lib/addrinfo.h	167;"	d
getnameinfo	lib/addrinfo.h	169;"	d
getnameinfo	lib/getaddrinfo.c	/^int getnameinfo(const struct sockaddr *sa, socklen_t salen,$/;"	f
getpassf	authenticate.c	/^static const char *getpassf(const char *filename)$/;"	f	file:
getreq	mongoose.c	/^static int getreq(struct mg_connection *conn, char *ebuf, size_t ebuf_len) {$/;"	f	file:
getsectionbyname	loadparm.c	/^static int getsectionbyname(char *name)$/;"	f	file:
getservicenameinfo	lib/getaddrinfo.c	/^static int getservicenameinfo(const struct sockaddr *sa,$/;"	f	file:
gf2_matrix_square	zlib/crc32.c	/^local void gf2_matrix_square(square, mat)$/;"	f
gf2_matrix_times	zlib/crc32.c	/^local unsigned long gf2_matrix_times(mat, vec)$/;"	f
gg	aa.c	/^void gg()$/;"	f
gid	loadparm.c	/^	char *gid;$/;"	m	struct:__anon19	file:
gid_count	clientserver.c	/^static int gid_count = 0;$/;"	v	file:
gid_list	clientserver.c	/^static gid_t gid_list[MAX_GID_LIST];$/;"	v	file:
gid_ndx	compat.c	/^int uid_ndx, gid_ndx, acls_ndx, xattrs_ndx, unsort_ndx;$/;"	v
gid_to_group	uidlist.c	/^char *gid_to_group(gid_t gid)$/;"	f
gidlist	uidlist.c	/^static struct idlist *gidlist, *gidmap;$/;"	v	typeref:struct:idlist	file:
gidmap	uidlist.c	/^static struct idlist *gidlist, *gidmap;$/;"	v	typeref:struct:	file:
glob	util.c	/^} glob;$/;"	v	typeref:struct:glob_data	file:
glob_data	util.c	/^static struct glob_data {$/;"	s	file:
glob_expand	util.c	/^int glob_expand(const char *arg, char ***argv_p, int *argc_p, int *maxargs_p)$/;"	f
glob_expand_module	util.c	/^void glob_expand_module(char *base1, char *arg, char ***argv_p, int *argc_p, int *maxargs_p)$/;"	f
glob_match	util.c	/^static void glob_match(char *arg, int abpos, int fbpos)$/;"	f	file:
global_log_file_lock	mongoose.c	/^static CRITICAL_SECTION global_log_file_lock;$/;"	v	file:
global_vars	loadparm.c	/^} global_vars;$/;"	t	typeref:struct:__anon18	file:
gmt_time_string	mongoose.c	/^static void gmt_time_string(char *buf, size_t buf_len, time_t *t) {$/;"	f	file:
gmtime	mongoose.c	/^static struct tm *gmtime(const time_t *ptime, struct tm *ptm) {$/;"	f	file:
good_length	zlib/deflate.c	/^   ush good_length; \/* reduce lazy search above this match length *\/$/;"	m	struct:config_s	file:
good_match	zlib/deflate.h	/^    uInt good_match;$/;"	m	struct:internal_state
got_flist_entry_status	io.c	/^static void got_flist_entry_status(enum festatus status, int ndx)$/;"	f	file:
got_xfer_error	log.c	/^int got_xfer_error = 0;$/;"	v
group_obj	acls.c	/^	uchar group_obj;$/;"	m	struct:rsync_acl	file:
group_to_gid	uidlist.c	/^int group_to_gid(const char *name, gid_t *gid_p, BOOL num_ok)$/;"	f
groupmap	options.c	/^char *groupmap = NULL;$/;"	v
groupmap_via_chown	options.c	/^static BOOL usermap_via_chown, groupmap_via_chown;$/;"	v	file:
gzFile	zlib/zlib.h	/^typedef voidp gzFile;$/;"	t
gz_header	zlib/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	zlib/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	zlib/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gzhead	zlib/deflate.h	/^    gz_headerp  gzhead;  \/* gzip header information to write *\/$/;"	m	struct:internal_state
gzindex	zlib/deflate.h	/^    uInt   gzindex;      \/* where in extra, name, or comment *\/$/;"	m	struct:internal_state
handle	mongoose.c	/^  HANDLE   handle;$/;"	m	struct:DIR	file:
handleAlias	popt/popt.c	/^static int handleAlias(\/*@special@*\/ poptContext con,$/;"	f	file:
handleExec	popt/popt.c	/^static int handleExec(\/*@special@*\/ poptContext con,$/;"	f	file:
handle_cgi_request	mongoose.c	/^static void handle_cgi_request(struct mg_connection *conn, const char *prog) {$/;"	f	file:
handle_delayed_updates	receiver.c	/^static void handle_delayed_updates(char *local_name)$/;"	f	file:
handle_directory_request	mongoose.c	/^static void handle_directory_request(struct mg_connection *conn,$/;"	f	file:
handle_file_request	mongoose.c	/^static void handle_file_request(struct mg_connection *conn, const char *path,$/;"	f	file:
handle_lsp_request	mongoose.c	/^static int handle_lsp_request(struct mg_connection *conn, const char *path,$/;"	f	file:
handle_partial_dir	util.c	/^int handle_partial_dir(const char *fname, int create)$/;"	f
handle_propfind	mongoose.c	/^static void handle_propfind(struct mg_connection *conn, const char *path,$/;"	f	file:
handle_request	mongoose.c	/^static void handle_request(struct mg_connection *conn) {$/;"	f	file:
handle_skipped_hlink	generator.c	/^static void handle_skipped_hlink(struct file_struct *file, int itemizing,$/;"	f	file:
handle_ssi_file_request	mongoose.c	/^static void handle_ssi_file_request(struct mg_connection *conn,$/;"	f	file:
handle_stats	main.c	/^static void handle_stats(int f)$/;"	f	file:
handle_websocket_request	mongoose.c	/^static void handle_websocket_request(struct mg_connection *conn) {$/;"	f	file:
hard_link_check	hlink.c	/^int hard_link_check(struct file_struct *file, int ndx, char *fname,$/;"	f
hard_link_one	hlink.c	/^int hard_link_one(struct file_struct *file, const char *fname,$/;"	f
hash_bits	zlib/deflate.h	/^    uInt  hash_bits;      \/* log2(hash_size) *\/$/;"	m	struct:internal_state
hash_hits	match.c	/^static int hash_hits;$/;"	v	file:
hash_mask	zlib/deflate.h	/^    uInt  hash_mask;      \/* hash_size-1 *\/$/;"	m	struct:internal_state
hash_search	match.c	/^static void hash_search(int f,struct sum_struct *s,$/;"	f	file:
hash_shift	zlib/deflate.h	/^    uInt  hash_shift;$/;"	m	struct:internal_state
hash_size	zlib/deflate.h	/^    uInt  hash_size;      \/* number of elements in hash table *\/$/;"	m	struct:internal_state
hash_table	match.c	/^static int32 *hash_table;$/;"	v	file:
hashtable	rsync.h	/^struct hashtable {$/;"	s
hashtable_create	hashtable.c	/^struct hashtable *hashtable_create(int size, int key64)$/;"	f
hashtable_destroy	hashtable.c	/^void hashtable_destroy(struct hashtable *tbl)$/;"	f
hashtable_find	hashtable.c	/^void *hashtable_find(struct hashtable *tbl, int64 key, int allocate_if_missing)$/;"	f
have	zlib/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state
havedict	zlib/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state
hcrc	zlib/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	rsync.h	/^	filter_rule *head;$/;"	m	struct:filter_list_struct
head	rsync.h	/^	struct flist_ndx_item *head, *tail;$/;"	m	struct:__anon29	typeref:struct:__anon29::flist_ndx_item
head	zlib/deflate.h	/^    Posf *head; \/* Heads of the hash chains or NIL. *\/$/;"	m	struct:internal_state
head	zlib/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state
heap	zlib/deflate.h	/^    int heap[2*L_CODES+1];      \/* heap used to build the Huffman trees *\/$/;"	m	struct:internal_state
heap_len	zlib/deflate.h	/^    int heap_len;               \/* number of elements in the heap *\/$/;"	m	struct:internal_state
heap_max	zlib/deflate.h	/^    int heap_max;               \/* element of largest frequency *\/$/;"	m	struct:internal_state
help	options.c	/^	char *help;	\/* The description of the info\/debug flag. *\/$/;"	m	struct:output_struct	file:
high	rsync.h	/^	int low, high;  \/* 0-relative index values excluding empties *\/$/;"	m	struct:file_list
hlink_compare_gnum	hlink.c	/^static int hlink_compare_gnum(int *int1, int *int2)$/;"	f	file:
hlink_flist	hlink.c	/^static struct file_list *hlink_flist;$/;"	v	typeref:struct:file_list	file:
hlink_list	io.c	/^static flist_ndx_list redo_list, hlink_list;$/;"	v	file:
hold	zlib/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state
hosts_allow	loadparm.c	/^	char *hosts_allow;$/;"	m	struct:__anon19	file:
hosts_deny	loadparm.c	/^	char *hosts_deny;$/;"	m	struct:__anon19	file:
hpux_acl_call_presence	lib/sysacls.c	/^static BOOL hpux_acl_call_presence(void)$/;"	f	file:
hpux_acl_sort	lib/sysacls.c	/^static int hpux_acl_sort(int acl_count, int calclass, struct acl *aclp)$/;"	f	file:
hpux_acl_types	lib/sysacls.c	/^struct hpux_acl_types {$/;"	s	file:
hpux_count_obj	lib/sysacls.c	/^static void hpux_count_obj(int acl_count, struct acl *aclp, struct hpux_acl_types *acl_type_count)$/;"	f	file:
hpux_get_needed_class_perm	lib/sysacls.c	/^static int hpux_get_needed_class_perm(struct acl *aclp)$/;"	f	file:
hpux_prohibited_duplicate_type	lib/sysacls.c	/^static BOOL hpux_prohibited_duplicate_type(int acl_type)$/;"	f	file:
hpux_swap_acl_entries	lib/sysacls.c	/^static void hpux_swap_acl_entries(struct acl *aclp0, struct acl *aclp1)$/;"	f	file:
ht_int32_node	rsync.h	/^struct ht_int32_node {$/;"	s
ht_int64_node	rsync.h	/^struct ht_int64_node {$/;"	s
http_500_error	mongoose.c	/^static const char *http_500_error = "Internal Server Error";$/;"	v	file:
http_error	mongoose.h	/^  int  (*http_error)(struct mg_connection *, int status);$/;"	m	struct:mg_callbacks
http_headers	mongoose.h	/^  } http_headers[64];         \/\/ Maximum 64 headers$/;"	m	struct:mg_request_info	typeref:struct:mg_request_info::mg_header
http_version	mongoose.h	/^  const char *http_version;   \/\/ E.g. "1.0", "1.1"$/;"	m	struct:mg_request_info
https_port	options.c	/^int https_port = 0;   \/\/arg_ptr fot http option this value is set if option matches$/;"	v
https_portno	main.c	/^int https_portno ;     \/\/ a global variable in main.c for copying port no. from https_port$/;"	v
human_dnum	inums.h	/^human_dnum(double dnum, int decimal_digits)$/;"	f
human_num	inums.h	/^human_num(int64 num)$/;"	f
human_readable	options.c	/^int human_readable = 1;$/;"	v
human_readable	t_unsafe.c	/^int human_readable = 0;$/;"	v
i	lib/pool_alloc.c	/^	    int64 i;$/;"	m	union:align_test::__anon7	file:
iSECTION	loadparm.c	89;"	d	file:
iSectionIndex	loadparm.c	/^static int iSectionIndex = -1;$/;"	v	file:
ic_chck	rsync.c	/^iconv_t ic_chck = (iconv_t)-1;$/;"	v
ic_recv	rsync.c	/^iconv_t ic_send = (iconv_t)-1, ic_recv = (iconv_t)-1;$/;"	v
ic_send	rsync.c	/^iconv_t ic_send = (iconv_t)-1, ic_recv = (iconv_t)-1;$/;"	v
iconv_buf	io.c	/^static xbuf iconv_buf = EMPTY_XBUF;$/;"	v	file:
iconv_opt	options.c	/^char *iconv_opt = ICONV_OPTION;$/;"	v
iconv_t	rsync.h	469;"	d
iconv_t	rsync.h	471;"	d
iconvbufs	rsync.c	/^int iconvbufs(iconv_t ic, xbuf *in, xbuf *out, int flags)$/;"	f
id	acls.c	/^	id_t id;$/;"	m	struct:__anon22	file:
id	uidlist.c	/^	id_t id, id2;$/;"	m	struct:idlist	file:
id2	uidlist.c	/^	id_t id, id2;$/;"	m	struct:idlist	file:
id_access	acls.c	/^} id_access;$/;"	t	typeref:struct:__anon22	file:
id_access_sorter	acls.c	/^static int id_access_sorter(const void *r1, const void *r2)$/;"	f	file:
id_parse	uidlist.c	/^static id_t id_parse(const char *num_str)$/;"	f	file:
id_t	rsync.h	/^typedef unsigned int id_t;$/;"	t
ida_entries	acls.c	/^} ida_entries;$/;"	t	typeref:struct:__anon23	file:
ida_entries_equal	acls.c	/^static BOOL ida_entries_equal(const ida_entries *ial1, const ida_entries *ial2)$/;"	f	file:
idas	acls.c	/^	id_access *idas;$/;"	m	struct:__anon23	file:
idev_destroy	hlink.c	/^void idev_destroy(void)$/;"	f
idev_find	hlink.c	/^struct ht_int64_node *idev_find(int64 dev, int64 ino)$/;"	f
idlist	uidlist.c	/^struct idlist {$/;"	s	file:
idname	acls.c	/^} idname;$/;"	t	typeref:struct:__anon24	file:
ignore_errors	loadparm.c	/^	BOOL ignore_errors;$/;"	m	struct:__anon19	file:
ignore_errors	options.c	/^int ignore_errors = 0;$/;"	v
ignore_existing	options.c	/^int ignore_existing = 0;$/;"	v
ignore_non_existing	options.c	/^int ignore_non_existing = 0;$/;"	v
ignore_nonreadable	loadparm.c	/^	BOOL ignore_nonreadable;$/;"	m	struct:__anon19	file:
ignore_perishable	delete.c	/^int ignore_perishable = 0;$/;"	v
ignore_times	options.c	/^int ignore_times = 0;$/;"	v
implied_dirs	options.c	/^int implied_dirs = 1;$/;"	v
implied_dirs_are_missing	generator.c	/^static int implied_dirs_are_missing;$/;"	v	file:
in	io.c	/^	xbuf in, out, msg;$/;"	m	struct:__anon21	file:
in	mongoose.c	/^  unsigned char in[64];$/;"	m	struct:MD5Context	file:
in_fd	io.c	/^	int in_fd;$/;"	m	struct:__anon21	file:
in_func	zlib/zconf.h	48;"	d
in_func	zlib/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
in_multiplexed	io.c	/^	int in_multiplexed;$/;"	m	struct:__anon21	file:
in_progress	rsync.h	/^	int in_progress, to_redo;$/;"	m	struct:file_list
inc_recurse	compat.c	/^int inc_recurse = 0;$/;"	v
include	loadparm.c	/^	char *include;$/;"	m	struct:__anon19	file:
include_config	params.c	/^static int include_config(char *include, int manage_globals)$/;"	f	file:
include_from	loadparm.c	/^	char *include_from;$/;"	m	struct:__anon19	file:
incoming_chmod	loadparm.c	/^	char *incoming_chmod;$/;"	m	struct:__anon19	file:
increment_active_files	io.c	/^void increment_active_files(int ndx, int itemizing, enum logcode code)$/;"	f
inet_ntop	lib/inet_ntop.c	/^inet_ntop(int af, const void *src, char *dst, size_t size)$/;"	f
inet_ntop4	lib/inet_ntop.c	/^inet_ntop4(const unsigned char *src, char *dst, size_t size)$/;"	f	file:
inet_ntop6	lib/inet_ntop.c	/^inet_ntop6(const unsigned char *src, char *dst, size_t size)$/;"	f	file:
inet_pton	lib/inet_pton.c	/^inet_pton(int af,$/;"	f
inet_pton4	lib/inet_pton.c	/^inet_pton4(src, dst)$/;"	f	file:
inet_pton6	lib/inet_pton.c	/^inet_pton6(src, dst)$/;"	f	file:
inflate	zlib/inflate.c	/^int ZEXPORT inflate(strm, flush)$/;"	f
inflate	zlib/zconf.h	20;"	d
inflateBack	zlib/zconf.h	35;"	d
inflateBackEnd	zlib/zconf.h	36;"	d
inflateBackInit	zlib/zlib.h	1341;"	d
inflateCopy	zlib/inflate.c	/^int ZEXPORT inflateCopy(dest, source)$/;"	f
inflateCopy	zlib/zconf.h	33;"	d
inflateEnd	zlib/inflate.c	/^int ZEXPORT inflateEnd(strm)$/;"	f
inflateEnd	zlib/zconf.h	21;"	d
inflateGetHeader	zlib/inflate.c	/^int ZEXPORT inflateGetHeader(strm, head)$/;"	f
inflateInit	zlib/zlib.h	1334;"	d
inflateInit2	zlib/zlib.h	1339;"	d
inflateInit2_	zlib/inflate.c	/^int ZEXPORT inflateInit2_(strm, windowBits, version, stream_size)$/;"	f
inflateInit2_	zlib/zconf.h	29;"	d
inflateInit_	zlib/inflate.c	/^int ZEXPORT inflateInit_(strm, version, stream_size)$/;"	f
inflateInit_	zlib/zconf.h	19;"	d
inflatePrime	zlib/inflate.c	/^int ZEXPORT inflatePrime(strm, bits, value)$/;"	f
inflateReset	zlib/inflate.c	/^int ZEXPORT inflateReset(strm)$/;"	f
inflateReset	zlib/zconf.h	34;"	d
inflateSetDictionary	zlib/inflate.c	/^int ZEXPORT inflateSetDictionary(strm, dictionary, dictLength)$/;"	f
inflateSetDictionary	zlib/zconf.h	30;"	d
inflateSync	zlib/inflate.c	/^int ZEXPORT inflateSync(strm)$/;"	f
inflateSync	zlib/zconf.h	31;"	d
inflateSyncPoint	zlib/inflate.c	/^int ZEXPORT inflateSyncPoint(strm)$/;"	f
inflateSyncPoint	zlib/zconf.h	32;"	d
inflate_copyright	zlib/inftrees.c	/^const char inflate_copyright[] =$/;"	v
inflate_fast	zlib/inffast.c	/^void inflate_fast(strm, start)$/;"	f
inflate_mode	zlib/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anon9
inflate_state	zlib/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	zlib/inftrees.c	/^int inflate_table(type, lens, codes, table, bits, work)$/;"	f
info	mongoose.c	/^  WIN32_FIND_DATAW info;$/;"	m	struct:DIR	file:
info_levels	options.c	/^short info_levels[COUNT_INFO], debug_levels[COUNT_DEBUG];$/;"	v
info_levels	t_unsafe.c	/^short info_levels[COUNT_INFO], debug_levels[COUNT_DEBUG];$/;"	v
info_verbosity	options.c	/^static const char *info_verbosity[1+MAX_VERBOSITY] = {$/;"	v	file:
info_words	options.c	/^static struct output_struct info_words[COUNT_INFO+1] = {$/;"	v	typeref:struct:output_struct	file:
init_block	zlib/trees.c	/^local void init_block(s)$/;"	f
init_flist	flist.c	/^void init_flist(void)$/;"	f
init_hard_links	hlink.c	/^void init_hard_links(void)$/;"	f
init_lua	mongoose.h	/^  void (*init_lua)(struct mg_connection *, void *lua_context);$/;"	m	struct:mg_callbacks
init_section	loadparm.c	/^static void init_section(local_vars *psection)$/;"	f	file:
init_set_compression	token.c	/^static void init_set_compression(void)$/;"	f	file:
init_ssl	mongoose.h	/^  int  (*init_ssl)(void *ssl_context);$/;"	m	struct:mg_callbacks
init_stat_x	ifuncs.h	/^init_stat_x(stat_x *sx_p)$/;"	f
initial_data_read	log.c	/^static int64 initial_data_read;$/;"	v	file:
initial_data_written	log.c	/^static int64 initial_data_written;$/;"	v	file:
inplace	options.c	/^int inplace = 0;$/;"	v
ins_h	zlib/deflate.h	/^    uInt  ins_h;          \/* hash index of string to be inserted *\/$/;"	m	struct:internal_state
int16	rsync.h	510;"	d
int16	rsync.h	512;"	d
int32	rsync.h	529;"	d
int32	rsync.h	532;"	d
int32	rsync.h	535;"	d
int32	rsync.h	538;"	d
int32	rsync.h	541;"	d
int32	rsync.h	544;"	d
int64	rsync.h	579;"	d
int64	rsync.h	582;"	d
int64	rsync.h	585;"	d
int64	rsync.h	588;"	d
int64	rsync.h	591;"	d
int64	rsync.h	594;"	d
int64	rsync.h	597;"	d
int64	rsync.h	600;"	d
int64	rsync.h	603;"	d
int64	rsync.h	607;"	d
int64_t	mongoose.c	/^typedef __int64   int64_t;$/;"	t	file:
int_byte_extra	io.c	/^static char int_byte_extra[64] = {$/;"	v	file:
internal_state	zlib/deflate.h	/^typedef struct internal_state {$/;"	s
internal_state	zlib/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
internal_state	zlib/zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
interpret_stat_error	flist.c	/^static void interpret_stat_error(const char *fname, int is_dir)$/;"	f	file:
intf	zlib/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	zlib/zconf.h	55;"	d
invokeCallbacksOPTION	popt/popt.c	/^static void invokeCallbacksOPTION(poptContext con,$/;"	f	file:
invokeCallbacksPOST	popt/popt.c	/^static void invokeCallbacksPOST(poptContext con, const struct poptOption * opt)$/;"	f	file:
invokeCallbacksPRE	popt/popt.c	/^static void invokeCallbacksPRE(poptContext con, const struct poptOption * opt)$/;"	f	file:
io_end_buffering_in	io.c	/^void io_end_buffering_in(BOOL free_buffers)$/;"	f
io_end_buffering_out	io.c	/^void io_end_buffering_out(BOOL free_buffers)$/;"	f
io_end_multiplex_in	io.c	/^int io_end_multiplex_in(int mode)$/;"	f
io_end_multiplex_out	io.c	/^int io_end_multiplex_out(int mode)$/;"	f
io_error	flist.c	/^int io_error;$/;"	v
io_flush	io.c	/^void io_flush(int flush_it_all)$/;"	f
io_printf	io.c	/^void io_printf(int fd, const char *format, ...)$/;"	f
io_set_sock_fds	io.c	/^void io_set_sock_fds(int f_in, int f_out)$/;"	f
io_start_buffering_in	io.c	/^BOOL io_start_buffering_in(int f_in)$/;"	f
io_start_buffering_out	io.c	/^BOOL io_start_buffering_out(int f_out)$/;"	f
io_start_multiplex_in	io.c	/^void io_start_multiplex_in(int fd)$/;"	f
io_start_multiplex_out	io.c	/^void io_start_multiplex_out(int fd)$/;"	f
io_timeout	options.c	/^int io_timeout = 0;$/;"	v
iobuf	io.c	/^} iobuf = { .in_fd = -1, .out_fd = -1 };$/;"	v	typeref:struct:__anon21	file:
isDigit	itypes.h	/^isDigit(const char *ptr)$/;"	f
isLower	itypes.h	/^isLower(const char *ptr)$/;"	f
isPrint	itypes.h	/^isPrint(const char *ptr)$/;"	f
isSpace	itypes.h	/^isSpace(const char *ptr)$/;"	f
isSpace	popt/poptint.h	/^isSpace(const char *ptr)$/;"	f
isUpper	itypes.h	/^isUpper(const char *ptr)$/;"	f
is_a_socket	socket.c	/^int is_a_socket(int fd)$/;"	f
is_authorized_for_put	mongoose.c	/^static int is_authorized_for_put(struct mg_connection *conn) {$/;"	f	file:
is_backup_file	delete.c	/^static inline int is_backup_file(char *fn)$/;"	f	file:
is_below	generator.c	/^static BOOL is_below(struct file_struct *file, struct file_struct *subtree)$/;"	f	file:
is_big_endian	mongoose.c	/^static int is_big_endian(void) {$/;"	f	file:
is_daemon_excluded	flist.c	/^static inline int is_daemon_excluded(const char *fname, int is_dir)$/;"	f	file:
is_directory	mongoose.c	/^  int is_directory;$/;"	m	struct:file	file:
is_excluded	flist.c	/^static int is_excluded(const char *fname, int is_dir, int filter_level)$/;"	f	file:
is_file_in_memory	mongoose.c	/^static int is_file_in_memory(struct mg_connection *conn, const char *path,$/;"	f	file:
is_file_opened	mongoose.c	/^static int is_file_opened(const struct file *filep) {$/;"	f	file:
is_in_group	uidlist.c	/^static int is_in_group(gid_t gid)$/;"	f	file:
is_not_modified	mongoose.c	/^static int is_not_modified(const struct mg_connection *conn,$/;"	f	file:
is_put_or_delete_request	mongoose.c	/^static int is_put_or_delete_request(const struct mg_connection *conn) {$/;"	f	file:
is_ssl	mongoose.c	/^  unsigned is_ssl:1;    \/\/ Is port SSL-ed$/;"	m	struct:socket	file:
is_ssl	mongoose.h	/^  int is_ssl;                 \/\/ 1 if SSL-ed, 0 if not$/;"	m	struct:mg_request_info
is_valid_http_method	mongoose.c	/^static int is_valid_http_method(const char *method) {$/;"	f	file:
is_valid_uri	mongoose.c	/^static int is_valid_uri(const char *uri) {$/;"	f	file:
is_websocket_request	mongoose.c	/^static int is_websocket_request(const struct mg_connection *conn) {$/;"	f	file:
isbyte	mongoose.c	/^static int isbyte(int n) {$/;"	f	file:
itemHelp	popt/popthelp.c	/^static void itemHelp(FILE * fp,$/;"	f	file:
itemUsage	popt/popthelp.c	/^static size_t itemUsage(FILE * fp, size_t cursor,$/;"	f	file:
item_list	rsync.h	/^} item_list;$/;"	t	typeref:struct:__anon30
itemize	generator.c	/^void itemize(const char *fnamecmp, struct file_struct *file, int ndx, int statret,$/;"	f
itemize_changes	options.c	/^static int itemize_changes = 0;$/;"	v	file:
items	rsync.h	/^	void *items;$/;"	m	struct:__anon30
iwildmatch	lib/wildmatch.c	/^int iwildmatch(const char *pattern, const char *text)$/;"	f
keep_dirlinks	options.c	/^int keep_dirlinks = 0;$/;"	v
keep_partial	options.c	/^int keep_partial = 0;$/;"	v
key	rsync.h	/^	int32 key;$/;"	m	struct:ht_int32_node
key	rsync.h	/^	int64 key;$/;"	m	struct:ht_int64_node
key64	rsync.h	/^	short key64;$/;"	m	struct:hashtable
kill	mongoose.c	/^static int kill(pid_t pid, int sig_num) {$/;"	f	file:
kill_all	util.c	/^void kill_all(int sig)$/;"	f
kluge_around_eof	io.c	/^int kluge_around_eof = 0;$/;"	v
l	loadparm.c	/^	local_vars l;$/;"	m	struct:__anon20	file:
l	mongoose.c	/^union char64long16 { unsigned char c[64]; uint32_t l[16]; };$/;"	m	union:char64long16	file:
l_buf	zlib/deflate.h	/^    uchf *l_buf;          \/* buffer for literals or lengths *\/$/;"	m	struct:internal_state
l_desc	zlib/deflate.h	/^    struct tree_desc_s l_desc;               \/* desc. for literal tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
label	loadparm.c	/^	char *label;$/;"	m	struct:parm_struct	file:
last	zlib/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state
last_eob_len	zlib/deflate.h	/^    int last_eob_len;   \/* bit length of EOB code for last block *\/$/;"	m	struct:internal_state
last_flush	zlib/deflate.h	/^    int   last_flush;    \/* value of flush param for previous deflate call *\/$/;"	m	struct:internal_state
last_io_in	io.c	/^static time_t last_io_in;$/;"	v	file:
last_io_out	io.c	/^static time_t last_io_out;$/;"	v	file:
last_lit	zlib/deflate.h	/^    uInt last_lit;      \/* running index in l_buf *\/$/;"	m	struct:internal_state
last_match	match.c	/^static OFF_T last_match;$/;"	v	file:
last_run_end	token.c	/^static int32 last_run_end;$/;"	v	file:
last_throttle_bytes	mongoose.c	/^  int64_t last_throttle_bytes;\/\/ Bytes sent this second$/;"	m	struct:mg_connection	file:
last_throttle_time	mongoose.c	/^  time_t last_throttle_time;  \/\/ Last time throttled data was sent$/;"	m	struct:mg_connection	file:
last_token	token.c	/^static int32 last_token = -1;$/;"	v	file:
lchown	syscall.c	124;"	d	file:
leftovers	popt/poptint.h	/^    const char ** leftovers;$/;"	m	struct:poptContext_s
len	acls.c	/^	uchar len;$/;"	m	struct:__anon24	file:
len	lib/snprintf.c	/^	int len;$/;"	m	struct:pr_chunk	file:
len	mongoose.c	/^  int len; \/\/ Space taken$/;"	m	struct:cgi_env_block	file:
len	mongoose.c	/^  size_t len;$/;"	m	struct:vec	file:
len	rsync.h	/^	int32 len;		\/**< length of chunk of file *\/$/;"	m	struct:sum_buf
len	rsync.h	/^	size_t len;  \/* len = chars following pos *\/$/;"	m	struct:__anon31
len	zlib/deflate.h	/^        ush  len;        \/* length of bit string *\/$/;"	m	union:ct_data_s::__anon11
len32	rsync.h	/^	uint32 len32;		\/* Lowest 32 bits of the file's length *\/$/;"	m	struct:file_struct
lenbits	zlib/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state
lencode	zlib/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state
lenfix	zlib/inffixed.h	/^    static const code lenfix[512] = {$/;"	v
length	zlib/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state
lens	zlib/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state
letter	token.c	/^	char letter, word_end;$/;"	m	struct:suffix_tree	file:
level	socket.c	/^  int level;$/;"	m	struct:__anon34	file:
level	zlib/deflate.h	/^    int level;    \/* compression level (1..9) *\/$/;"	m	struct:internal_state
limit_output_verbosity	options.c	/^void limit_output_verbosity(int level)$/;"	f
link_dest	options.c	/^int link_dest = 0;$/;"	v
link_or_rename	backup.c	/^static inline int link_or_rename(const char *from, const char *to,$/;"	f	file:
link_owner	tls.c	/^int link_owner = 0;$/;"	v
link_stat	flist.c	/^int link_stat(const char *path, STRUCT_STAT *stp, int follow_dirlinks)$/;"	f
link_times	tls.c	/^int link_times = 0;$/;"	v
list	loadparm.c	/^	BOOL list;$/;"	m	struct:__anon19	file:
list_file	tls.c	/^static void list_file(const char *fname)$/;"	f	file:
list_file_entry	generator.c	/^static void list_file_entry(struct file_struct *f)$/;"	f	file:
list_only	options.c	/^int list_only = 0;$/;"	v
list_only	t_unsafe.c	/^int list_only = 0;$/;"	v
list_only	tls.c	/^int list_only = 0;$/;"	v
list_only	trimslash.c	/^int list_only = 0;$/;"	v
listen_backlog	loadparm.c	/^	int listen_backlog;$/;"	m	struct:__anon18	file:
listening_sockets	mongoose.c	/^  struct socket *listening_sockets;$/;"	m	struct:mg_context	typeref:struct:mg_context::socket	file:
lit_bufsize	zlib/deflate.h	/^    uInt  lit_bufsize;$/;"	m	struct:internal_state
literal_data	rsync.h	/^	int64 literal_data;$/;"	m	struct:stats
litmatch_array	lib/wildmatch.c	/^int litmatch_array(const char *string, const char*const *texts, int where)$/;"	f
lm_init	zlib/deflate.c	/^local void lm_init (s)$/;"	f
load_config	clientserver.c	/^static int load_config(int globals_only)$/;"	f	file:
load_dll	mongoose.c	/^static int load_dll(struct mg_context *ctx, const char *dll_name,$/;"	f	file:
local	zlib/crc32.c	31;"	d	file:
local	zlib/zutil.h	46;"	d
local_child	pipe.c	/^pid_t local_child(int argc, char **argv, int *f_in, int *f_out,$/;"	f
local_filter_state	exclude.c	/^struct local_filter_state {$/;"	s	file:
local_server	main.c	/^int local_server = 0;$/;"	v
local_vars	loadparm.c	/^} local_vars;$/;"	t	typeref:struct:__anon19	file:
localtime	mongoose.c	/^static struct tm *localtime(const time_t *ptime, struct tm *ptm) {$/;"	f	file:
lock_file	loadparm.c	/^	char *lock_file;$/;"	m	struct:__anon19	file:
lock_range	util.c	/^int lock_range(int fd, int offset, int len)$/;"	f
log_access	mongoose.c	/^static void log_access(const struct mg_connection *conn) {$/;"	f	file:
log_before_transfer	options.c	/^int log_before_transfer = 0;$/;"	v
log_delete	log.c	/^void log_delete(const char *fname, int mode)$/;"	f
log_exit	log.c	/^void log_exit(int code, const char *file, int line)$/;"	f
log_file	loadparm.c	/^	char *log_file;$/;"	m	struct:__anon19	file:
log_format	loadparm.c	/^	char *log_format;$/;"	m	struct:__anon19	file:
log_format_has	log.c	/^int log_format_has(const char *format, char esc)$/;"	f
log_formatted	log.c	/^static void log_formatted(enum logcode code, const char *format, const char *op,$/;"	f	file:
log_header	mongoose.c	/^static void log_header(const struct mg_connection *conn, const char *header,$/;"	f	file:
log_init	log.c	/^void log_init(int restart)$/;"	f
log_initialised	log.c	/^static int log_initialised;$/;"	v	file:
log_item	log.c	/^void log_item(enum logcode code, struct file_struct *file, int iflags, const char *hlink)$/;"	f
log_message	mongoose.h	/^  int  (*log_message)(const struct mg_connection *, const char *message);$/;"	m	struct:mg_callbacks
logcode	rsync.h	/^enum logcode {$/;"	g
logfile_close	log.c	/^void logfile_close(void)$/;"	f
logfile_format	options.c	/^char *logfile_format = NULL;$/;"	v
logfile_format_has_i	options.c	/^int logfile_format_has_i = 0;$/;"	v
logfile_format_has_o_or_i	options.c	/^int logfile_format_has_o_or_i = 0;$/;"	v
logfile_fp	log.c	/^static FILE *logfile_fp;$/;"	v	file:
logfile_name	options.c	/^char *logfile_name = NULL;$/;"	v
logfile_open	log.c	/^static void logfile_open(void)$/;"	f	file:
logfile_reopen	log.c	/^void logfile_reopen(void)$/;"	f
logfile_was_closed	log.c	/^static int logfile_was_closed;$/;"	v	file:
logit	log.c	/^static void logit(int priority, const char *buf)$/;"	f	file:
longName	popt/popt.h	/^    const char * longName;	\/*!< may be NULL *\/$/;"	m	struct:poptAlias
longName	popt/popt.h	/^    const char * longName;	\/*!< may be NULL *\/$/;"	m	struct:poptOption
long_daemon_options	options.c	/^static struct poptOption long_daemon_options[] = {$/;"	v	typeref:struct:poptOption	file:
long_options	options.c	/^static struct poptOption long_options[] = {$/;"	v	typeref:struct:poptOption	file:
long_options	tls.c	/^static struct poptOption long_options[] = {$/;"	v	typeref:struct:poptOption	file:
long_options	wildtest.c	/^static struct poptOption long_options[] = {$/;"	v	typeref:struct:poptOption	file:
longest_match	zlib/deflate.c	/^local uInt longest_match(s, cur_match)$/;"	f
longest_match_fast	zlib/deflate.c	/^local uInt longest_match_fast(s, cur_match)$/;"	f
lookahead	zlib/deflate.h	/^    uInt lookahead;              \/* number of valid bytes ahead in window *\/$/;"	m	struct:internal_state
lookup_name	clientname.c	/^int lookup_name(int fd, const struct sockaddr_storage *ss,$/;"	f
loopchk_limit	generator.c	/^static int loopchk_limit;$/;"	v	file:
low	rsync.h	/^	int low, high;  \/* 0-relative index values excluding empties *\/$/;"	m	struct:file_list
lowercase	mongoose.c	/^static int lowercase(const char *s) {$/;"	f	file:
lp_load	loadparm.c	/^int lp_load(char *pszFname, int globals_only)$/;"	f
lp_num_modules	loadparm.c	/^int lp_num_modules(void)$/;"	f
lp_number	loadparm.c	/^int lp_number(char *name)$/;"	f
lsa	mongoose.c	/^  union usa lsa;        \/\/ Local socket address$/;"	m	struct:socket	typeref:union:socket::usa	file:
lshift	lib/mdfour.c	36;"	d	file:
lsp	mongoose.c	/^static int lsp(struct mg_connection *conn, const char *path,$/;"	f	file:
lsp_abort	mongoose.c	/^static void lsp_abort(lua_State *L) {$/;"	f	file:
lsp_mg_error	mongoose.c	/^static int lsp_mg_error(lua_State *L) {$/;"	f	file:
lsp_mg_print	mongoose.c	/^static int lsp_mg_print(lua_State *L) {$/;"	f	file:
lsp_mg_read	mongoose.c	/^static int lsp_mg_read(lua_State *L) {$/;"	f	file:
lsp_mod_cry	mongoose.c	/^static int lsp_mod_cry(lua_State *L){$/;"	f	file:
lsp_mod_include	mongoose.c	/^static int lsp_mod_include(lua_State *L) {$/;"	f	file:
lsp_mod_redirect	mongoose.c	/^static int lsp_mod_redirect(lua_State *L) {$/;"	f	file:
m	lib/mdfour.c	/^static md_context *m;$/;"	v	file:
main	aa.c	/^main(){$/;"	f
main	aamche_server.c	/^int main(int argc , char **argv )$/;"	f
main	configure.sh	/^    main() {$/;"	f
main	configure.sh	/^main ()$/;"	f
main	configure.sh	/^main() { foo("hello"); }$/;"	f
main	configure.sh	/^main() { int rc, ec; char *fn = "fifo-test";$/;"	f
main	configure.sh	/^main() { int rc, ec; char *fn = "sock-test";$/;"	f
main	configure.sh	/^main() { struct dirent *di; DIR *d = opendir("."); di = readdir(d);$/;"	f
main	configure.sh	/^main() {$/;"	f
main	getfsdev.c	/^ int main(int argc, char *argv[])$/;"	f
main	lib/md5.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/mdfour.c	/^ int main(int argc, char *argv[])$/;"	f
main	lib/snprintf.c	/^ int main (void)$/;"	f
main	main.c	/^int main(int argc,char *argv[])$/;"	f
main	support/savetransfer.c	/^main(int argc, char *argv[])$/;"	f
main	t_unsafe.c	/^main(int argc, char **argv)$/;"	f
main	testrun.c	/^ int main(int argc, char *argv[])$/;"	f
main	tls.c	/^main(int argc, char *argv[])$/;"	f
main	trimslash.c	/^main(int argc, char **argv)$/;"	f
main	wildtest.c	/^main(int argc, char **argv)$/;"	f
make_backup	backup.c	/^int make_backup(const char *fname, BOOL prefer_rename)$/;"	f
make_backups	options.c	/^int make_backups = 0;$/;"	v
make_child_recurse	testhelp/maketree.py	/^    def make_child_recurse(self, dname, depth):$/;"	m	class:TreeBuilder
make_crc_table	zlib/crc32.c	/^local void make_crc_table()$/;"	f
make_dir	testhelp/maketree.py	/^    def make_dir(self, dname, depth='ignore'):$/;"	m	class:TreeBuilder
make_file	flist.c	/^struct file_struct *make_file(const char *fname, struct file_list *flist,$/;"	f
make_file	testhelp/maketree.py	/^    def make_file(self, fname, depth='ignore'):$/;"	m	class:TreeBuilder
make_mask	access.c	/^static void make_mask(char *mask, int plen, int addrlen)$/;"	f	file:
make_output_option	options.c	/^static char *make_output_option(struct output_struct *words, short *levels, uchar where)$/;"	f	file:
make_path	util.c	/^int make_path(char *fname, int flags)$/;"	f
make_symlink	testhelp/maketree.py	/^    def make_symlink(self, lname, depth='ignore'):$/;"	m	class:TreeBuilder
makedev	rsync.h	436;"	d
makefixed	zlib/inflate.c	/^void makefixed()$/;"	f
malloced	rsync.h	/^	int used, malloced;$/;"	m	struct:file_list
malloced	rsync.h	/^	size_t malloced;$/;"	m	struct:__anon30
mandir	Makefile	/^mandir=${datarootdir}\/man$/;"	m
map_file	fileio.c	/^struct map_struct *map_file(int fd, OFF_T len, int32 read_size,$/;"	f
map_parameter	loadparm.c	/^static int map_parameter(char *parmname)$/;"	f	file:
map_ptr	fileio.c	/^char *map_ptr(struct map_struct *map, OFF_T offset, int32 len)$/;"	f
map_struct	rsync.h	/^struct map_struct {$/;"	s
mask_obj	acls.c	/^	uchar mask_obj;$/;"	m	struct:rsync_acl	file:
master_thread	mongoose.c	/^static void *master_thread(void *thread_func_param) {$/;"	f	file:
match_acl_ids	acls.c	/^void match_acl_ids(void)$/;"	f
match_address	access.c	/^static int match_address(const char *addr, const char *tok)$/;"	f	file:
match_available	zlib/deflate.h	/^    int match_available;         \/* set if previous match exists *\/$/;"	m	struct:internal_state
match_binary	access.c	/^static int match_binary(const char *b1, const char *b2, const char *mask, int addrlen)$/;"	f	file:
match_gid	uidlist.c	/^gid_t match_gid(gid_t gid, uint16 *flags_ptr)$/;"	f
match_gnums	hlink.c	/^static void match_gnums(int32 *ndx_list, int ndx_count)$/;"	f	file:
match_hard_links	hlink.c	/^void match_hard_links(struct file_list *flist)$/;"	f
match_hostname	access.c	/^static int match_hostname(const char **host_ptr, const char *addr, const char *tok)$/;"	f	file:
match_length	zlib/deflate.h	/^    uInt match_length;           \/* length of best match *\/$/;"	m	struct:internal_state
match_list	token.c	/^static char *match_list;$/;"	v	file:
match_prefix	mongoose.c	/^static int match_prefix(const char *pattern, int pattern_len, const char *str) {$/;"	f	file:
match_racl_ids	acls.c	/^static void match_racl_ids(const item_list *racl_list)$/;"	f	file:
match_report	match.c	/^void match_report(void)$/;"	f
match_start	zlib/deflate.h	/^    uInt match_start;            \/* start of matching string *\/$/;"	m	struct:internal_state
match_sums	match.c	/^void match_sums(int f, struct sum_struct *s, struct map_struct *buf, OFF_T len)$/;"	f
match_uid	uidlist.c	/^uid_t match_uid(uid_t uid)$/;"	f
matched	match.c	/^static void matched(int f, struct sum_struct *s, struct map_struct *buf,$/;"	f	file:
matched_data	rsync.h	/^	int64 matched_data;$/;"	m	struct:stats
matches	match.c	/^static int matches;$/;"	v	file:
matches	zlib/deflate.h	/^    uInt matches;       \/* number of string matches in current block *\/$/;"	m	struct:internal_state
max	lib/snprintf.c	/^	int max;$/;"	m	struct:pr_chunk	file:
maxArgWidth	popt/popthelp.c	/^static size_t maxArgWidth(const struct poptOption * opt,$/;"	f	file:
max_chain	zlib/deflate.c	/^   ush max_chain;$/;"	m	struct:config_s	file:
max_chain_length	zlib/deflate.h	/^    uInt max_chain_length;$/;"	m	struct:internal_state
max_code	zlib/deflate.h	/^    int     max_code;            \/* largest code with non zero frequency *\/$/;"	m	struct:tree_desc_s
max_connections	loadparm.c	/^	int max_connections;$/;"	m	struct:__anon19	file:
max_delete	options.c	/^int max_delete = INT_MIN;$/;"	v
max_id	uidlist.c	/^    id_t max_id;$/;"	m	union:name_or_id	file:
max_insert_length	zlib/deflate.h	176;"	d
max_lazy	zlib/deflate.c	/^   ush max_lazy;    \/* do not perform lazy search above this match length *\/$/;"	m	struct:config_s	file:
max_lazy_match	zlib/deflate.h	/^    uInt max_lazy_match;$/;"	m	struct:internal_state
max_length	zlib/trees.c	/^    int     max_length;          \/* max bit length for the codes *\/$/;"	m	struct:static_tree_desc_s	file:
max_size	options.c	/^OFF_T max_size = -1;$/;"	v
max_size_arg	options.c	/^static char *bwlimit_arg, *max_size_arg, *min_size_arg;$/;"	v	file:
max_star	lib/snprintf.c	/^	struct pr_chunk *max_star;$/;"	m	struct:pr_chunk	typeref:struct:pr_chunk::pr_chunk	file:
max_verbosity	loadparm.c	/^	int max_verbosity;$/;"	m	struct:__anon19	file:
maxargs	util.c	/^	int absize, fbsize, maxargs, argc;$/;"	m	struct:glob_data	file:
maxopts	popt/popthelp.c	/^    int maxopts;$/;"	m	struct:poptDone_s	file:
maybe_ATTRS_REPORT	generator.c	/^int maybe_ATTRS_REPORT = 0;$/;"	v
maybe_discard_scratch	runtests.sh	/^maybe_discard_scratch() {$/;"	f
maybe_emit_filelist_progress	flist.c	/^static void maybe_emit_filelist_progress(int count)$/;"	f	file:
maybe_flush_socket	io.c	/^void maybe_flush_socket(int important)$/;"	f
maybe_hard_link	hlink.c	/^static int maybe_hard_link(struct file_struct *file, int ndx,$/;"	f	file:
maybe_log_item	log.c	/^void maybe_log_item(struct file_struct *file, int iflags, int itemizing,$/;"	f
maybe_send_keepalive	io.c	/^void maybe_send_keepalive(time_t now, int flags)$/;"	f
md	checksum.c	/^static md_context md;$/;"	v	file:
md5	lib/md5.c	/^    char *str, *md5;$/;"	m	struct:__anon6	file:
md5_begin	lib/md5.c	/^void md5_begin(md_context *ctx)$/;"	f
md5_padding	lib/md5.c	/^static uchar md5_padding[CSUM_CHUNK] = { 0x80 };$/;"	v	file:
md5_process	lib/md5.c	/^static void md5_process(md_context *ctx, const uchar data[CSUM_CHUNK])$/;"	f	file:
md5_result	lib/md5.c	/^void md5_result(md_context *ctx, uchar digest[MD5_DIGEST_LEN])$/;"	f
md5_update	lib/md5.c	/^void md5_update(md_context *ctx, const uchar *input, uint32 length)$/;"	f
md_context	lib/mdigest.h	/^} md_context;$/;"	t	typeref:struct:__anon8
mdfour	lib/mdfour.c	/^void mdfour(uchar digest[MD4_DIGEST_LEN], uchar *in, int length)$/;"	f
mdfour64	lib/mdfour.c	/^static void mdfour64(uint32 *M)$/;"	f	file:
mdfour_begin	lib/mdfour.c	/^void mdfour_begin(md_context *md)$/;"	f
mdfour_result	lib/mdfour.c	/^void mdfour_result(md_context *md, uchar digest[MD4_DIGEST_LEN])$/;"	f
mdfour_tail	lib/mdfour.c	/^static void mdfour_tail(const uchar *in, uint32 length)$/;"	f	file:
mdfour_update	lib/mdfour.c	/^void mdfour_update(md_context *md, const uchar *in, uint32 length)$/;"	f
membuf	mongoose.c	/^  const char *membuf;   \/\/ Non-NULL if file data is in memory$/;"	m	struct:file	file:
memmove	lib/compat.c	/^ void *memmove(void *dest, const void *src, size_t n)$/;"	f
memory	http.c	/^  char *memory;$/;"	m	struct:MemoryStruct	file:
memory	main.c	/^  char *memory;$/;"	m	struct:MemoryStruct	file:
mergelist	rsync.h	/^		struct filter_list_struct *mergelist;$/;"	m	union:filter_struct::__anon28	typeref:struct:filter_struct::__anon28::filter_list_struct
mergelist_cnt	exclude.c	/^	int mergelist_cnt;$/;"	m	struct:local_filter_state	file:
mergelist_cnt	exclude.c	/^static int mergelist_cnt = 0;$/;"	v	file:
mergelist_parents	exclude.c	/^static filter_rule **mergelist_parents;$/;"	v	file:
mergelist_size	exclude.c	/^static int mergelist_size = 0;$/;"	v	file:
mergelists	exclude.c	/^	filter_rule_list mergelists[1];$/;"	m	struct:local_filter_state	file:
method	zlib/deflate.h	/^    Byte  method;        \/* STORED (for zip only) or DEFLATED *\/$/;"	m	struct:internal_state
mg_callbacks	mongoose.h	/^struct mg_callbacks {$/;"	s
mg_close_connection	mongoose.c	/^void mg_close_connection(struct mg_connection *conn) {$/;"	f
mg_connect	mongoose.c	/^struct mg_connection *mg_connect(const char *host, int port, int use_ssl,$/;"	f
mg_connection	mongoose.c	/^struct mg_connection {$/;"	s	file:
mg_context	mongoose.c	/^struct mg_context {$/;"	s	file:
mg_download	mongoose.c	/^struct mg_connection *mg_download(const char *host, int port, int use_ssl,$/;"	f
mg_fclose	mongoose.c	/^static void mg_fclose(struct file *filep) {$/;"	f	file:
mg_fgetc	mongoose.c	/^static int mg_fgetc(struct file *filep, int offset) {$/;"	f	file:
mg_fgets	mongoose.c	/^static char *mg_fgets(char *buf, size_t size, struct file *filep, char **p) {$/;"	f	file:
mg_fopen	mongoose.c	/^static int mg_fopen(struct mg_connection *conn, const char *path,$/;"	f	file:
mg_get_builtin_mime_type	mongoose.c	/^const char *mg_get_builtin_mime_type(const char *path) {$/;"	f
mg_get_cookie	mongoose.c	/^int mg_get_cookie(const struct mg_connection *conn, const char *cookie_name,$/;"	f
mg_get_header	mongoose.c	/^const char *mg_get_header(const struct mg_connection *conn, const char *name) {$/;"	f
mg_get_option	mongoose.c	/^const char *mg_get_option(const struct mg_context *ctx, const char *name) {$/;"	f
mg_get_request_info	mongoose.c	/^struct mg_request_info *mg_get_request_info(struct mg_connection *conn) {$/;"	f
mg_get_valid_option_names	mongoose.c	/^const char **mg_get_valid_option_names(void) {$/;"	f
mg_get_var	mongoose.c	/^int mg_get_var(const char *data, size_t data_len, const char *name,$/;"	f
mg_header	mongoose.h	/^  struct mg_header {$/;"	s	struct:mg_request_info
mg_in	mongoose.c	/^int mg_in, mg_out;$/;"	v
mg_main	mongoose.c	/^void mg_main(int port,int mg_fd_in ,int mg_fd_out) {$/;"	f
mg_md5	mongoose.c	/^void mg_md5(char buf[33], ...) {$/;"	f
mg_mkdir	mongoose.c	/^static int mg_mkdir(const char *path, int mode) {$/;"	f	file:
mg_mkdir	mongoose.c	238;"	d	file:
mg_modify_passwords_file	mongoose.c	/^int mg_modify_passwords_file(const char *fname, const char *domain,$/;"	f
mg_out	mongoose.c	/^int mg_in, mg_out;$/;"	v
mg_printf	mongoose.c	/^int mg_printf(struct mg_connection *conn, const char *fmt, ...) {$/;"	f
mg_read	mongoose.c	/^int mg_read(struct mg_connection *conn, void *buf, size_t len) {$/;"	f
mg_remove	mongoose.c	/^static int mg_remove(const char *path) {$/;"	f	file:
mg_remove	mongoose.c	239;"	d	file:
mg_request_info	mongoose.h	/^struct mg_request_info {$/;"	s
mg_send_file	mongoose.c	/^void mg_send_file(struct mg_connection *conn, const char *path) {$/;"	f
mg_sleep	mongoose.c	130;"	d	file:
mg_sleep	mongoose.c	240;"	d	file:
mg_snprintf	mongoose.c	/^static int mg_snprintf(struct mg_connection *conn, char *buf, size_t buflen,$/;"	f	file:
mg_start	mongoose.c	/^struct mg_context *mg_start(const struct mg_callbacks *callbacks,$/;"	f
mg_start_thread	mongoose.c	/^int mg_start_thread(mg_thread_func_t f, void *p) {$/;"	f
mg_start_thread	mongoose.c	/^int mg_start_thread(mg_thread_func_t func, void *param) {$/;"	f
mg_stat	mongoose.c	/^static int mg_stat(struct mg_connection *conn, const char *path,$/;"	f	file:
mg_stop	mongoose.c	/^void mg_stop(struct mg_context *ctx) {$/;"	f
mg_strcasecmp	mongoose.c	/^static int mg_strcasecmp(const char *s1, const char *s2) {$/;"	f	file:
mg_strcasestr	mongoose.c	/^static const char *mg_strcasestr(const char *big_str, const char *small_str) {$/;"	f	file:
mg_strdup	mongoose.c	/^static char * mg_strdup(const char *str) {$/;"	f	file:
mg_strlcpy	mongoose.c	/^static void mg_strlcpy(register char *dst, register const char *src, size_t n) {$/;"	f	file:
mg_strncasecmp	mongoose.c	/^static int mg_strncasecmp(const char *s1, const char *s2, size_t len) {$/;"	f	file:
mg_strndup	mongoose.c	/^static char * mg_strndup(const char *ptr, size_t len) {$/;"	f	file:
mg_thread_func_t	mongoose.h	/^typedef void * (*mg_thread_func_t)(void *);$/;"	t
mg_upload	mongoose.c	/^int mg_upload(struct mg_connection *conn, const char *destination_dir) {$/;"	f
mg_version	mongoose.c	/^const char *mg_version(void) {$/;"	f
mg_vprintf	mongoose.c	/^int mg_vprintf(struct mg_connection *conn, const char *fmt, va_list ap) {$/;"	f
mg_vsnprintf	mongoose.c	/^static int mg_vsnprintf(struct mg_connection *conn, char *buf, size_t buflen,$/;"	f	file:
mg_write	mongoose.c	/^int mg_write(struct mg_connection *conn, const void *buf, size_t len) {$/;"	f
mime_type	mongoose.c	/^  const char *mime_type;$/;"	m	struct:__anon4	file:
min	lib/snprintf.c	/^	int min; $/;"	m	struct:pr_chunk	file:
min_size	options.c	/^OFF_T min_size = -1;$/;"	v
min_size_arg	options.c	/^static char *bwlimit_arg, *max_size_arg, *min_size_arg;$/;"	v	file:
min_star	lib/snprintf.c	/^	struct pr_chunk *min_star;$/;"	m	struct:pr_chunk	typeref:struct:pr_chunk::pr_chunk	file:
missing_args	options.c	/^int missing_args = 0; \/* 0 = FERROR_XFER, 1 = ignore, 2 = delete *\/$/;"	v
mmap	mongoose.c	/^static void *mmap(void *addr, int64_t len, int prot, int flags, int fd,$/;"	f	file:
mode	rsync.h	/^	uint16 mode;		\/* The item's type and permissions *\/$/;"	m	struct:file_struct
mode	zlib/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state
mode_t	rsync.h	/^typedef unsigned int mode_t;$/;"	t
modification_time	mongoose.c	/^  time_t modification_time;$/;"	m	struct:file	file:
modify_window	options.c	/^int modify_window = 0;$/;"	v
modify_window	t_stub.c	/^int modify_window = 0;$/;"	v
modify_window_set	options.c	/^static int modify_window_set;$/;"	v	file:
modtime	rsync.h	/^	time_t modtime;		\/* When the item was last modified *\/$/;"	m	struct:file_struct
module_dir	clientserver.c	/^char *module_dir = NULL;$/;"	v
module_dir	t_stub.c	/^char *module_dir;$/;"	v
module_dirlen	clientserver.c	/^unsigned int module_dirlen = 0;$/;"	v
module_dirlen	t_stub.c	/^int module_dirlen = 0;$/;"	v
module_id	clientserver.c	/^int module_id = -1;$/;"	v
module_id	t_stub.c	/^int module_id = -1;$/;"	v
month_names	mongoose.c	/^static const char *month_names[] = {$/;"	v	file:
motd_file	loadparm.c	/^	char *motd_file;$/;"	m	struct:__anon18	file:
msdiff	progress.c	/^static unsigned long msdiff(struct timeval *t1, struct timeval *t2)$/;"	f	file:
msg	io.c	/^	xbuf in, out, msg;$/;"	m	struct:__anon21	file:
msg	zlib/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
msgcode	rsync.h	/^enum msgcode {$/;"	g
msgdone_cnt	io.c	/^int msgdone_cnt = 0;$/;"	v
msgs2stderr	options.c	/^int msgs2stderr = 0;$/;"	v
msleep	util.c	/^int msleep(int t)$/;"	f
munge_symlinks	loadparm.c	/^	BOOL munge_symlinks;$/;"	m	struct:__anon19	file:
munge_symlinks	options.c	/^int munge_symlinks = 0;$/;"	v
munmap	mongoose.c	3984;"	d	file:
must_close	mongoose.c	/^  int must_close;             \/\/ 1 if connection must be closed$/;"	m	struct:mg_connection	file:
must_hide_file	mongoose.c	/^static int must_hide_file(struct mg_connection *conn, const char *path) {$/;"	f	file:
mutex	mongoose.c	/^  pthread_mutex_t mutex;     \/\/ Protects (max|num)_threads$/;"	m	struct:mg_context	file:
my_modf	lib/snprintf.c	/^static double my_modf(double x0, double *iptr)$/;"	f	file:
n_allocated	lib/pool_alloc.c	/^	int64			n_allocated;	\/* calls to alloc	*\/$/;"	m	struct:alloc_pool	file:
n_children	testhelp/maketree.py	/^n_children = 20$/;"	v
n_class_obj	lib/sysacls.c	/^	int n_class_obj;$/;"	m	struct:hpux_acl_types	file:
n_def_class_obj	lib/sysacls.c	/^	int n_def_class_obj;$/;"	m	struct:hpux_acl_types	file:
n_def_group	lib/sysacls.c	/^	int n_def_group;$/;"	m	struct:hpux_acl_types	file:
n_def_group_obj	lib/sysacls.c	/^	int n_def_group_obj;$/;"	m	struct:hpux_acl_types	file:
n_def_other_obj	lib/sysacls.c	/^	int n_def_other_obj;$/;"	m	struct:hpux_acl_types	file:
n_def_user	lib/sysacls.c	/^	int n_def_user;$/;"	m	struct:hpux_acl_types	file:
n_def_user_obj	lib/sysacls.c	/^	int n_def_user_obj;$/;"	m	struct:hpux_acl_types	file:
n_files	testhelp/maketree.py	/^n_files = 20$/;"	v
n_freed	lib/pool_alloc.c	/^	int64			n_freed;	\/* calls to free	*\/$/;"	m	struct:alloc_pool	file:
n_group	lib/sysacls.c	/^	int n_group;$/;"	m	struct:hpux_acl_types	file:
n_group_obj	lib/sysacls.c	/^	int n_group_obj;$/;"	m	struct:hpux_acl_types	file:
n_illegal_obj	lib/sysacls.c	/^	int n_illegal_obj;$/;"	m	struct:hpux_acl_types	file:
n_other	lib/sysacls.c	/^	int n_other;$/;"	m	struct:hpux_acl_types	file:
n_other_obj	lib/sysacls.c	/^	int n_other_obj;$/;"	m	struct:hpux_acl_types	file:
n_symlinks	testhelp/maketree.py	/^n_symlinks = 10$/;"	v
n_user	lib/sysacls.c	/^	int n_user;$/;"	m	struct:hpux_acl_types	file:
n_user_obj	lib/sysacls.c	/^	int n_user_obj;$/;"	m	struct:hpux_acl_types	file:
name	acls.c	/^	char *name;$/;"	m	struct:__anon24	file:
name	loadparm.c	/^	char *name;$/;"	m	struct:__anon19	file:
name	loadparm.c	/^	char *name;$/;"	m	struct:enum_list	file:
name	log.c	/^        char const *name;$/;"	m	struct:__anon27	file:
name	mongoose.c	/^  const char *name;   \/\/ SSL function name$/;"	m	struct:ssl_func	file:
name	mongoose.h	/^    const char *name;         \/\/ HTTP header name$/;"	m	struct:mg_request_info::mg_header
name	options.c	/^	char *name;	\/* The name of the info\/debug flag. *\/$/;"	m	struct:output_struct	file:
name	socket.c	/^  char *name;$/;"	m	struct:__anon34	file:
name	uidlist.c	/^    const char *name;$/;"	m	union:name_or_id	file:
name	xattrs.c	/^	char *datum, *name;$/;"	m	struct:__anon15	file:
name	zlib/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name_chars	testhelp/maketree.py	/^name_chars = string.digits + string.letters$/;"	v
name_cmp	params.c	/^static int name_cmp(const void *n1, const void *n2)$/;"	f	file:
name_len	xattrs.c	/^	size_t datum_len, name_len;$/;"	m	struct:__anon15	file:
name_max	zlib/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
name_or_id	uidlist.c	/^union name_or_id {$/;"	u	file:
name_type	rsync.h	/^	char name_type;$/;"	m	struct:__anon32
namebuf	xattrs.c	/^static char *namebuf = NULL;$/;"	v	file:
namebuf_len	xattrs.c	/^static size_t namebuf_len = 0;$/;"	v	file:
namelen	options.c	/^	uchar namelen;  \/* The length of the name string. *\/$/;"	m	struct:output_struct	file:
names	acls.c	/^	ida_entries names;$/;"	m	struct:rsync_acl	file:
nc	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
ncode	zlib/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state
ndist	zlib/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state
ndx	rsync.h	/^	int ndx;$/;"	m	struct:flist_ndx_item
ndx_start	rsync.h	/^	int ndx_start;  \/* the start offset for inc_recurse mode *\/$/;"	m	struct:file_list
need_messages_from_generator	options.c	/^int need_messages_from_generator = 0;$/;"	v
need_more	zlib/deflate.c	/^    need_more,      \/* block not completed, need more input or more output *\/$/;"	e	enum:__anon12	file:
need_retouch_dir_perms	generator.c	/^static int need_retouch_dir_perms;$/;"	v	file:
need_retouch_dir_times	generator.c	/^static int need_retouch_dir_times;$/;"	v	file:
need_unsorted_flist	options.c	/^int need_unsorted_flist = 0;$/;"	v
negate_output_levels	options.c	/^void negate_output_levels(void)$/;"	f
new	rsync.h	1173;"	d
new0	rsync.h	1174;"	d
new_acl_entry	lib/sysacls.h	/^struct new_acl_entry{$/;"	s
new_array	rsync.h	1175;"	d
new_array0	rsync.h	1176;"	d
new_chunk	lib/snprintf.c	/^static struct pr_chunk *new_chunk(void) {$/;"	f	file:
new_ptr	zlib/zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	file:
newest_hpos	progress.c	/^static int newest_hpos, oldest_hpos;$/;"	v	file:
next	chmod.c	/^	struct chmod_mode_struct *next;$/;"	m	struct:chmod_mode_struct	typeref:struct:chmod_mode_struct::chmod_mode_struct	file:
next	lib/pool_alloc.c	/^	struct pool_extent	*next;$/;"	m	struct:pool_extent	typeref:struct:pool_extent::pool_extent	file:
next	lib/snprintf.c	/^	struct pr_chunk *next;$/;"	m	struct:pr_chunk	typeref:struct:pr_chunk::pr_chunk	file:
next	lib/sysacls.h	/^	int next;$/;"	m	struct:SMB_ACL_T
next	popt/poptint.h	/^    int next;$/;"	m	struct:optionStackEntry
next	rsync.h	/^	struct file_list *next, *prev;$/;"	m	struct:file_list	typeref:struct:file_list::file_list
next	rsync.h	/^	struct filter_struct *next;$/;"	m	struct:filter_struct	typeref:struct:filter_struct::filter_struct
next	rsync.h	/^	struct flist_ndx_item *next;$/;"	m	struct:flist_ndx_item	typeref:struct:flist_ndx_item::flist_ndx_item
next	uidlist.c	/^	struct idlist *next;$/;"	m	struct:idlist	typeref:struct:idlist::idlist	file:
next	zlib/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state
nextArg	popt/poptint.h	/^    const char * nextArg;$/;"	m	struct:optionStackEntry
nextCharArg	popt/poptint.h	/^    const char * nextCharArg;$/;"	m	struct:optionStackEntry
nextLeftover	popt/poptint.h	/^    int nextLeftover;$/;"	m	struct:poptContext_s
next_in	zlib/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_option	mongoose.c	/^static const char *next_option(const char *list, struct vec *val,$/;"	f	file:
next_out	zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_ptr	zlib/zutil.c	/^local int next_ptr = 0;$/;"	v
nextp	lib/sysacls.h	/^	struct acl_entry_link *nextp;$/;"	m	struct:acl_entry_link	typeref:struct:acl_entry_link::acl_entry_link
nfiles	testhelp/maketree.py	/^nfiles = 10000$/;"	v
nice_length	zlib/deflate.c	/^   ush nice_length; \/* quit search above this match length *\/$/;"	m	struct:config_s	file:
nice_match	zlib/deflate.h	/^    int nice_match; \/* Stop searching when current match exceeds this *\/$/;"	m	struct:internal_state
nlen	zlib/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state
no_acl_syscall_error	lib/sysacls.c	/^int no_acl_syscall_error(int err)$/;"	f
no_batched_update	receiver.c	/^static void no_batched_update(int ndx, BOOL is_redo)$/;"	f	file:
no_detach	options.c	/^int no_detach$/;"	v
node_size	rsync.h	/^	uint32 node_size;$/;"	m	struct:hashtable
nodes	rsync.h	/^	void *nodes;$/;"	m	struct:hashtable
non_perishable_cnt	delete.c	/^int non_perishable_cnt = 0;$/;"	v
nonce	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
nonregtype	generator.c	/^enum nonregtype {$/;"	g	file:
noop_io_until_death	io.c	/^void noop_io_until_death(void)$/;"	f
nopts	popt/popthelp.c	/^    int nopts;$/;"	m	struct:poptDone_s	file:
normalize_path	util.c	/^char *normalize_path(char *path, BOOL force_newbuf, unsigned int *len_ptr)$/;"	f
nsec_times	tls.c	/^int nsec_times = 0;$/;"	v
num	lib/snprintf.c	/^	int num; \/* parameter number *\/$/;"	m	struct:pr_chunk	file:
num	lib/snprintf.c	/^	int num;$/;"	m	struct:pr_chunk_x	file:
num	rsync.h	/^	int32 num;$/;"	m	union:file_extras
num	xattrs.c	/^	int num;$/;"	m	struct:__anon15	file:
numAliases	popt/poptint.h	/^    int numAliases;$/;"	m	struct:poptContext_s
numExecs	popt/poptint.h	/^    int numExecs;$/;"	m	struct:poptContext_s
numLeftovers	popt/poptint.h	/^    int numLeftovers;$/;"	m	struct:poptContext_s
num_bytes_sent	mongoose.c	/^  int64_t num_bytes_sent;     \/\/ Total bytes sent to client$/;"	m	struct:mg_connection	file:
num_devices	rsync.h	/^	int num_files, num_dirs, num_symlinks, num_devices, num_specials;$/;"	m	struct:stats
num_dirs	rsync.h	/^	int num_files, num_dirs, num_symlinks, num_devices, num_specials;$/;"	m	struct:stats
num_entries	mongoose.c	/^  int num_entries;$/;"	m	struct:dir_scan_data	file:
num_files	rsync.h	/^	int num_files, num_dirs, num_symlinks, num_devices, num_specials;$/;"	m	struct:stats
num_headers	mongoose.h	/^  int num_headers;            \/\/ Number of HTTP headers$/;"	m	struct:mg_request_info
num_leap_years	mongoose.c	/^static int num_leap_years(int year) {$/;"	f	file:
num_listening_sockets	mongoose.c	/^  int num_listening_sockets;$/;"	m	struct:mg_context	file:
num_pids	util.c	/^static int num_pids;$/;"	v	file:
num_specials	rsync.h	/^	int num_files, num_dirs, num_symlinks, num_devices, num_specials;$/;"	m	struct:stats
num_symlinks	rsync.h	/^	int num_files, num_dirs, num_symlinks, num_devices, num_specials;$/;"	m	struct:stats
num_threads	mongoose.c	/^  volatile int num_threads;  \/\/ Number of threads$/;"	m	struct:mg_context	file:
number_separator	options.c	/^char number_separator;$/;"	v
number_separator	t_stub.c	/^char number_separator = ',';$/;"	v
number_separator	tls.c	/^char number_separator;$/;"	v
number_separator	trimslash.c	/^char number_separator = ',';$/;"	v
number_separator	wildtest.c	/^char number_separator = ',';$/;"	v
numeric_ids	loadparm.c	/^	BOOL numeric_ids;$/;"	m	struct:__anon19	file:
numeric_ids	options.c	/^int numeric_ids = 0;$/;"	v
nvars	mongoose.c	/^  int nvars; \/\/ Number of variables$/;"	m	struct:cgi_env_block	file:
obuf	token.c	/^static char *obuf;$/;"	v	file:
off_t	mongoose.c	/^typedef long off_t;$/;"	t	file:
off_t	rsync.h	/^typedef long off_t;$/;"	t
offset	rsync.h	/^	OFF_T offset;		\/**< offset in file of this chunk *\/$/;"	m	struct:sum_buf
offset	zlib/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state
ofs	progress.c	/^	OFF_T ofs;$/;"	m	struct:progress_history	file:
oldest_hpos	progress.c	/^static int newest_hpos, oldest_hpos;$/;"	v	file:
omit_dir_times	options.c	/^static int omit_dir_times = 0;$/;"	v	file:
omit_link_times	options.c	/^static int omit_link_times = 0;$/;"	v	file:
one_file_system	options.c	/^int one_file_system = 0;$/;"	v
op	zlib/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon13
opaque	zlib/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open_auth_file	mongoose.c	/^static void open_auth_file(struct mg_connection *conn, const char *path,$/;"	f	file:
open_file	mongoose.h	/^  const char * (*open_file)(const struct mg_connection *,$/;"	m	struct:mg_callbacks
open_socket_in	socket.c	/^static int *open_socket_in(int type, int port, const char *bind_addr,$/;"	f	file:
open_socket_out	socket.c	/^int open_socket_out(char *host, int port, const char *bind_addr,$/;"	f
open_socket_out_wrapped	socket.c	/^int open_socket_out_wrapped(char *host, int port, const char *bind_addr,$/;"	f
open_tmpfile	receiver.c	/^int open_tmpfile(char *fnametmp, const char *fname, struct file_struct *file)$/;"	f
opendir	mongoose.c	/^static DIR * opendir(const char *name) {$/;"	f	file:
opt_len	zlib/deflate.h	/^    ulg opt_len;        \/* bit length of current block with optimal trees *\/$/;"	m	struct:internal_state
option	popt/popt.h	/^    struct poptOption option;	\/*!< alias\/exec name(s) and description. *\/$/;"	m	struct:poptItem_s	typeref:struct:poptItem_s::poptOption
option	socket.c	/^  int option;$/;"	m	struct:__anon34	file:
optionStack	popt/poptint.h	/^    struct optionStackEntry optionStack[POPT_OPTION_DEPTH];$/;"	m	struct:poptContext_s	typeref:struct:poptContext_s::optionStackEntry
optionStackEntry	popt/poptint.h	/^struct optionStackEntry {$/;"	s
option_error	options.c	/^void option_error(void)$/;"	f
options	popt/poptint.h	/^    const struct poptOption * options;$/;"	m	struct:poptContext_s	typeref:struct:poptContext_s::poptOption
opts	popt/popthelp.c	/^    const void ** opts;$/;"	m	struct:poptDone_s	file:
opttype	socket.c	/^  int opttype;$/;"	m	struct:__anon34	file:
org_ptr	zlib/zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	file:
orig_dir	flist.c	/^static const char *pathname, *orig_dir;$/;"	v	file:
orig_umask	main.c	/^mode_t orig_umask = 0;$/;"	v
os	popt/poptint.h	/^    struct optionStackEntry * os;$/;"	m	struct:poptContext_s	typeref:struct:poptContext_s::optionStackEntry
os	zlib/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
otherHelp	popt/poptint.h	/^    const char * otherHelp;$/;"	m	struct:poptContext_s
other_obj	acls.c	/^	uchar other_obj;$/;"	m	struct:rsync_acl	file:
our_ctx	main.c	/^struct mg_context *our_ctx = NULL;$/;"	v	typeref:struct:mg_context
our_gid	main.c	/^gid_t our_gid;$/;"	v
our_uid	main.c	/^uid_t our_uid;$/;"	v
out	io.c	/^	xbuf in, out, msg;$/;"	m	struct:__anon21	file:
out_empty_len	io.c	/^	unsigned out_empty_len;$/;"	m	struct:__anon21	file:
out_fd	io.c	/^	int out_fd; \/* Both "out" and "msg" go to this fd. *\/$/;"	m	struct:__anon21	file:
out_func	zlib/zconf.h	49;"	d
out_func	zlib/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
out_of_memory	util.c	/^NORETURN void out_of_memory(const char *str)$/;"	f
outbuf_mode	options.c	/^static char *outbuf_mode;$/;"	v	file:
outgoing_chmod	loadparm.c	/^	char *outgoing_chmod;$/;"	m	struct:__anon19	file:
output_flist	flist.c	/^static void output_flist(struct file_list *flist)$/;"	f	file:
output_item_help	options.c	/^static void output_item_help(struct output_struct *words)$/;"	f	file:
output_itemized_counts	main.c	/^static void output_itemized_counts(const char *prefix, int *counts)$/;"	f	file:
output_iterations	wildtest.c	/^int output_iterations = 0;$/;"	v
output_motd	options.c	/^int output_motd = 1;$/;"	v
output_needs_newline	log.c	/^int output_needs_newline = 0;$/;"	v
output_struct	options.c	/^struct output_struct {$/;"	s	file:
output_summary	main.c	/^static void output_summary(void)$/;"	f	file:
overflow_exit	util.c	/^NORETURN void overflow_exit(const char *str)$/;"	f
ownership_differs	generator.c	/^static inline int ownership_differs(struct file_struct *file, stat_x *sxp)$/;"	f	file:
p	lib/pool_alloc.c	/^	    void *p;$/;"	m	union:align_test::__anon7	file:
p	rsync.h	/^	char *p;		\/* Window pointer			*\/$/;"	m	struct:map_struct
p_fd_offset	rsync.h	/^	OFF_T p_fd_offset;	\/* offset of cursor in fd ala lseek	*\/$/;"	m	struct:map_struct
p_len	rsync.h	/^	int32 p_len;		\/* Latest (rounded) window size		*\/$/;"	m	struct:map_struct
p_offset	rsync.h	/^	OFF_T p_offset;		\/* Window start				*\/$/;"	m	struct:map_struct
p_size	rsync.h	/^	int32 p_size;		\/* Largest window size we allocated	*\/$/;"	m	struct:map_struct
pack_smb_acl	acls.c	/^static BOOL pack_smb_acl(SMB_ACL_T *smb_acl, const rsync_acl *racl)$/;"	f	file:
parent_dirscan	exclude.c	/^static BOOL parent_dirscan = False;$/;"	v	file:
parent_dirscan_head	rsync.h	/^	filter_rule *parent_dirscan_head;$/;"	m	struct:filter_list_struct
parent_ndx	rsync.h	/^	int parent_ndx; \/* dir_flist index of parent directory *\/$/;"	m	struct:file_list
parm_class	loadparm.c	/^} parm_class;$/;"	t	typeref:enum:__anon17	file:
parm_struct	loadparm.c	/^struct parm_struct {$/;"	s	file:
parm_table	loadparm.c	/^static struct parm_struct parm_table[] =$/;"	v	typeref:struct:parm_struct	file:
parm_type	loadparm.c	/^} parm_type;$/;"	t	typeref:enum:__anon16	file:
parse_arguments	options.c	/^int parse_arguments(int *argc_p, const char ***argv_p)$/;"	f
parse_auth_header	mongoose.c	/^static int parse_auth_header(struct mg_connection *conn, char *buf,$/;"	f	file:
parse_chmod	chmod.c	/^struct chmod_mode_struct *parse_chmod(const char *modestr,$/;"	f
parse_date_string	mongoose.c	/^static time_t parse_date_string(const char *datetime) {$/;"	f	file:
parse_directives	params.c	/^static int parse_directives(char *name, char *val)$/;"	f	file:
parse_filter_file	exclude.c	/^void parse_filter_file(filter_rule_list *listp, const char *fname, const filter_rule *template, int xflags)$/;"	f
parse_filter_str	exclude.c	/^void parse_filter_str(filter_rule_list *listp, const char *rulestr,$/;"	f
parse_hostspec	options.c	/^static char *parse_hostspec(char *str, char **path_start_ptr, int *port_ptr)$/;"	f	file:
parse_http_headers	mongoose.c	/^static void parse_http_headers(char **buf, struct mg_request_info *ri) {$/;"	f	file:
parse_http_message	mongoose.c	/^static int parse_http_message(char *buf, int len, struct mg_request_info *ri) {$/;"	f	file:
parse_merge_name	exclude.c	/^static char *parse_merge_name(const char *merge_file, unsigned int *len_ptr,$/;"	f	file:
parse_name_map	uidlist.c	/^void parse_name_map(char *map, BOOL usernames)$/;"	f
parse_net	mongoose.c	/^static int parse_net(const char *spec, uint32_t *net, uint32_t *mask) {$/;"	f	file:
parse_output_words	options.c	/^static void parse_output_words(struct output_struct *words, short *levels,$/;"	f	file:
parse_port_string	mongoose.c	/^static int parse_port_string(const struct vec *vec, struct socket *so) {$/;"	f	file:
parse_range_header	mongoose.c	/^static int parse_range_header(const char *header, int64_t *a, int64_t *b) {$/;"	f	file:
parse_rule_tok	exclude.c	/^static filter_rule *parse_rule_tok(const char **rulestr_ptr,$/;"	f	file:
parse_size_arg	options.c	/^static OFF_T parse_size_arg(char **size_arg, char def_suf)$/;"	f	file:
partial_dir	options.c	/^char *partial_dir = NULL;$/;"	v
partial_dir	t_stub.c	/^char *partial_dir;$/;"	v
partial_dir_fname	util.c	/^char *partial_dir_fname(const char *fname)$/;"	f
partial_fname	util.c	/^static char partial_fname[MAXPATHLEN];$/;"	v	file:
password_file	options.c	/^char *password_file = NULL;$/;"	v
path	loadparm.c	/^	char *path;$/;"	m	struct:__anon19	file:
path_cannot_disclose_cgi	mongoose.c	/^static int path_cannot_disclose_cgi(const char *path) {$/;"	f	file:
path_failure	clientserver.c	/^static int path_failure(int f_out, const char *dir, BOOL was_chdir)$/;"	f	file:
path_info	mongoose.c	/^  char *path_info;            \/\/ PATH_INFO part of the URL$/;"	m	struct:mg_connection	file:
path_is_daemon_excluded	flist.c	/^static inline int path_is_daemon_excluded(char *path, int ignore_filename)$/;"	f	file:
pathjoin	util.c	/^size_t pathjoin(char *dest, size_t destsize, const char *p1, const char *p2)$/;"	f
pathname	flist.c	/^static const char *pathname, *orig_dir;$/;"	v	file:
pathname_len	flist.c	/^static int pathname_len;$/;"	v	file:
pattern	rsync.h	/^	char *pattern;$/;"	m	struct:filter_struct
pbm_set	popt/poptint.h	/^} pbm_set;$/;"	t	typeref:struct:__anon1
pclose	mongoose.c	137;"	d	file:
pending	zlib/deflate.h	/^    uInt   pending;      \/* nb of bytes in the pending buffer *\/$/;"	m	struct:internal_state
pending_buf	zlib/deflate.h	/^    Bytef *pending_buf;  \/* output still pending *\/$/;"	m	struct:internal_state
pending_buf_size	zlib/deflate.h	/^    ulg   pending_buf_size; \/* size of pending_buf *\/$/;"	m	struct:internal_state
pending_out	zlib/deflate.h	/^    Bytef *pending_out;  \/* next pending byte to output to the stream *\/$/;"	m	struct:internal_state
per_file_default_level	token.c	/^static int compression_level, per_file_default_level;$/;"	v	file:
perform_io	io.c	/^static char *perform_io(size_t needed, int flags)$/;"	f	file:
perms_differ	generator.c	/^static inline int perms_differ(struct file_struct *file, stat_x *sxp)$/;"	f	file:
permstring	lib/permstring.c	/^void permstring(char *perms, mode_t mode)$/;"	f
ph_list	progress.c	/^static struct progress_history ph_list[PROGRESS_HISTORY_SECS];$/;"	v	typeref:struct:progress_history	file:
ph_start	progress.c	/^static struct progress_history ph_start;$/;"	v	typeref:struct:progress_history	file:
phase	generator.c	/^static int phase = 0;$/;"	v	file:
phase	receiver.c	/^static int phase = 0, redoing = 0;$/;"	v	file:
pid	main.c	/^	pid_t pid;$/;"	m	struct:pid_status	file:
pid_file	loadparm.c	/^	char *pid_file;$/;"	m	struct:__anon18	file:
pid_stat_table	main.c	/^} pid_stat_table[MAXCHILDPROCS];$/;"	v	typeref:struct:pid_status
pid_status	main.c	/^struct pid_status {$/;"	s	file:
pid_t	mongoose.c	161;"	d	file:
pid_t	rsync.h	/^typedef int pid_t;$/;"	t
pipe	mongoose.c	132;"	d	file:
piped_child	pipe.c	/^pid_t piped_child(char **command, int *f_in, int *f_out)$/;"	f
pm_process	params.c	/^int pm_process( char *FileName,$/;"	f
pnum	lib/snprintf.c	/^	void *pnum;$/;"	m	struct:pr_chunk	file:
poll	mongoose.c	/^static int poll(struct pollfd *pfd, int n, int milliseconds) {$/;"	f	file:
pollfd	mongoose.c	/^struct pollfd {$/;"	s	file:
pool_alloc	lib/pool_alloc.c	/^pool_alloc(alloc_pool_t p, size_t len, const char *bomb_msg)$/;"	f
pool_boundary	lib/pool_alloc.c	/^pool_boundary(alloc_pool_t p, size_t len)$/;"	f
pool_boundary	rsync.h	/^	void *pool_boundary;$/;"	m	struct:file_list
pool_create	lib/pool_alloc.c	/^pool_create(size_t size, size_t quantum, void (*bomb)(const char *), int flags)$/;"	f
pool_destroy	lib/pool_alloc.c	/^pool_destroy(alloc_pool_t p)$/;"	f
pool_extent	lib/pool_alloc.c	/^struct pool_extent$/;"	s	file:
pool_free	lib/pool_alloc.c	/^pool_free(alloc_pool_t p, size_t len, void *addr)$/;"	f
pool_free_old	lib/pool_alloc.c	/^pool_free_old(alloc_pool_t p, void *addr)$/;"	f
pool_stats	lib/pool_alloc.c	/^pool_stats(alloc_pool_t p, int fd, int summarize)$/;"	f
pool_talloc	lib/pool_alloc.h	17;"	d
pool_tfree	lib/pool_alloc.h	20;"	d
pop_local_filters	exclude.c	/^void pop_local_filters(void *mem)$/;"	f
popen	mongoose.c	134;"	d	file:
poptAddAlias	popt/popt.c	/^int poptAddAlias(poptContext con, struct poptAlias alias,$/;"	f
poptAddItem	popt/popt.c	/^int poptAddItem(poptContext con, poptItem newItem, int flags)$/;"	f
poptAlias	popt/popt.h	/^struct poptAlias {$/;"	s
poptAliasOptions	popt/popthelp.c	/^struct poptOption poptAliasOptions[] = {$/;"	v	typeref:struct:poptOption
poptBadOption	popt/popt.c	/^const char * poptBadOption(poptContext con, int flags)$/;"	f
poptCallbackReason	popt/popt.h	/^enum poptCallbackReason {$/;"	g
poptCallbackType	popt/popt.h	/^typedef void (*poptCallbackType) (poptContext con, $/;"	t
poptConfigFileToString	popt/poptparse.c	/^int poptConfigFileToString(FILE *fp, char ** argstrp, \/*@unused@*\/ UNUSED(int flags))$/;"	f
poptContext	popt/popt.h	/^typedef \/*@abstract@*\/ struct poptContext_s * poptContext;$/;"	t	typeref:struct:poptContext_s
poptContext_s	popt/poptint.h	/^struct poptContext_s {$/;"	s
poptDone	popt/popthelp.c	/^} * poptDone;$/;"	t	typeref:struct:poptDone_s	file:
poptDone_s	popt/popthelp.c	/^typedef struct poptDone_s {$/;"	s	file:
poptDupArgv	popt/poptparse.c	/^int poptDupArgv(int argc, const char **argv,$/;"	f
poptFreeContext	popt/popt.c	/^poptContext poptFreeContext(poptContext con)$/;"	f
poptGetArg	popt/popt.c	/^const char * poptGetArg(poptContext con)$/;"	f
poptGetArgs	popt/popt.c	/^const char ** poptGetArgs(poptContext con)$/;"	f
poptGetContext	popt/popt.c	/^poptContext poptGetContext(const char * name, int argc, const char ** argv,$/;"	f
poptGetInvocationName	popt/popt.c	/^const char * poptGetInvocationName(poptContext con)$/;"	f
poptGetNextOpt	popt/popt.c	/^int poptGetNextOpt(poptContext con)$/;"	f
poptGetOptArg	popt/popt.c	/^const char * poptGetOptArg(poptContext con)$/;"	f
poptHelpOptions	popt/popthelp.c	/^struct poptOption poptHelpOptions[] = {$/;"	v	typeref:struct:poptOption
poptHelpOptions2	popt/popthelp.c	/^static struct poptOption poptHelpOptions2[] = {$/;"	v	typeref:struct:poptOption	file:
poptHelpOptionsI18N	popt/popthelp.c	/^struct poptOption * poptHelpOptionsI18N = poptHelpOptions2;$/;"	v	typeref:struct:poptOption
poptItem	popt/popt.h	/^} * poptItem;$/;"	t	typeref:struct:poptItem_s
poptItem_s	popt/popt.h	/^typedef struct poptItem_s {$/;"	s
poptOption	popt/popt.h	/^struct poptOption {$/;"	s
poptOption	popt/popt.h	/^typedef struct poptOption * poptOption;$/;"	t	typeref:struct:poptOption
poptParseArgvString	popt/poptparse.c	/^int poptParseArgvString(const char * s, int * argcPtr, const char *** argvPtr)$/;"	f
poptPeekArg	popt/popt.c	/^const char * poptPeekArg(poptContext con)$/;"	f
poptPrintHelp	popt/popthelp.c	/^void poptPrintHelp(poptContext con, FILE * fp, \/*@unused@*\/ UNUSED(int flags))$/;"	f
poptPrintUsage	popt/popthelp.c	/^void poptPrintUsage(poptContext con, FILE * fp, \/*@unused@*\/ UNUSED(int flags))$/;"	f
poptReadConfigFile	popt/poptconfig.c	/^int poptReadConfigFile(poptContext con, const char * fn)$/;"	f
poptReadDefaultConfig	popt/poptconfig.c	/^int poptReadDefaultConfig(poptContext con, \/*@unused@*\/ UNUSED(int useEnv))$/;"	f
poptResetContext	popt/popt.c	/^void poptResetContext(poptContext con)$/;"	f
poptSaveInt	popt/popt.c	/^int poptSaveInt(\/*@null@*\/ int * arg, int argInfo, long aLong)$/;"	f
poptSaveLong	popt/popt.c	/^int poptSaveLong(long * arg, int argInfo, long aLong)$/;"	f
poptSetExecPath	popt/popt.c	/^void poptSetExecPath(poptContext con, const char * path, int allowAbsolute)$/;"	f
poptSetOtherOptionHelp	popt/popthelp.c	/^void poptSetOtherOptionHelp(poptContext con, const char * text)$/;"	f
poptStrerror	popt/popt.c	/^const char * poptStrerror(const int error)$/;"	f
poptStripArg	popt/popt.c	/^static void poptStripArg(\/*@special@*\/ poptContext con, int which)$/;"	f	file:
poptStrippedArgv	popt/popt.c	/^int poptStrippedArgv(poptContext con, int argc, char ** argv)$/;"	f
poptStuffArgs	popt/popt.c	/^int poptStuffArgs(poptContext con, const char ** argv)$/;"	f
popt_OBJS	Makefile	/^popt_OBJS=popt\/findme.o  popt\/popt.o  popt\/poptconfig.o \\$/;"	m
pos	rsync.h	/^	size_t pos;  \/* pos = read pos in the buf *\/$/;"	m	struct:__anon31
postxfer_exec	loadparm.c	/^	char *postxfer_exec;$/;"	m	struct:__anon19	file:
pqdownheap	zlib/trees.c	/^local void pqdownheap(s, tree, k)$/;"	f
pqremove	zlib/trees.c	434;"	d	file:
pr_chunk	lib/snprintf.c	/^struct pr_chunk {$/;"	s	file:
pr_chunk_x	lib/snprintf.c	/^struct pr_chunk_x {$/;"	s	file:
preallocate_files	options.c	/^int preallocate_files = 0;$/;"	v
preallocate_files	t_stub.c	/^int preallocate_files = 0;$/;"	v
prefix	Makefile	/^prefix=\/usr\/local$/;"	m
prep_scratch	runtests.sh	/^prep_scratch() {$/;"	f
prepare_cgi_environment	mongoose.c	/^static void prepare_cgi_environment(struct mg_connection *conn,$/;"	f	file:
prepare_lua_environment	mongoose.c	/^static void prepare_lua_environment(struct mg_connection *conn, lua_State *L) {$/;"	f	file:
preserve_acls	options.c	/^int preserve_acls = 0;$/;"	v
preserve_devices	options.c	/^int preserve_devices = 0;$/;"	v
preserve_executability	options.c	/^int preserve_executability = 0;$/;"	v
preserve_executability	t_unsafe.c	/^int preserve_executability = 0;$/;"	v
preserve_executability	tls.c	/^int preserve_executability = 0;$/;"	v
preserve_executability	trimslash.c	/^int preserve_executability = 0;$/;"	v
preserve_gid	options.c	/^int preserve_gid = 0;$/;"	v
preserve_hard_links	options.c	/^int preserve_hard_links = 0;$/;"	v
preserve_links	options.c	/^int preserve_links = 0;$/;"	v
preserve_perms	options.c	/^int preserve_perms = 0;$/;"	v
preserve_perms	t_unsafe.c	/^int preserve_perms = 0;$/;"	v
preserve_perms	tls.c	/^int preserve_perms = 0;$/;"	v
preserve_perms	trimslash.c	/^int preserve_perms = 0;$/;"	v
preserve_specials	options.c	/^int preserve_specials = 0;$/;"	v
preserve_times	options.c	/^int preserve_times = 0;$/;"	v
preserve_times	t_stub.c	/^int preserve_times = 0;$/;"	v
preserve_uid	options.c	/^int preserve_uid = 0;$/;"	v
preserve_xattrs	options.c	/^int preserve_xattrs = 0;$/;"	v
preserve_xattrs	t_stub.c	/^int preserve_xattrs = 0;$/;"	v
prev	rsync.h	/^	struct file_list *next, *prev;$/;"	m	struct:file_list	typeref:struct:file_list::
prev	zlib/deflate.h	/^    Posf *prev;$/;"	m	struct:internal_state
prev_length	zlib/deflate.h	/^    uInt prev_length;$/;"	m	struct:internal_state
prev_match	zlib/deflate.h	/^    IPos prev_match;             \/* previous match *\/$/;"	m	struct:internal_state
prevp	lib/sysacls.h	/^	struct acl_entry_link *prevp;$/;"	m	struct:acl_entry_link	typeref:struct:acl_entry_link::acl_entry_link
prexfer_exec	loadparm.c	/^	char *prexfer_exec;$/;"	m	struct:__anon19	file:
print_child_argv	util.c	/^void print_child_argv(const char *prefix, char **cmd)$/;"	f
print_dav_dir_entry	mongoose.c	/^static void print_dav_dir_entry(struct de *de, void *data) {$/;"	f	file:
print_dir_entry	mongoose.c	/^static void print_dir_entry(struct de *de) {$/;"	f	file:
print_props	mongoose.c	/^static void print_props(struct mg_connection *conn, const char* uri,$/;"	f	file:
print_rsync_version	options.c	/^static void print_rsync_version(enum logcode f)$/;"	f	file:
print_summary	testhelp/maketree.py	/^    def print_summary(self):$/;"	m	class:TreeBuilder
prior_access_count	acls.c	/^static size_t prior_access_count = (size_t)-1;$/;"	v	file:
prior_default_count	acls.c	/^static size_t prior_default_count = (size_t)-1;$/;"	v	file:
prior_hlinks	hlink.c	/^static struct hashtable *prior_hlinks;$/;"	v	typeref:struct:hashtable	file:
prior_xattr_count	xattrs.c	/^static size_t prior_xattr_count = (size_t)-1;$/;"	v	file:
priority	options.c	/^	uchar priority; \/* See *_PRIORITY defines. *\/$/;"	m	struct:output_struct	file:
process_new_connection	mongoose.c	/^static void process_new_connection(struct mg_connection *conn) {$/;"	f	file:
produce_socket	mongoose.c	/^static void produce_socket(struct mg_context *ctx, const struct socket *sp) {$/;"	f	file:
progress_history	progress.c	/^struct progress_history {$/;"	s	file:
protect_args	options.c	/^int protect_args = -1;$/;"	v
protocol_version	lib/mdfour.c	/^int protocol_version = 28;$/;"	v
protocol_version	options.c	/^int protocol_version = PROTOCOL_VERSION;$/;"	v
prototypes	configure.sh	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prtcon	popt/popt.c	/^static void prtcon(const char *msg, poptContext con)$/;"	f	file:
prune_empty_dirs	options.c	/^int prune_empty_dirs = 0;$/;"	v
pthread_cond_broadcast	mongoose.c	/^static int pthread_cond_broadcast(pthread_cond_t *cv) {$/;"	f	file:
pthread_cond_destroy	mongoose.c	/^static int pthread_cond_destroy(pthread_cond_t *cv) {$/;"	f	file:
pthread_cond_init	mongoose.c	/^static int pthread_cond_init(pthread_cond_t *cv, const void *unused) {$/;"	f	file:
pthread_cond_signal	mongoose.c	/^static int pthread_cond_signal(pthread_cond_t *cv) {$/;"	f	file:
pthread_cond_t	mongoose.c	/^typedef struct {HANDLE signal, broadcast;} pthread_cond_t;$/;"	t	typeref:struct:__anon2	file:
pthread_cond_wait	mongoose.c	/^static int pthread_cond_wait(pthread_cond_t *cv, pthread_mutex_t *mutex) {$/;"	f	file:
pthread_mutex_destroy	mongoose.c	/^static int pthread_mutex_destroy(pthread_mutex_t *mutex) {$/;"	f	file:
pthread_mutex_init	mongoose.c	/^static int pthread_mutex_init(pthread_mutex_t *mutex, void *unused) {$/;"	f	file:
pthread_mutex_lock	mongoose.c	/^static int pthread_mutex_lock(pthread_mutex_t *mutex) {$/;"	f	file:
pthread_mutex_t	mongoose.c	/^typedef HANDLE pthread_mutex_t;$/;"	t	file:
pthread_mutex_unlock	mongoose.c	/^static int pthread_mutex_unlock(pthread_mutex_t *mutex) {$/;"	f	file:
pthread_self	mongoose.c	/^static pthread_t pthread_self(void) {$/;"	f	file:
pthread_t	mongoose.c	/^typedef DWORD pthread_t;$/;"	t	file:
ptr	loadparm.c	/^	void *ptr;$/;"	m	struct:parm_struct	file:
ptr	mongoose.c	/^  const char *ptr;$/;"	m	struct:vec	file:
ptr	mongoose.c	/^  void  (*ptr)(void); \/\/ Function pointer$/;"	m	struct:ssl_func	file:
ptr_table	zlib/zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	zlib/zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptrdiff_t	zlib/zutil.h	/^       typedef int ptrdiff_t;$/;"	t
pull	mongoose.c	/^static int pull(FILE *fp, struct mg_connection *conn, char *buf, int len) {$/;"	f	file:
push	mongoose.c	/^static int64_t push(FILE *fp, SOCKET sock, SSL *ssl, const char *buf,$/;"	f	file:
push_local_filters	exclude.c	/^void *push_local_filters(const char *dir, unsigned int dirlen)$/;"	f
putShortMSB	zlib/deflate.c	/^local void putShortMSB (s, b)$/;"	f
put_byte	zlib/deflate.h	268;"	d
put_dir	mongoose.c	/^static int put_dir(struct mg_connection *conn, const char *path) {$/;"	f	file:
put_file	mongoose.c	/^static void put_file(struct mg_connection *conn, const char *path) {$/;"	f	file:
put_short	zlib/trees.c	180;"	d	file:
qop	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
quantum	lib/pool_alloc.c	/^	size_t			quantum;	\/* allocation quantum	*\/$/;"	m	struct:alloc_pool	file:
query_string	mongoose.h	/^  const char *query_string;   \/\/ URL part after '?', not including '?', or NULL$/;"	m	struct:mg_request_info
queue	mongoose.c	/^  struct socket queue[20];   \/\/ Accepted sockets$/;"	m	struct:mg_context	typeref:struct:mg_context::socket	file:
quiet	options.c	/^int quiet = 0;$/;"	v
r_idle	token.c	/^static enum { r_init, r_idle, r_running, r_inflating, r_inflated } recv_state;$/;"	e	enum:__anon26	file:
r_inflated	token.c	/^static enum { r_init, r_idle, r_running, r_inflating, r_inflated } recv_state;$/;"	e	enum:__anon26	file:
r_inflating	token.c	/^static enum { r_init, r_idle, r_running, r_inflating, r_inflated } recv_state;$/;"	e	enum:__anon26	file:
r_init	token.c	/^static enum { r_init, r_idle, r_running, r_inflating, r_inflated } recv_state;$/;"	e	enum:__anon26	file:
r_running	token.c	/^static enum { r_init, r_idle, r_running, r_inflating, r_inflated } recv_state;$/;"	e	enum:__anon26	file:
racl	acls.c	/^	rsync_acl racl;$/;"	m	struct:__anon25	file:
random_name_chars	testhelp/maketree.py	/^def random_name_chars():$/;"	f
random_size	testhelp/maketree.py	/^    def random_size(self):$/;"	m	class:TreeBuilder
random_symlink_target	testhelp/maketree.py	/^    def random_symlink_target(self):$/;"	m	class:TreeBuilder
raw_data_header_pos	io.c	/^	size_t raw_data_header_pos;      \/* in the out xbuf *\/$/;"	m	struct:__anon21	file:
raw_flushing_ends_before	io.c	/^	size_t raw_flushing_ends_before; \/* in the out xbuf *\/$/;"	m	struct:__anon21	file:
raw_input_ends_before	io.c	/^	size_t raw_input_ends_before;    \/* in the in xbuf *\/$/;"	m	struct:__anon21	file:
raw_read_buf	io.c	/^static void raw_read_buf(char *buf, size_t len)$/;"	f	file:
raw_read_int	io.c	/^static int32 raw_read_int(void)$/;"	f	file:
read	mongoose.c	145;"	d	file:
read_a_msg	io.c	/^static void read_a_msg(void)$/;"	f	file:
read_arg_from_pipe	clientserver.c	/^static int read_arg_from_pipe(int fd, char *buf, int limit)$/;"	f	file:
read_args	io.c	/^void read_args(int f_in, char *mod_name, char *buf, size_t bufsiz, int rl_nulls,$/;"	f
read_batch	options.c	/^int read_batch = 0;$/;"	v
read_buf	io.c	/^void read_buf(int f, char *buf, size_t len)$/;"	f
read_buf	zlib/deflate.c	/^local int read_buf(strm, buf, size)$/;"	f
read_buf	zlib/deflate.c	54;"	d	file:
read_byte	io.c	/^uchar read_byte(int f)$/;"	f
read_del_stats	main.c	/^void read_del_stats(int f)$/;"	f
read_delay_line	generator.c	/^static int read_delay_line(char *buf, int *flags_p)$/;"	f	file:
read_final_goodbye	main.c	/^static void read_final_goodbye(int f_in, int f_out)$/;"	f	file:
read_int	io.c	/^int32 read_int(int f)$/;"	f
read_line	io.c	/^int read_line(int fd, char *buf, size_t bufsiz, int flags)$/;"	f
read_line_old	io.c	/^int read_line_old(int fd, char *buf, size_t bufsiz, int eof_ok)$/;"	f
read_longint	io.c	/^int64 read_longint(int f)$/;"	f
read_ndx	io.c	/^int32 read_ndx(int f)$/;"	f
read_ndx_and_attrs	rsync.c	/^int read_ndx_and_attrs(int f_in, int f_out, int *iflag_ptr, uchar *type_ptr,$/;"	f
read_only	clientserver.c	/^int read_only = 0;$/;"	v
read_only	loadparm.c	/^	BOOL read_only;$/;"	m	struct:__anon19	file:
read_only	t_unsafe.c	/^int read_only = 0;$/;"	v
read_only	tls.c	/^int read_only = 1;$/;"	v
read_only	trimslash.c	/^int read_only = 1;$/;"	v
read_request	mongoose.c	/^static int read_request(FILE *fp, struct mg_connection *conn,$/;"	f	file:
read_sbuf	io.c	/^void read_sbuf(int f, char *buf, size_t len)$/;"	f
read_shortint	io.c	/^unsigned short read_shortint(int f)$/;"	f
read_stream_flags	batch.c	/^void read_stream_flags(int fd)$/;"	f
read_sum_head	io.c	/^void read_sum_head(int f, struct sum_struct *sum)$/;"	f
read_varint	io.c	/^int32 read_varint(int f)$/;"	f
read_varint30	io.h	/^read_varint30(int f)$/;"	f
read_varlong	io.c	/^int64 read_varlong(int f, uchar min_bytes)$/;"	f
read_varlong30	io.h	/^read_varlong30(int f, uchar min_bytes)$/;"	f
read_vstring	io.c	/^int read_vstring(int f, char *buf, int bufsize)$/;"	f
read_websocket	mongoose.c	/^static void read_websocket(struct mg_connection *conn) {$/;"	f	file:
read_xattr	lib/sysxattrs.c	/^static ssize_t read_xattr(int attrfd, void *buf, size_t buflen)$/;"	f	file:
readdir	mongoose.c	/^static struct dirent *readdir(DIR *dir) {$/;"	f	file:
readlink_stat	flist.c	/^static int readlink_stat(const char *path, STRUCT_STAT *stp, char *linkbuf)$/;"	f	file:
realloc_array	rsync.h	1177;"	d
realloc_xbuf	ifuncs.h	/^realloc_xbuf(xbuf *xb, size_t sz)$/;"	f
receive_acl	acls.c	/^void receive_acl(int f, struct file_struct *file)$/;"	f
receive_data	receiver.c	/^static int receive_data(int f_in, char *fname_r, int fd_r, OFF_T size_r,$/;"	f	file:
receive_sums	sender.c	/^static struct sum_struct *receive_sums(int f)$/;"	f	file:
receive_xattr	xattrs.c	/^void receive_xattr(int f, struct file_struct *file)$/;"	f
receiver_symlink_times	compat.c	/^int receiver_symlink_times = 0; \/* receiver can set the time on a symlink *\/$/;"	v
recurse	options.c	/^int recurse = 0;$/;"	v
recv_acl_access	acls.c	/^static uint32 recv_acl_access(int f, uchar *name_follows_ptr)$/;"	f	file:
recv_add_id	uidlist.c	/^static struct idlist *recv_add_id(struct idlist **idlist_ptr, struct idlist *idmap,$/;"	f	file:
recv_additional_file_list	flist.c	/^void recv_additional_file_list(int f)$/;"	f
recv_deflated_token	token.c	/^static int32 recv_deflated_token(int f, char **data)$/;"	f	file:
recv_file_entry	flist.c	/^static struct file_struct *recv_file_entry(int f, struct file_list *flist, int xflags)$/;"	f	file:
recv_file_list	flist.c	/^struct file_list *recv_file_list(int f)$/;"	f
recv_files	receiver.c	/^int recv_files(int f_in, int f_out, char *local_name)$/;"	f
recv_filter_list	exclude.c	/^void recv_filter_list(int f_in)$/;"	f
recv_generator	generator.c	/^static void recv_generator(char *fname, struct file_struct *file, int ndx,$/;"	f	file:
recv_group_name	uidlist.c	/^gid_t recv_group_name(int f, gid_t gid, uint16 *flags_ptr)$/;"	f
recv_id_list	uidlist.c	/^void recv_id_list(int f, struct file_list *flist)$/;"	f
recv_ida_entries	acls.c	/^static uchar recv_ida_entries(int f, ida_entries *ent)$/;"	f	file:
recv_rsync_acl	acls.c	/^static int recv_rsync_acl(int f, item_list *racl_list, SMB_ACL_TYPE_T type, mode_t mode)$/;"	f	file:
recv_state	token.c	/^static enum { r_init, r_idle, r_running, r_inflating, r_inflated } recv_state;$/;"	v	typeref:enum:__anon26	file:
recv_token	token.c	/^int32 recv_token(int f, char **data)$/;"	f
recv_user_name	uidlist.c	/^uid_t recv_user_name(int f, uid_t uid)$/;"	f
recv_xattr_request	xattrs.c	/^int recv_xattr_request(struct file_struct *file, int f_in)$/;"	f
redirect_to_https_port	mongoose.c	/^static void redirect_to_https_port(struct mg_connection *conn, int ssl_index) {$/;"	f	file:
redo_list	io.c	/^static flist_ndx_list redo_list, hlink_list;$/;"	v	file:
redoing	receiver.c	/^static int phase = 0, redoing = 0;$/;"	v	file:
reduce_iobuf_size	io.c	/^void reduce_iobuf_size(xbuf *out, size_t new_size)$/;"	f
refuse_options	loadparm.c	/^	char *refuse_options;$/;"	m	struct:__anon19	file:
refused_archive_part	options.c	/^static int refused_delete, refused_archive_part, refused_compress;$/;"	v	file:
refused_compress	options.c	/^static int refused_delete, refused_archive_part, refused_compress;$/;"	v	file:
refused_delete	options.c	/^static int refused_delete, refused_archive_part, refused_compress;$/;"	v	file:
refused_delete_before	options.c	/^static int refused_partial, refused_progress, refused_delete_before;$/;"	v	file:
refused_delete_during	options.c	/^static int refused_delete_during;$/;"	v	file:
refused_inplace	options.c	/^static int refused_inplace, refused_no_iconv;$/;"	v	file:
refused_no_iconv	options.c	/^static int refused_inplace, refused_no_iconv;$/;"	v	file:
refused_partial	options.c	/^static int refused_partial, refused_progress, refused_delete_before;$/;"	v	file:
refused_progress	options.c	/^static int refused_partial, refused_progress, refused_delete_before;$/;"	v	file:
reg_function	mongoose.c	/^static void reg_function(struct lua_State *L, const char *name,$/;"	f	file:
reg_int	mongoose.c	/^static void reg_int(struct lua_State *L, const char *name, int val) {$/;"	f	file:
reg_string	mongoose.c	/^static void reg_string(struct lua_State *L, const char *name, const char *val) {$/;"	f	file:
relative_paths	options.c	/^int relative_paths = -1;$/;"	v
relative_paths	t_stub.c	/^int relative_paths = 0;$/;"	v
relnamecache	rsync.h	/^} relnamecache;$/;"	t	typeref:struct:__anon32
remainder	rsync.h	/^	int32 remainder;	\/**< flength % block_length *\/$/;"	m	struct:sum_struct
remember_delete	generator.c	/^static int remember_delete(struct file_struct *file, const char *fname, int flags)$/;"	f	file:
remember_initial_stats	log.c	/^void remember_initial_stats(void)$/;"	f
remote_ip	mongoose.h	/^  long remote_ip;             \/\/ Client's IP address$/;"	m	struct:mg_request_info
remote_option_alloc	options.c	/^static int remote_option_alloc = 0;$/;"	v	file:
remote_option_cnt	options.c	/^int remote_option_cnt = 0;$/;"	v
remote_options	options.c	/^const char **remote_options = NULL;$/;"	v
remote_port	mongoose.h	/^  int remote_port;            \/\/ Client's port$/;"	m	struct:mg_request_info
remote_protocol	compat.c	/^int remote_protocol = 0;$/;"	v
remote_user	mongoose.h	/^  const char *remote_user;    \/\/ Authenticated user, or NULL if no auth used$/;"	m	struct:mg_request_info
remove_double_dots_and_double_slashes	mongoose.c	/^static void remove_double_dots_and_double_slashes(char *s) {$/;"	f	file:
remove_source_files	options.c	/^int remove_source_files = 0;$/;"	v
report_filter_result	exclude.c	/^static void report_filter_result(enum logcode code, char const *name,$/;"	f	file:
request_info	mongoose.c	/^  struct mg_request_info request_info;$/;"	m	struct:mg_connection	typeref:struct:mg_connection::mg_request_info	file:
request_len	mongoose.c	/^  int request_len;            \/\/ Size of the request + headers in a buffer$/;"	m	struct:mg_connection	file:
request_method	mongoose.h	/^  const char *request_method; \/\/ "GET", "POST", etc$/;"	m	struct:mg_request_info
rerr_name	log.c	/^static char const *rerr_name(int code)$/;"	f	file:
rerr_names	log.c	/^} const rerr_names[] = {$/;"	v
reserved	zlib/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset_all_vars	loadparm.c	/^static void reset_all_vars(void)$/;"	f	file:
reset_output_levels	options.c	/^void reset_output_levels(void)$/;"	f
reset_per_request_attributes	mongoose.c	/^static void reset_per_request_attributes(struct mg_connection *conn) {$/;"	f	file:
response	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
restLeftover	popt/poptint.h	/^    int restLeftover;$/;"	m	struct:poptContext_s
restore_iobuf_size	io.c	/^void restore_iobuf_size(xbuf *out)$/;"	f
result	mongoose.c	/^  struct dirent  result;$/;"	m	struct:DIR	typeref:struct:DIR::dirent	file:
revents	mongoose.c	/^  short revents;$/;"	m	struct:pollfd	file:
reverse_lookup	loadparm.c	/^	BOOL reverse_lookup;$/;"	m	struct:__anon19	file:
rflags	rsync.h	/^	uint32 rflags;$/;"	m	struct:filter_struct
rflush	log.c	/^void rflush(enum logcode code)$/;"	f
rl_nulls	clientserver.c	/^static int rl_nulls = 0;$/;"	v	file:
robust_rename	util.c	/^int robust_rename(const char *from, const char *to, const char *partialptr,$/;"	f
robust_unlink	util.c	/^int robust_unlink(const char *fname)$/;"	f
rol	mongoose.c	3651;"	d	file:
rot	hashtable.c	130;"	d	file:
rot	hashtable.c	142;"	d	file:
rprint_progress	progress.c	/^static void rprint_progress(OFF_T ofs, OFF_T size, struct timeval *now,$/;"	f	file:
rprintf	log.c	/^void rprintf(enum logcode code, const char *format, ...)$/;"	f
rsa	mongoose.c	/^  union usa rsa;        \/\/ Remote socket address$/;"	m	struct:socket	typeref:union:socket::usa	file:
rsync_acl	acls.c	/^typedef struct rsync_acl {$/;"	s	file:
rsync_acl	acls.c	/^} rsync_acl;$/;"	t	typeref:struct:rsync_acl	file:
rsync_acl_equal	acls.c	/^static BOOL rsync_acl_equal(const rsync_acl *racl1, const rsync_acl *racl2)$/;"	f	file:
rsync_acl_equal_enough	acls.c	/^static BOOL rsync_acl_equal_enough(const rsync_acl *racl1,$/;"	f	file:
rsync_acl_fake_perms	acls.c	/^static void rsync_acl_fake_perms(rsync_acl *racl, mode_t mode)$/;"	f	file:
rsync_acl_free	acls.c	/^static void rsync_acl_free(rsync_acl *racl)$/;"	f	file:
rsync_acl_get_perms	acls.c	/^static int rsync_acl_get_perms(const rsync_acl *racl)$/;"	f	file:
rsync_acl_strip_perms	acls.c	/^static void rsync_acl_strip_perms(stat_x *sxp)$/;"	f	file:
rsync_module	clientserver.c	/^static int rsync_module(int f_in, int f_out, int i, const char *addr, const char *host)$/;"	f	file:
rsync_path	options.c	/^char *rsync_path = RSYNC_PATH;$/;"	v
rsync_port	loadparm.c	/^	int rsync_port;$/;"	m	struct:__anon18	file:
rsync_port	options.c	/^int rsync_port = 0;$/;"	v
rsync_snprintf	lib/snprintf.c	/^int rsync_snprintf(char *str,size_t count,const char *fmt,...)$/;"	f
rsync_vsnprintf	lib/snprintf.c	/^ int rsync_vsnprintf (char *str, size_t count, const char *fmt, va_list args)$/;"	f
rsync_xa	xattrs.c	/^} rsync_xa;$/;"	t	typeref:struct:__anon15	file:
rsync_xal_compare_names	xattrs.c	/^static int rsync_xal_compare_names(const void *x1, const void *x2)$/;"	f	file:
rsync_xal_free	xattrs.c	/^static void rsync_xal_free(item_list *xalp)$/;"	f	file:
rsync_xal_get	xattrs.c	/^static int rsync_xal_get(const char *fname, item_list *xalp)$/;"	f	file:
rsync_xal_l	xattrs.c	/^static item_list rsync_xal_l = EMPTY_ITEM_LIST;$/;"	v	file:
rsync_xal_set	xattrs.c	/^static int rsync_xal_set(const char *fname, item_list *xalp,$/;"	f	file:
rsync_xal_store	xattrs.c	/^static void rsync_xal_store(item_list *xalp)$/;"	f	file:
rsyserr	log.c	/^void rsyserr(enum logcode code, int errcode, const char *format, ...)$/;"	f
rule_matches	exclude.c	/^static int rule_matches(const char *fname, filter_rule *ex, int name_is_dir)$/;"	f	file:
rule_strcmp	exclude.c	/^static const uchar *rule_strcmp(const uchar *str, const char *rule, int rule_len)$/;"	f	file:
rule_template	exclude.c	/^const filter_rule *rule_template(uint32 rflags)$/;"	f
run_program	support/savetransfer.c	/^run_program(char **command)$/;"	f
run_start	token.c	/^static int32 run_start;$/;"	v	file:
run_test	wildtest.c	/^run_test(int line, bool matches,$/;"	f	file:
rwrite	log.c	/^void rwrite(enum logcode code, const char *buf, int len, int is_utf8)$/;"	f
rx_run	token.c	/^static int32 rx_run;$/;"	v	file:
rx_strm	token.c	/^static z_stream rx_strm;$/;"	v	file:
rx_token	token.c	/^static int32 rx_token;$/;"	v	file:
s2length	rsync.h	/^	int s2length;		\/**< sum2_length *\/$/;"	m	struct:sum_struct
s_BASE	flist.c	/^enum fnc_state { s_DIR, s_SLASH, s_BASE, s_TRAILING };$/;"	e	enum:fnc_state	file:
s_DIR	flist.c	/^enum fnc_state { s_DIR, s_SLASH, s_BASE, s_TRAILING };$/;"	e	enum:fnc_state	file:
s_SLASH	flist.c	/^enum fnc_state { s_DIR, s_SLASH, s_BASE, s_TRAILING };$/;"	e	enum:fnc_state	file:
s_TRAILING	flist.c	/^enum fnc_state { s_DIR, s_SLASH, s_BASE, s_TRAILING };$/;"	e	enum:fnc_state	file:
sa	mongoose.c	/^  struct sockaddr sa;$/;"	m	union:usa	typeref:struct:usa::sockaddr	file:
sacl	acls.c	/^	SMB_ACL_T sacl;$/;"	m	struct:__anon25	file:
safe_read	io.c	/^static size_t safe_read(int fd, char *buf, size_t len)$/;"	f	file:
safe_read	util.c	/^static int safe_read(int desc, char *ptr, size_t len)$/;"	f	file:
safe_symlinks	options.c	/^int safe_symlinks = 0;$/;"	v
safe_write	io.c	/^static void safe_write(int fd, const char *buf, size_t len)$/;"	f	file:
sanitize_path	util.c	/^char *sanitize_path(char *dest, const char *p, const char *rootdir, int depth,$/;"	f
sanitize_paths	util.c	/^int sanitize_paths = 0;$/;"	v
save_data_from_program	support/savetransfer.c	/^int save_data_from_program = 0;$/;"	v
scan_directory	mongoose.c	/^static int scan_directory(struct mg_connection *conn, const char *dir,$/;"	f	file:
scan_tree	zlib/trees.c	/^local void scan_tree (s, tree, max_code)$/;"	f
schar	rsync.h	503;"	d
schar	rsync.h	505;"	d
secrets_file	loadparm.c	/^	char *secrets_file;$/;"	m	struct:__anon19	file:
section_list	loadparm.c	/^static item_list section_list = EMPTY_ITEM_LIST;$/;"	v	file:
see_deflate_token	token.c	/^static void see_deflate_token(char *buf, int32 len)$/;"	f	file:
see_token	token.c	/^void see_token(char *data, int32 toklen)$/;"	f
select_timeout	io.c	/^static int select_timeout = SELECT_TIMEOUT;$/;"	v	file:
send1extra	flist.c	/^static void send1extra(int f, struct file_struct *file, struct file_list *flist)$/;"	f	file:
send_acl	acls.c	/^void send_acl(int f, stat_x *sxp)$/;"	f
send_all_trees	zlib/trees.c	/^local void send_all_trees(s, lcodes, dcodes, blcodes)$/;"	f
send_authorization_request	mongoose.c	/^static void send_authorization_request(struct mg_connection *conn) {$/;"	f	file:
send_bits	zlib/trees.c	/^local void send_bits(s, value, length)$/;"	f
send_bits	zlib/trees.c	217;"	d	file:
send_code	zlib/trees.c	167;"	d	file:
send_code	zlib/trees.c	171;"	d	file:
send_deflated_token	token.c	/^send_deflated_token(int f, int32 token, struct map_struct *buf, OFF_T offset,$/;"	f	file:
send_dir_depth	flist.c	/^int send_dir_ndx = -1, send_dir_depth = -1;$/;"	v
send_dir_ndx	flist.c	/^int send_dir_ndx = -1, send_dir_depth = -1;$/;"	v
send_directory	flist.c	/^static void send_directory(int f, struct file_list *flist, char *fbuf, int len,$/;"	f	file:
send_extra_file_list	flist.c	/^void send_extra_file_list(int f, int at_least)$/;"	f
send_file_data	mongoose.c	/^static void send_file_data(struct mg_connection *conn, struct file *filep,$/;"	f	file:
send_file_entry	flist.c	/^static void send_file_entry(int f, const char *fname, struct file_struct *file,$/;"	f	file:
send_file_list	flist.c	/^struct file_list *send_file_list(int f, int argc, char *argv[])$/;"	f
send_file_name	flist.c	/^static struct file_struct *send_file_name(int f, struct file_list *flist,$/;"	f	file:
send_files	sender.c	/^void send_files(int f_in, int f_out)$/;"	f
send_filter_list	exclude.c	/^void send_filter_list(int f_out)$/;"	f
send_http_error	mongoose.c	/^static void send_http_error(struct mg_connection *conn, int status,$/;"	f	file:
send_id_list	uidlist.c	/^void send_id_list(int f)$/;"	f
send_ida_entries	acls.c	/^static void send_ida_entries(int f, const ida_entries *idal)$/;"	f	file:
send_if_directory	flist.c	/^static void send_if_directory(int f, struct file_list *flist,$/;"	f	file:
send_implied_dirs	flist.c	/^static void send_implied_dirs(int f, struct file_list *flist, char *fname,$/;"	f	file:
send_listing	clientserver.c	/^static void send_listing(int fd)$/;"	f	file:
send_lua_error	mongoose.c	/^static void send_lua_error(struct lua_State *L, const char *fmt, ...) {$/;"	f	file:
send_msg	io.c	/^int send_msg(enum msgcode code, const char *buf, size_t len, int convert)$/;"	f
send_msg_int	io.c	/^void send_msg_int(enum msgcode code, int num)$/;"	f
send_msgs_to_gen	log.c	/^int send_msgs_to_gen = 0;$/;"	v
send_options	mongoose.c	/^static void send_options(struct mg_connection *conn) {$/;"	f	file:
send_protected_args	rsync.c	/^void send_protected_args(int fd, char *args[])$/;"	f
send_rsync_acl	acls.c	/^static void send_rsync_acl(int f, rsync_acl *racl, SMB_ACL_TYPE_T type,$/;"	f	file:
send_rules	exclude.c	/^static void send_rules(int f_out, filter_rule_list *flp)$/;"	f	file:
send_ssi_file	mongoose.c	/^static void send_ssi_file(struct mg_connection *conn, const char *path,$/;"	f	file:
send_token	token.c	/^void send_token(int f, int32 token, struct map_struct *buf, OFF_T offset,$/;"	f
send_tree	zlib/trees.c	/^local void send_tree (s, tree, max_code)$/;"	f
send_websocket_handshake	mongoose.c	/^static void send_websocket_handshake(struct mg_connection *conn) {$/;"	f	file:
send_xattr	xattrs.c	/^int send_xattr(int f, stat_x *sxp)$/;"	f
send_xattr_request	xattrs.c	/^void send_xattr_request(const char *fname, struct file_struct *file, int f_out)$/;"	f
sender_file_sum	match.c	/^char sender_file_sum[MAX_DIGEST_LEN];$/;"	v
sender_keeps_checksum	main.c	/^int sender_keeps_checksum = 0;$/;"	v
sender_symlink_iconv	compat.c	/^int sender_symlink_iconv = 0;	\/* sender should convert symlink content *\/$/;"	v
server_options	options.c	/^void server_options(char **args, int *argc_p)$/;"	f
set_acl	acls.c	/^int set_acl(const char *fname, const struct file_struct *file, stat_x *sxp, mode_t new_mode)$/;"	f
set_acl_option	mongoose.c	/^static int set_acl_option(struct mg_context *ctx) {$/;"	f	file:
set_allow_inc_recurse	compat.c	/^void set_allow_inc_recurse(void)$/;"	f
set_blocking	support/savetransfer.c	/^set_blocking(int fd)$/;"	f
set_blocking	util.c	/^void set_blocking(int fd)$/;"	f
set_boolean	loadparm.c	/^static BOOL set_boolean(BOOL *pb, char *parmvalue)$/;"	f	file:
set_close_on_exec	mongoose.c	/^static void set_close_on_exec(int fd) {$/;"	f	file:
set_close_on_exec	mongoose.c	1248;"	d	file:
set_compression	token.c	/^void set_compression(const char *fname)$/;"	f
set_current_file_index	progress.c	/^void set_current_file_index(struct file_struct *file, int ndx)$/;"	f
set_data_type	zlib/trees.c	/^local void set_data_type(s)$/;"	f
set_dparams	loadparm.c	/^BOOL set_dparams(int syntax_check_only)$/;"	f
set_env_num	clientserver.c	/^static void set_env_num(const char *var, long num)$/;"	f	file:
set_env_str	clientserver.c	/^static void set_env_str(const char *var, const char *str)$/;"	f	file:
set_file_attrs	rsync.c	/^int set_file_attrs(const char *fname, struct file_struct *file, stat_x *sxp,$/;"	f
set_filter_dir	exclude.c	/^void set_filter_dir(const char *dir, unsigned int dirlen)$/;"	f
set_gpass_option	mongoose.c	/^static int set_gpass_option(struct mg_context *ctx) {$/;"	f	file:
set_io_timeout	io.c	/^void set_io_timeout(int secs)$/;"	f
set_modtime	util.c	/^int set_modtime(const char *fname, time_t modtime, uint32 mod_nsec, mode_t mode)$/;"	f
set_non_blocking_mode	mongoose.c	/^static int set_non_blocking_mode(SOCKET sock) {$/;"	f	file:
set_nonblocking	support/savetransfer.c	/^set_nonblocking(int fd)$/;"	f
set_nonblocking	util.c	/^void set_nonblocking(int fd)$/;"	f
set_our_ctx	main.c	/^void set_our_ctx(struct mg_context * ctxx)$/;"	f
set_output_verbosity	options.c	/^static void set_output_verbosity(int level, uchar priority)$/;"	f	file:
set_ports_option	mongoose.c	/^static int set_ports_option(struct mg_context *ctx) {$/;"	f	file:
set_refuse_options	options.c	/^static void set_refuse_options(char *bp)$/;"	f	file:
set_rsync_acl	acls.c	/^static int set_rsync_acl(const char *fname, acl_duo *duo_item,$/;"	f	file:
set_sock_timeout	mongoose.c	/^static int set_sock_timeout(SOCKET sock, int milliseconds) {$/;"	f	file:
set_socket_options	socket.c	/^void set_socket_options(int fd, char *options)$/;"	f
set_ssl_option	mongoose.c	/^static int set_ssl_option(struct mg_context *ctx) {$/;"	f	file:
set_stat_xattr	xattrs.c	/^int set_stat_xattr(const char *fname, struct file_struct *file, mode_t new_mode)$/;"	f
set_throttle	mongoose.c	/^static int set_throttle(const char *spec, uint32_t remote_ip, const char *uri) {$/;"	f	file:
set_uid_option	mongoose.c	/^static int set_uid_option(struct mg_context *ctx) {$/;"	f	file:
set_xattr	xattrs.c	/^int set_xattr(const char *fname, const struct file_struct *file,$/;"	f
set_xattr_acl	xattrs.c	/^int set_xattr_acl(const char *fname, int is_access_acl, const char *buf, size_t buf_len)$/;"	f
setup_iconv	rsync.c	/^void setup_iconv(void)$/;"	f
setup_merge_file	exclude.c	/^static BOOL setup_merge_file(int mergelist_num, filter_rule *ex,$/;"	f	file:
setup_protocol	compat.c	/^void setup_protocol(int f_out,int f_in)$/;"	f
shell_cmd	options.c	/^char *shell_cmd = NULL;$/;"	v
shortName	popt/popt.h	/^    char shortName;		\/*!< may be NUL *\/$/;"	m	struct:poptAlias
shortName	popt/popt.h	/^    char shortName;		\/*!< may be NUL *\/$/;"	m	struct:poptOption
should_keep_alive	mongoose.c	/^static int should_keep_alive(const struct mg_connection *conn) {$/;"	f	file:
showHelpIntro	popt/popthelp.c	/^static int showHelpIntro(poptContext con, FILE * fp)$/;"	f	file:
showShortOptions	popt/popthelp.c	/^static int showShortOptions(const struct poptOption * opt, FILE * fp,$/;"	f	file:
show_filelist_p	flist.c	/^static int show_filelist_p(void)$/;"	f	file:
show_flist_stats	flist.c	/^void show_flist_stats(void)$/;"	f
show_malloc_stats	main.c	/^static void show_malloc_stats(void)$/;"	f	file:
show_option_defaults	popt/popthelp.c	/^static int show_option_defaults = 0;$/;"	v	file:
show_progress	progress.c	/^void show_progress(OFF_T ofs, OFF_T size)$/;"	f
shutting_down	cleanup.c	/^BOOL shutting_down = False;$/;"	v
sibling	token.c	/^	struct suffix_tree *sibling;$/;"	m	struct:suffix_tree	typeref:struct:suffix_tree::suffix_tree	file:
sig_int	rsync.c	/^RETSIGTYPE sig_int(int sig_num)$/;"	f
sigact	cleanup.c	/^static struct sigaction sigact;$/;"	v	typeref:struct:sigaction	file:
sigact	clientserver.c	/^static struct sigaction sigact;$/;"	v	typeref:struct:sigaction	file:
sigact	main.c	/^static struct sigaction sigact;$/;"	v	typeref:struct:sigaction	file:
sigact	socket.c	/^static struct sigaction sigact;$/;"	v	typeref:struct:sigaction	file:
sigact	support/savetransfer.c	/^static struct sigaction sigact;$/;"	v	typeref:struct:sigaction	file:
signal	mongoose.c	/^typedef struct {HANDLE signal, broadcast;} pthread_cond_t;$/;"	m	struct:__anon2	file:
signal	rsync.h	1057;"	d
simple_recv_token	token.c	/^static int32 simple_recv_token(int f, char **data)$/;"	f	file:
simple_send_token	token.c	/^static void simple_send_token(int f, int32 token, struct map_struct *buf,$/;"	f	file:
sin	mongoose.c	/^  struct sockaddr_in sin;$/;"	m	union:usa	typeref:struct:usa::sockaddr_in	file:
sin6	mongoose.c	/^  struct sockaddr_in6 sin6;$/;"	m	union:usa	typeref:struct:usa::sockaddr_in6	file:
singleOptionDefaultValue	popt/popthelp.c	/^singleOptionDefaultValue(size_t lineLength,$/;"	f	file:
singleOptionHelp	popt/popthelp.c	/^static void singleOptionHelp(FILE * fp, size_t maxLeftCol, $/;"	f	file:
singleOptionUsage	popt/popthelp.c	/^static size_t singleOptionUsage(FILE * fp, size_t cursor, $/;"	f	file:
singleTableHelp	popt/popthelp.c	/^static void singleTableHelp(poptContext con, FILE * fp,$/;"	f	file:
singleTableUsage	popt/popthelp.c	/^static size_t singleTableUsage(poptContext con, FILE * fp, size_t cursor,$/;"	f	file:
size	http.c	/^  size_t size;$/;"	m	struct:MemoryStruct	file:
size	lib/pool_alloc.c	/^	size_t			size;		\/* extent size		*\/$/;"	m	struct:alloc_pool	file:
size	lib/sysacls.h	/^	int size;$/;"	m	struct:SMB_ACL_T
size	main.c	/^  size_t size;$/;"	m	struct:MemoryStruct	file:
size	mongoose.c	/^  int64_t size;$/;"	m	struct:file	file:
size	rsync.h	/^	int32 size, entries;$/;"	m	struct:hashtable
size	rsync.h	/^	size_t size; \/* size = total space in buf *\/$/;"	m	struct:__anon31
size_only	options.c	/^int size_only = 0;$/;"	v
size_t	rsync.h	/^typedef unsigned int size_t;$/;"	t
skip	mongoose.c	/^static char *skip(char **buf, const char *delimiters) {$/;"	f	file:
skip_compress	options.c	/^char *skip_compress = NULL;$/;"	v
skip_hard_link	hlink.c	/^int skip_hard_link(struct file_struct *file, struct file_list **flist_p)$/;"	f
skip_quoted	mongoose.c	/^static char *skip_quoted(char **buf, const char *delimiters,$/;"	f	file:
skipped_deletes	delete.c	/^int skipped_deletes = 0;$/;"	v
slash_cnt	rsync.h	/^		int slash_cnt;$/;"	m	union:filter_struct::__anon28
sleep	mongoose.c	148;"	d	file:
sleep_for_bwlimit	io.c	/^static void sleep_for_bwlimit(int bytes_written)$/;"	f	file:
slot_cnt	util.c	/^    int slot_cnt;$/;"	m	struct:bitbag	file:
slprintf	lib/sysacls.h	35;"	d
smaller	zlib/trees.c	445;"	d	file:
snprintf	lib/snprintf.c	1237;"	d	file:
snprintf	mongoose.c	128;"	d	file:
snprintf	popt/system.h	122;"	d
snprintf	rsync.h	1026;"	d
sock	mongoose.c	/^  SOCKET sock;          \/\/ Listening socket$/;"	m	struct:socket	file:
sock_exec	socket.c	/^static int sock_exec(const char *prog)$/;"	f	file:
sock_f_in	io.c	/^int sock_f_in = -1;$/;"	v
sock_f_out	io.c	/^int sock_f_out = -1;$/;"	v
sockaddr_storage	lib/addrinfo.h	/^struct sockaddr_storage {$/;"	s
sockaddr_to_string	mongoose.c	/^static void sockaddr_to_string(char *buf, size_t len,$/;"	f	file:
socket	mongoose.c	/^struct socket {$/;"	s	file:
socket_options	loadparm.c	/^	char *socket_options;$/;"	m	struct:__anon18	file:
socket_options	socket.c	/^} socket_options[] = {$/;"	v	typeref:struct:__anon34
socketpair_tcp	socket.c	/^static int socketpair_tcp(int fd[2])$/;"	f	file:
socklen_t	mongoose.c	/^typedef int socklen_t;$/;"	t	file:
sockopts	options.c	/^char *sockopts = NULL;$/;"	v
solo_file	generator.c	/^static const char *solo_file = NULL;$/;"	v	file:
sorted	rsync.h	/^	struct file_struct **files, **sorted;$/;"	m	struct:file_list	typeref:struct:file_list::
sparse_end	fileio.c	/^int sparse_end(int f, OFF_T size)$/;"	f
sparse_files	options.c	/^int sparse_files = 0;$/;"	v
sparse_seek	fileio.c	/^static OFF_T sparse_seek = 0;$/;"	v	file:
spawn_process	mongoose.c	/^static pid_t spawn_process(struct mg_connection *conn, const char *prog,$/;"	f	file:
sq_empty	mongoose.c	/^  pthread_cond_t sq_empty;   \/\/ Signaled when socket is consumed$/;"	m	struct:mg_context	file:
sq_full	mongoose.c	/^  pthread_cond_t sq_full;    \/\/ Signaled when socket is produced$/;"	m	struct:mg_context	file:
sq_head	mongoose.c	/^  volatile int sq_head;      \/\/ Head of the socket queue$/;"	m	struct:mg_context	file:
sq_tail	mongoose.c	/^  volatile int sq_tail;      \/\/ Tail of the socket queue$/;"	m	struct:mg_context	file:
srcdir	Makefile	/^srcdir=.$/;"	m
ss_align	lib/addrinfo.h	/^	unsigned long ss_align;$/;"	m	struct:sockaddr_storage
ss_family	lib/addrinfo.h	/^	unsigned short ss_family;$/;"	m	struct:sockaddr_storage
ss_padding	lib/addrinfo.h	/^	char ss_padding[128 - sizeof (unsigned long)];$/;"	m	struct:sockaddr_storage
ssl	mongoose.c	/^  SSL *ssl;                   \/\/ SSL descriptor$/;"	m	struct:mg_connection	file:
ssl_ctx	mongoose.c	/^  SSL_CTX *ssl_ctx;               \/\/ SSL context$/;"	m	struct:mg_context	file:
ssl_error	mongoose.c	/^static const char *ssl_error(void) {$/;"	f	file:
ssl_func	mongoose.c	/^struct ssl_func {$/;"	s	file:
ssl_id_callback	mongoose.c	/^static unsigned long ssl_id_callback(void) {$/;"	f	file:
ssl_locking_callback	mongoose.c	/^static void ssl_locking_callback(int mode, int mutex_num, const char *file,$/;"	f	file:
ssl_mutexes	mongoose.c	/^static pthread_mutex_t *ssl_mutexes;$/;"	v	file:
ssl_redir	mongoose.c	/^  unsigned ssl_redir:1; \/\/ Is port supposed to redirect everything to SSL port$/;"	m	struct:socket	file:
ssl_sw	mongoose.c	/^static struct ssl_func ssl_sw[] = {$/;"	v	typeref:struct:ssl_func	file:
sslize	mongoose.c	/^static int sslize(struct mg_connection *conn, SSL_CTX *s, int (*func)(SSL *)) {$/;"	f	file:
st	rsync.h	/^    STRUCT_STAT st;$/;"	m	struct:__anon33
start	lib/pool_alloc.c	/^	void			*start;		\/* starting address	*\/$/;"	m	struct:pool_extent	file:
start	lib/snprintf.c	/^	int start;$/;"	m	struct:pr_chunk	file:
start_accept_loop	socket.c	/^void start_accept_loop(int port, int (*fn)(int, int))$/;"	f
start_client	main.c	/^static int start_client(int argc, char *argv[])$/;"	f	file:
start_daemon	clientserver.c	/^int start_daemon(int f_in, int f_out)$/;"	f
start_delete_delay_temp	generator.c	/^static int start_delete_delay_temp(void)$/;"	f	file:
start_filelist_progress	flist.c	/^static void start_filelist_progress(char *kind)$/;"	f	file:
start_filesfrom_forwarding	io.c	/^void start_filesfrom_forwarding(int fd)$/;"	f
start_flist_forward	io.c	/^void start_flist_forward(int ndx)$/;"	f
start_inband_exchange	clientserver.c	/^int start_inband_exchange(int f_in, int f_out, const char *user, int argc, char *argv[])$/;"	f
start_server	main.c	/^void start_server(int f_in, int f_out, int argc, char *argv[])$/;"	f
start_socket_client	clientserver.c	/^int start_socket_client(char *host, int remote_argc, char *remote_argv[],$/;"	f
start_write_batch	io.c	/^void start_write_batch(int fd)$/;"	f
starttime	main.c	/^static time_t starttime, endtime;$/;"	v	file:
stat_desc	zlib/deflate.h	/^    static_tree_desc *stat_desc; \/* the corresponding static tree *\/$/;"	m	struct:tree_desc_s
stat_x	rsync.h	/^} stat_x;$/;"	t	typeref:struct:__anon33
stat_xattr	tls.c	/^static int stat_xattr(const char *fname, STRUCT_STAT *fst)$/;"	f	file:
state	mongoose.c	/^    uint32_t state[5];$/;"	m	struct:__anon5	file:
state	zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
static_bl_desc	zlib/trees.c	/^local static_tree_desc  static_bl_desc =$/;"	v
static_d_desc	zlib/trees.c	/^local static_tree_desc  static_d_desc =$/;"	v
static_dtree	zlib/trees.c	/^local ct_data static_dtree[D_CODES];$/;"	v
static_dtree	zlib/trees.h	/^local const ct_data static_dtree[D_CODES] = {$/;"	v
static_l_desc	zlib/trees.c	/^local static_tree_desc  static_l_desc =$/;"	v
static_len	zlib/deflate.h	/^    ulg static_len;     \/* bit length of current block with static trees *\/$/;"	m	struct:internal_state
static_ltree	zlib/trees.c	/^local ct_data static_ltree[L_CODES+2];$/;"	v
static_ltree	zlib/trees.h	/^local const ct_data static_ltree[L_CODES+2] = {$/;"	v
static_tree	zlib/trees.c	/^    const ct_data *static_tree;  \/* static tree or NULL *\/$/;"	m	struct:static_tree_desc_s	file:
static_tree_desc	zlib/deflate.h	/^typedef struct static_tree_desc_s  static_tree_desc;$/;"	t	typeref:struct:static_tree_desc_s
static_tree_desc_s	zlib/deflate.c	/^struct static_tree_desc_s {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
static_tree_desc_s	zlib/trees.c	/^struct static_tree_desc_s {$/;"	s	file:
stats	log.c	/^struct stats stats;$/;"	v	typeref:struct:stats
stats	rsync.h	/^struct stats {$/;"	s
status	main.c	/^	int status;$/;"	m	struct:pid_status	file:
status	rsync.h	/^	int status;		\/* first errno from read errors		*\/$/;"	m	struct:map_struct
status	zlib/deflate.h	/^    int   status;        \/* as the name implies *\/$/;"	m	struct:internal_state
status_code	mongoose.c	/^  int status_code;            \/\/ HTTP reply status code, e.g. 200$/;"	m	struct:mg_connection	file:
stdout_format	options.c	/^char *stdout_format = NULL;$/;"	v
stdout_format_has_i	options.c	/^int stdout_format_has_i = 0;$/;"	v
stdout_format_has_o_or_i	options.c	/^int stdout_format_has_o_or_i = 0;$/;"	v
stop_flag	mongoose.c	/^  volatile int stop_flag;         \/\/ Should we stop event loop$/;"	m	struct:mg_context	file:
stop_flist_forward	io.c	/^void stop_flist_forward(void)$/;"	f
stop_write_batch	io.c	/^void stop_write_batch(void)$/;"	f
store_access_in_entry	acls.c	/^static int store_access_in_entry(uint32 access, SMB_ACL_ENTRY_T entry)$/;"	f	file:
str	lib/md5.c	/^    char *str, *md5;$/;"	m	struct:__anon6	file:
str_acl_type	acls.c	/^static const char *str_acl_type(SMB_ACL_TYPE_T type)$/;"	f	file:
strategy	zlib/deflate.h	/^    int strategy; \/* favor or force Huffman coding*\/$/;"	m	struct:internal_state
strchr	rsync.h	1037;"	d
strdup	lib/compat.c	/^ char *strdup(char *s)$/;"	f
strequal	loadparm.c	49;"	d	file:
strerror	mongoose.c	90;"	d	file:
strerror	popt/popt.c	/^static char * strerror(int errno)$/;"	f	file:
strerror	rsync.h	1033;"	d
strftime	mongoose.c	/^static size_t strftime(char *dst, size_t dst_size, const char *fmt,$/;"	f	file:
strict_modes	loadparm.c	/^	BOOL strict_modes;$/;"	m	struct:__anon19	file:
string_set	loadparm.c	/^static inline void string_set(char **s, const char *v)$/;"	f	file:
stringjoin	util.c	/^size_t stringjoin(char *dest, size_t destsize, ...)$/;"	f
strlcat	lib/compat.c	/^ size_t strlcat(char *d, const char *s, size_t bufsize)$/;"	f
strlcpy	lib/compat.c	/^ size_t strlcpy(char *d, const char *s, size_t bufsize)$/;"	f
strlower	util.c	/^void strlower(char *s)$/;"	f
strm	zlib/deflate.h	/^    z_streamp strm;      \/* pointer back to this zlib stream *\/$/;"	m	struct:internal_state
strpbrk	lib/compat.c	/^ char *strpbrk(const char *s, const char *accept)$/;"	f
strrchr	rsync.h	1038;"	d
strstart	zlib/deflate.h	/^    uInt strstart;               \/* start of string to insert *\/$/;"	m	struct:internal_state
strtoll	mongoose.c	108;"	d	file:
strtoll	mongoose.c	112;"	d	file:
strtoull	mongoose.c	107;"	d	file:
strtoull	mongoose.c	111;"	d	file:
strvalue	lib/snprintf.c	/^	char *strvalue;$/;"	m	struct:pr_chunk	file:
strwicmp	loadparm.c	/^static int strwicmp(char *psz1, char *psz2)$/;"	f	file:
stuffed	popt/poptint.h	/^    int stuffed;$/;"	m	struct:optionStackEntry
substitute_index_file	mongoose.c	/^static int substitute_index_file(struct mg_connection *conn, char *path,$/;"	f	file:
successful_send	sender.c	/^void successful_send(int ndx)$/;"	f
suffix_tree	token.c	/^struct suffix_tree {$/;"	s	file:
suftree	token.c	/^static struct suffix_tree *suftree;$/;"	v	typeref:struct:suffix_tree	file:
suggest_connection_header	mongoose.c	/^static const char *suggest_connection_header(const struct mg_connection *conn) {$/;"	f	file:
sum1	rsync.h	/^	uint32 sum1;	        \/**< simple checksum *\/$/;"	m	struct:sum_buf
sum2	rsync.h	/^	char sum2[SUM_LENGTH];	\/**< checksum  *\/$/;"	m	struct:sum_buf
sum_buf	rsync.h	/^struct sum_buf {$/;"	s
sum_end	checksum.c	/^int sum_end(char *sum)$/;"	f
sum_init	checksum.c	/^void sum_init(int seed)$/;"	f
sum_sizes_sqroot	generator.c	/^static void sum_sizes_sqroot(struct sum_struct *sum, int64 len)$/;"	f	file:
sum_struct	rsync.h	/^struct sum_struct {$/;"	s
sum_update	checksum.c	/^void sum_update(const char *p, int32 len)$/;"	f
sumresidue	checksum.c	/^static int32 sumresidue;$/;"	v	file:
sums	rsync.h	/^	struct sum_buf *sums;	\/**< points to info for each chunk *\/$/;"	m	struct:sum_struct	typeref:struct:sum_struct::sum_buf
symlink_timeset_failed_flags	generator.c	/^static int symlink_timeset_failed_flags;$/;"	v	file:
syncsearch	zlib/inflate.c	/^local unsigned syncsearch(have, buf, len)$/;"	f
sys_acl_create_entry	lib/sysacls.c	/^int sys_acl_create_entry( SMB_ACL_T *pacl, SMB_ACL_ENTRY_T *pentry)$/;"	f
sys_acl_create_entry	lib/sysacls.c	/^int sys_acl_create_entry(SMB_ACL_T *acl_p, SMB_ACL_ENTRY_T *entry_p)$/;"	f
sys_acl_create_entry	lib/sysacls.c	/^int sys_acl_create_entry(SMB_ACL_T *pacl, SMB_ACL_ENTRY_T *pentry)$/;"	f
sys_acl_delete_def_file	lib/sysacls.c	/^int sys_acl_delete_def_file(const char *name)$/;"	f
sys_acl_delete_def_file	lib/sysacls.c	/^int sys_acl_delete_def_file(const char *path)$/;"	f
sys_acl_free_acl	lib/sysacls.c	/^int sys_acl_free_acl(SMB_ACL_T acl_d) $/;"	f
sys_acl_free_acl	lib/sysacls.c	/^int sys_acl_free_acl(SMB_ACL_T posix_acl)$/;"	f
sys_acl_free_acl	lib/sysacls.c	/^int sys_acl_free_acl(SMB_ACL_T the_acl) $/;"	f
sys_acl_free_acl	lib/sysacls.c	/^int sys_acl_free_acl(SMB_ACL_T the_acl)$/;"	f
sys_acl_get_entry	lib/sysacls.c	/^int sys_acl_get_entry( SMB_ACL_T the_acl, int entry_id, SMB_ACL_ENTRY_T *entry_p)$/;"	f
sys_acl_get_entry	lib/sysacls.c	/^int sys_acl_get_entry( SMB_ACL_T theacl, int entry_id, SMB_ACL_ENTRY_T *entry_p)$/;"	f
sys_acl_get_entry	lib/sysacls.c	/^int sys_acl_get_entry(SMB_ACL_T acl_d, int entry_id, SMB_ACL_ENTRY_T *entry_p)$/;"	f
sys_acl_get_entry	lib/sysacls.c	/^int sys_acl_get_entry(SMB_ACL_T the_acl, int entry_id, SMB_ACL_ENTRY_T *entry_p)$/;"	f
sys_acl_get_file	lib/sysacls.c	/^SMB_ACL_T sys_acl_get_file( const char *path_p, SMB_ACL_TYPE_T type)$/;"	f
sys_acl_get_file	lib/sysacls.c	/^SMB_ACL_T sys_acl_get_file(const char *path_p, SMB_ACL_TYPE_T type)$/;"	f
sys_acl_get_info	lib/sysacls.c	/^int sys_acl_get_info(SMB_ACL_ENTRY_T entry, SMB_ACL_TAG_T *tag_type_p, uint32 *bits_p, id_t *u_g_id_p)$/;"	f
sys_acl_get_tag_type	lib/sysacls.c	/^int sys_acl_get_tag_type( SMB_ACL_ENTRY_T entry_d, SMB_ACL_TAG_T *tag_type_p)$/;"	f
sys_acl_get_tag_type	lib/sysacls.c	/^int sys_acl_get_tag_type(SMB_ACL_ENTRY_T entry_d, SMB_ACL_TAG_T *type_p)$/;"	f
sys_acl_init	lib/sysacls.c	/^SMB_ACL_T sys_acl_init( int count)$/;"	f
sys_acl_init	lib/sysacls.c	/^SMB_ACL_T sys_acl_init(int count)$/;"	f
sys_acl_set_access_bits	lib/sysacls.c	/^int sys_acl_set_access_bits(SMB_ACL_ENTRY_T entry, uint32 bits)$/;"	f
sys_acl_set_access_bits	lib/sysacls.c	/^int sys_acl_set_access_bits(SMB_ACL_ENTRY_T entry_d, uint32 bits)$/;"	f
sys_acl_set_file	lib/sysacls.c	/^int sys_acl_set_file( const char *name, SMB_ACL_TYPE_T acltype, SMB_ACL_T theacl)$/;"	f
sys_acl_set_file	lib/sysacls.c	/^int sys_acl_set_file(const char *name, SMB_ACL_TYPE_T acltype, SMB_ACL_T theacl)$/;"	f
sys_acl_set_file	lib/sysacls.c	/^int sys_acl_set_file(const char *name, SMB_ACL_TYPE_T type, SMB_ACL_T acl_d)$/;"	f
sys_acl_set_info	lib/sysacls.c	/^int sys_acl_set_info(SMB_ACL_ENTRY_T entry, SMB_ACL_TAG_T tag_type, uint32 bits, id_t u_g_id)$/;"	f
sys_acl_valid	lib/sysacls.c	/^int sys_acl_valid( SMB_ACL_T theacl )$/;"	f
sys_acl_valid	lib/sysacls.c	/^int sys_acl_valid(SMB_ACL_T acl_d)$/;"	f
sys_acl_valid	lib/sysacls.c	/^int sys_acl_valid(SMB_ACL_T theacl)$/;"	f
sys_fgetxattr	lib/sysxattrs.c	/^ssize_t sys_fgetxattr(int filedes, const char *name, void *value, size_t size)$/;"	f
sys_gettimeofday	lib/compat.c	/^int sys_gettimeofday(struct timeval *tv)$/;"	f
sys_lgetxattr	lib/sysxattrs.c	/^ssize_t sys_lgetxattr(const char *path, const char *name, void *value, size_t size)$/;"	f
sys_llistxattr	lib/sysxattrs.c	/^ssize_t sys_llistxattr(const char *path, char *list, size_t size)$/;"	f
sys_lremovexattr	lib/sysxattrs.c	/^int sys_lremovexattr(const char *path, const char *name)$/;"	f
sys_lsetxattr	lib/sysxattrs.c	/^int sys_lsetxattr(const char *path, const char *name, const void *value, size_t size)$/;"	f
syslog_facility	loadparm.c	/^	int syslog_facility;$/;"	m	struct:__anon19	file:
syslog_init	log.c	/^static void syslog_init()$/;"	f	file:
t_ITEM	flist.c	/^enum fnc_type { t_PATH, t_ITEM };$/;"	e	enum:fnc_type	file:
t_PATH	flist.c	/^enum fnc_type { t_PATH, t_ITEM };$/;"	e	enum:fnc_type	file:
table	zlib/zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v
tablesize	match.c	/^static uint32 tablesize;$/;"	v	file:
tail	rsync.h	/^	filter_rule *tail;$/;"	m	struct:filter_list_struct
tail	rsync.h	/^	struct flist_ndx_item *head, *tail;$/;"	m	struct:__anon29	typeref:struct:__anon29::
tb	testhelp/maketree.py	/^tb = TreeBuilder()$/;"	v
teardown_mergelist	exclude.c	/^static void teardown_mergelist(filter_rule *ex)$/;"	f	file:
temp_dir	loadparm.c	/^	char *temp_dir;$/;"	m	struct:__anon19	file:
temp_read	io.c	/^void temp_read(int *f_in1,int *f_out1)$/;"	f
test	rounding.c	/^struct test {$/;"	s	file:
test_varargs_macros	configure.sh	/^  test_varargs_macros ();$/;"	f
tests	lib/md5.c	/^} tests[] = {$/;"	v	typeref:struct:__anon6	file:
text	zlib/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
the_pfunc	params.c	/^static BOOL  (*the_pfunc)(char *, char *);$/;"	v	file:
the_sfunc	params.c	/^static BOOL  (*the_sfunc)(char *);$/;"	v	file:
throttle	mongoose.c	/^  int throttle;               \/\/ Throttling, bytes\/sec. <= 0 means no throttle$/;"	m	struct:mg_connection	file:
time	mongoose.c	/^static time_t time(time_t *ptime) {$/;"	f	file:
time	progress.c	/^	struct timeval time;$/;"	m	struct:progress_history	typeref:struct:progress_history::timeval	file:
time	zlib/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
time_differs	generator.c	/^static inline int time_differs(struct file_struct *file, stat_x *sxp)$/;"	f	file:
timeout	loadparm.c	/^	int timeout;$/;"	m	struct:__anon19	file:
timestring	util.c	/^char *timestring(time_t t)$/;"	f
tls_usage	tls.c	/^static void tls_usage(int ret)$/;"	f	file:
tmp_dev	flist.c	/^static int64 tmp_dev = -1, tmp_ino;$/;"	v	file:
tmp_ino	flist.c	/^static int64 tmp_dev = -1, tmp_ino;$/;"	v	file:
tmp_partialdir	options.c	/^static char tmp_partialdir[] = ".~tmp~";$/;"	v	file:
tmp_rdev	flist.c	/^static dev_t tmp_rdev;$/;"	v	file:
tmp_sum	flist.c	/^static char tmp_sum[MAX_DIGEST_LEN];$/;"	v	file:
tmpdir	options.c	/^char *tmpdir = NULL;$/;"	v
toLower	itypes.h	/^toLower(const char *ptr)$/;"	f
toUpper	itypes.h	/^toUpper(const char *ptr)$/;"	f
to_redo	rsync.h	/^	int in_progress, to_redo;$/;"	m	struct:file_list
to_unicode	mongoose.c	/^static void to_unicode(const char *path, wchar_t *wbuf, size_t wbuf_len) {$/;"	f	file:
to_wire_mode	ifuncs.h	/^to_wire_mode(mode_t mode)$/;"	f
total	zlib/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state
totalN	lib/mdigest.h	/^	uint32 totalN;          \/* bit count, lower 32 bits *\/$/;"	m	struct:__anon8
totalN2	lib/mdigest.h	/^	uint32 totalN2;         \/* bit count, upper 32 bits *\/$/;"	m	struct:__anon8
total_data_read	io.c	/^int64 total_data_read = 0;$/;"	v
total_data_written	io.c	/^int64 total_data_written = 0;$/;"	v
total_false_alarms	match.c	/^static int total_false_alarms;$/;"	v	file:
total_hash_hits	match.c	/^static int total_hash_hits;$/;"	v	file:
total_in	zlib/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_matches	match.c	/^static int total_matches;$/;"	v	file:
total_out	zlib/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
total_read	main.c	/^static int64 total_read, total_written;$/;"	v	file:
total_read	rsync.h	/^	int64 total_read;$/;"	m	struct:stats
total_size	rsync.h	/^	int64 total_size;$/;"	m	struct:stats
total_transferred_size	rsync.h	/^	int64 total_transferred_size;$/;"	m	struct:stats
total_written	main.c	/^static int64 total_read, total_written;$/;"	v	file:
total_written	rsync.h	/^	int64 total_written;$/;"	m	struct:stats
touch_up_dirs	generator.c	/^static void touch_up_dirs(struct file_list *flist, int ndx)$/;"	f	file:
tr_static_init	zlib/trees.c	/^local void tr_static_init()$/;"	f
trailing_N_elements	lib/wildmatch.c	/^static const uchar *trailing_N_elements(const uchar*const **a_ptr, int count)$/;"	f	file:
transfer_logging	loadparm.c	/^	BOOL transfer_logging;$/;"	m	struct:__anon19	file:
tree_desc	zlib/deflate.h	/^} FAR tree_desc;$/;"	t	typeref:struct:tree_desc_s
tree_desc_s	zlib/deflate.h	/^typedef struct tree_desc_s {$/;"	s
trim_trailing_slashes	syscall.c	/^void trim_trailing_slashes(char *name)$/;"	f
trim_trailing_whitespaces	mongoose.c	/^static void trim_trailing_whitespaces(char *s) {$/;"	f	file:
try_bind_local	socket.c	/^int try_bind_local(int s, int ai_family, int ai_socktype,$/;"	f
try_dests_non	generator.c	/^static int try_dests_non(struct file_struct *file, char *fname, int ndx,$/;"	f	file:
try_dests_reg	generator.c	/^static int try_dests_reg(struct file_struct *file, char *fname, int ndx,$/;"	f	file:
tweak_mode	chmod.c	/^int tweak_mode(int mode, struct chmod_mode_struct *chmod_modes)$/;"	f
tweaked_append	batch.c	/^static int tweaked_append;$/;"	v	file:
tweaked_append_verify	batch.c	/^static int tweaked_append_verify;$/;"	v	file:
tweaked_iconv	batch.c	/^static int tweaked_iconv;$/;"	v	file:
tx_strm	token.c	/^static z_stream tx_strm;$/;"	v	file:
type	lib/snprintf.c	/^	int type; \/* chunk type *\/$/;"	m	struct:pr_chunk	file:
type	loadparm.c	/^	parm_type type;$/;"	m	struct:parm_struct	file:
u	rsync.h	/^	} u;$/;"	m	struct:filter_struct	typeref:union:filter_struct::__anon28
u	uidlist.c	/^	union name_or_id u;$/;"	m	struct:idlist	typeref:union:idlist::name_or_id	file:
u4	zlib/crc32.c	/^           typedef unsigned short u4;$/;"	t	file:
u4	zlib/crc32.c	/^         typedef unsigned long u4;$/;"	t	file:
u4	zlib/crc32.c	/^       typedef unsigned int u4;$/;"	t	file:
uInt	zlib/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	zlib/zconf.h	51;"	d
uIntf	zlib/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	zlib/zconf.h	56;"	d
uLong	zlib/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	zlib/zconf.h	52;"	d
uLongf	zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	zlib/zconf.h	57;"	d
uch	zlib/zutil.h	/^typedef unsigned char  uch;$/;"	t
uchar	rsync.h	499;"	d
uchf	zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t
uid	loadparm.c	/^	char *uid;$/;"	m	struct:__anon19	file:
uid_ndx	compat.c	/^int uid_ndx, gid_ndx, acls_ndx, xattrs_ndx, unsort_ndx;$/;"	v
uid_to_user	uidlist.c	/^char *uid_to_user(uid_t uid)$/;"	f
uidlist	uidlist.c	/^static struct idlist *uidlist, *uidmap;$/;"	v	typeref:struct:idlist	file:
uidmap	uidlist.c	/^static struct idlist *uidlist, *uidmap;$/;"	v	typeref:struct:	file:
uint16	rsync.h	518;"	d
uint16	rsync.h	520;"	d
uint16_t	mongoose.c	/^typedef unsigned short  uint16_t;$/;"	t	file:
uint32	rsync.h	555;"	d
uint32	rsync.h	557;"	d
uint32_t	mongoose.c	/^typedef unsigned int  uint32_t;$/;"	t	file:
uint64_t	mongoose.c	/^typedef unsigned __int64 uint64_t;$/;"	t	file:
ulg	zlib/zutil.h	/^typedef unsigned long  ulg;$/;"	t
uncache_duo_acls	acls.c	/^static void uncache_duo_acls(item_list *duo_list, size_t start)$/;"	f	file:
uncache_tmp_acls	acls.c	/^void uncache_tmp_acls(void)$/;"	f
uncache_tmp_xattrs	xattrs.c	/^void uncache_tmp_xattrs(void)$/;"	f
unchanged_attrs	generator.c	/^int unchanged_attrs(const char *fname, struct file_struct *file, stat_x *sxp)$/;"	f
unchanged_file	generator.c	/^int unchanged_file(char *fn, struct file_struct *file, STRUCT_STAT *st)$/;"	f
uncompress	zlib/zconf.h	40;"	d
undetermined_hostname	clientserver.c	/^const char undetermined_hostname[] = "UNDETERMINED";$/;"	v
uninitialize_ssl	mongoose.c	/^static void uninitialize_ssl(struct mg_context *ctx) {$/;"	f	file:
unmake_file	flist.c	/^void unmake_file(struct file_struct *file)$/;"	f
unmap_file	fileio.c	/^int unmap_file(struct map_struct *map)$/;"	f
unpack_smb_acl	acls.c	/^static BOOL unpack_smb_acl(SMB_ACL_T sacl, rsync_acl *racl)$/;"	f	file:
unsafe_symlink	util.c	/^int unsafe_symlink(const char *dest, const char *src)$/;"	f
unsort_ndx	compat.c	/^int uid_ndx, gid_ndx, acls_ndx, xattrs_ndx, unsort_ndx;$/;"	v
unum	rsync.h	/^	uint32 unum;$/;"	m	union:file_extras
update_only	options.c	/^int update_only = 0;$/;"	v
updatewindow	zlib/inflate.c	/^local int updatewindow(strm, out)$/;"	f
updating_basis_file	match.c	/^int updating_basis_file;$/;"	v
updating_basis_or_equiv	receiver.c	/^static int updating_basis_or_equiv;$/;"	v	file:
upload	mongoose.h	/^  void (*upload)(struct mg_connection *, const char *file_name);$/;"	m	struct:mg_callbacks
uri	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
uri	mongoose.h	/^  const char *uri;            \/\/ URL-decoded URI$/;"	m	struct:mg_request_info
url_decode	mongoose.c	/^static int url_decode(const char *src, int src_len, char *dst,$/;"	f	file:
url_encode	mongoose.c	/^static void url_encode(const char *src, char *dst, size_t dst_len) {$/;"	f	file:
usa	mongoose.c	/^union usa {$/;"	u	file:
usage	options.c	/^void usage(enum logcode F)$/;"	f
usage	support/lsh.pl	/^sub usage$/;"	s
use_chroot	loadparm.c	/^	BOOL use_chroot;$/;"	m	struct:__anon19	file:
use_qsort	options.c	/^int use_qsort = 0;$/;"	v
use_safe_inc_flist	compat.c	/^int use_safe_inc_flist = 0;$/;"	v
used	rsync.h	/^	int used, malloced;$/;"	m	struct:file_list
user	mongoose.c	/^  char *user, *uri, *cnonce, *response, *qop, *nc, *nonce;$/;"	m	struct:ah	file:
user_data	mongoose.c	/^  void *user_data;                \/\/ User-defined data$/;"	m	struct:mg_context	file:
user_data	mongoose.h	/^  void *user_data;            \/\/ User data pointer passed to mg_start()$/;"	m	struct:mg_request_info
user_obj	acls.c	/^	uchar user_obj;$/;"	m	struct:rsync_acl	file:
user_to_uid	uidlist.c	/^int user_to_uid(const char *name, uid_t *uid_p, BOOL num_ok)$/;"	f
usermap	options.c	/^char *usermap = NULL;$/;"	v
usermap_via_chown	options.c	/^static BOOL usermap_via_chown, groupmap_via_chown;$/;"	v	file:
ush	zlib/zutil.h	/^typedef unsigned short ush;$/;"	t
ushf	zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t
va_copy	mongoose.c	151;"	d	file:
val	popt/popt.h	/^    int val;			\/*!< 0 means don't return, just update flag *\/$/;"	m	struct:poptOption
val	zlib/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon13
validate_backup_dir	backup.c	/^static int validate_backup_dir(void)$/;"	f	file:
value	lib/snprintf.c	/^	LLONG value;$/;"	m	struct:pr_chunk	file:
value	loadparm.c	/^	int value;$/;"	m	struct:enum_list	file:
value	mongoose.h	/^    const char *value;        \/\/ HTTP header value$/;"	m	struct:mg_request_info::mg_header
value	socket.c	/^  int value;$/;"	m	struct:__anon34	file:
vars	mongoose.c	/^  char *vars[MAX_CGI_ENVIR_VARS]; \/\/ char **envp$/;"	m	struct:cgi_env_block	file:
vasprintf	lib/snprintf.c	/^ int vasprintf(char **ptr, const char *format, va_list ap)$/;"	f
vec	mongoose.c	/^struct vec {$/;"	s	file:
verbose	options.c	/^static int verbose = 0;$/;"	v	file:
verbose	zlib/zutil.c	118;"	d	file:
voidp	zlib/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	zlib/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	zlib/zconf.h	59;"	d
voidpc	zlib/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	zlib/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpf	zlib/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	zlib/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	zlib/zconf.h	58;"	d
vsnprintf	lib/snprintf.c	1217;"	d	file:
vsnprintf	mongoose.c	129;"	d	file:
vsnprintf	rsync.h	1021;"	d
vsnprintf	zlib/zutil.h	203;"	d
w_bits	zlib/deflate.h	/^    uInt  w_bits;        \/* log2(w_size)  (8..16) *\/$/;"	m	struct:internal_state
w_mask	zlib/deflate.h	/^    uInt  w_mask;        \/* w_size - 1 *\/$/;"	m	struct:internal_state
w_size	zlib/deflate.h	/^    uInt  w_size;        \/* LZ77 window size (32K by default) *\/$/;"	m	struct:internal_state
wait_for_receiver	io.c	/^void wait_for_receiver(void)$/;"	f
wait_process	main.c	/^pid_t wait_process(pid_t pid, int *status_ptr, int flags)$/;"	f
wait_process_with_flush	main.c	/^static void wait_process_with_flush(pid_t pid, int *exit_code_ptr)$/;"	f	file:
waitpid	lib/compat.c	/^ pid_t waitpid(pid_t pid, int *statptr, int options)$/;"	f
want_all_groups	clientserver.c	/^static int want_all_groups(int f_out, uid_t uid)$/;"	f	file:
want_all_groups	clientserver.c	/^static struct passwd *want_all_groups(int f_out, uid_t uid)$/;"	f	file:
wbits	zlib/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state
we_want_redo	receiver.c	/^static int we_want_redo(int desired_ndx)$/;"	f	file:
websocket_connect	mongoose.h	/^  int (*websocket_connect)(const struct mg_connection *);$/;"	m	struct:mg_callbacks
websocket_data	mongoose.h	/^  int  (*websocket_data)(struct mg_connection *);$/;"	m	struct:mg_callbacks
websocket_ready	mongoose.h	/^  void (*websocket_ready)(struct mg_connection *);$/;"	m	struct:mg_callbacks
wf_writeBuf	fileio.c	/^static char *wf_writeBuf;$/;"	v	file:
wf_writeBufCnt	fileio.c	/^static size_t wf_writeBufCnt;$/;"	v	file:
wf_writeBufSize	fileio.c	/^static size_t wf_writeBufSize;$/;"	v	file:
what_fd_is	io.c	/^static const char *what_fd_is(int fd)$/;"	f	file:
whave	zlib/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state
where	options.c	/^	uchar where;	\/* Bits indicating where the flag is used. *\/$/;"	m	struct:output_struct	file:
whine_about_eof	io.c	/^static NORETURN void whine_about_eof(BOOL allow_kluge)$/;"	f	file:
who_am_i	rsync.c	/^const char *who_am_i(void)$/;"	f
who_am_i	t_stub.c	/^ const char *who_am_i(void)$/;"	f
whole_file	options.c	/^int whole_file = -1;$/;"	v
wildmatch	lib/wildmatch.c	/^int wildmatch(const char *pattern, const char *text)$/;"	f
wildmatch_array	lib/wildmatch.c	/^int wildmatch_array(const char *pattern, const char*const *texts, int where)$/;"	f
wildmatch_errors	wildtest.c	/^int wildmatch_errors = 0;$/;"	v
wildmatch_iteration_count	lib/wildmatch.c	/^int wildmatch_iteration_count;$/;"	v
window	zlib/deflate.h	/^    Bytef *window;$/;"	m	struct:internal_state
window	zlib/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state
window_size	zlib/deflate.h	/^    ulg window_size;$/;"	m	struct:internal_state
windows_flag	options.c	/^int windows_flag = 0;$/;"	v
word_end	token.c	/^	char letter, word_end;$/;"	m	struct:suffix_tree	file:
work	zlib/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state
worker_thread	mongoose.c	/^static void *worker_thread(void *thread_func_param) {$/;"	f	file:
wrap	zlib/deflate.h	/^    int   wrap;          \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:internal_state
wrap	zlib/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:inflate_state
write	mongoose.c	144;"	d	file:
write	zlib/inflate.h	/^    unsigned write;             \/* window write index *\/$/;"	m	struct:inflate_state
write_arg	batch.c	/^static int write_arg(int fd, char *arg)$/;"	f	file:
write_batch	options.c	/^int write_batch = 0;$/;"	v
write_batch_monitor_in	io.c	/^static int write_batch_monitor_in = -1;$/;"	v	file:
write_batch_monitor_out	io.c	/^static int write_batch_monitor_out = -1;$/;"	v	file:
write_batch_shell_file	batch.c	/^void write_batch_shell_file(int argc, char *argv[], int file_arg_cnt)$/;"	f
write_buf	io.c	/^void write_buf(int f, const char *buf, size_t len)$/;"	f
write_byte	io.c	/^void write_byte(int f, uchar c)$/;"	f
write_del_stats	main.c	/^void write_del_stats(int f)$/;"	f
write_file	fileio.c	/^int write_file(int f, char *buf, int len)$/;"	f
write_filter_rules	batch.c	/^static void write_filter_rules(int fd)$/;"	f	file:
write_int	io.c	/^void write_int(int f, int32 x)$/;"	f
write_longint	io.c	/^void write_longint(int f, int64 x)$/;"	f
write_ndx	io.c	/^void write_ndx(int f, int32 ndx)$/;"	f
write_ndx_and_attrs	sender.c	/^static void write_ndx_and_attrs(int f_out, int ndx, int iflags,$/;"	f	file:
write_only	loadparm.c	/^	BOOL write_only;$/;"	m	struct:__anon19	file:
write_sbuf	io.c	/^void write_sbuf(int f, const char *buf)$/;"	f
write_shortint	io.c	/^void write_shortint(int f, unsigned short x)$/;"	f
write_sparse	fileio.c	/^static int write_sparse(int f, char *buf, int len)$/;"	f	file:
write_stream_flags	batch.c	/^void write_stream_flags(int fd)$/;"	f
write_sum_head	io.c	/^void write_sum_head(int f, struct sum_struct *sum)$/;"	f
write_table	zlib/crc32.c	/^local void write_table(out, table)$/;"	f
write_varint	io.c	/^void write_varint(int f, int32 x)$/;"	f
write_varint30	io.h	/^write_varint30(int f, int32 x)$/;"	f
write_varlong	io.c	/^void write_varlong(int f, int64 x, uchar min_bytes)$/;"	f
write_varlong30	io.h	/^write_varlong30(int f, int64 x, uchar min_bytes)$/;"	f
write_vstring	io.c	/^void write_vstring(int f, const char *str, int len)$/;"	f
wsize	zlib/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state
x_fstat	rsync.h	1008;"	d
x_fstat	xattrs.c	/^int x_fstat(int fd, STRUCT_STAT *fst, STRUCT_STAT *xst)$/;"	f
x_lstat	rsync.h	1007;"	d
x_lstat	xattrs.c	/^int x_lstat(const char *fname, STRUCT_STAT *fst, STRUCT_STAT *xst)$/;"	f
x_stat	rsync.h	1006;"	d
x_stat	xattrs.c	/^int x_stat(const char *fname, STRUCT_STAT *fst, STRUCT_STAT *xst)$/;"	f
xattr	rsync.h	/^    item_list *xattr;$/;"	m	struct:__anon33
xattr_diff	xattrs.c	/^int xattr_diff(struct file_struct *file, stat_x *sxp, int find_all)$/;"	f
xattrs_differ	generator.c	/^static inline int xattrs_differ(const char *fname, struct file_struct *file, stat_x *sxp)$/;"	f	file:
xattrs_ndx	compat.c	/^int uid_ndx, gid_ndx, acls_ndx, xattrs_ndx, unsort_ndx;$/;"	v
xbuf	rsync.h	/^} xbuf;$/;"	t	typeref:struct:__anon31
xfer_dirs	options.c	/^int xfer_dirs = -1;$/;"	v
xferred_files	rsync.h	/^	int xferred_files;$/;"	m	struct:stats
xflags	zlib/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
xstrdup	popt/system.h	/^xstrdup(const char *s)$/;"	f
xstrdup	popt/system.h	114;"	d
zError	zlib/zconf.h	44;"	d
zError	zlib/zutil.c	/^const char * ZEXPORT zError(err)$/;"	f
z_errmsg	zlib/zutil.c	/^const char * const z_errmsg[10] = {$/;"	v
z_error	zlib/zutil.c	/^void z_error (m)$/;"	f
z_off_t	zlib/zconf.h	301;"	d
z_stream	zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	zlib/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	zlib/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
z_verbose	zlib/zutil.c	/^int z_verbose = verbose;$/;"	v
zalloc	zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zcalloc	zlib/zutil.c	/^voidpf zcalloc (opaque, items, size)$/;"	f
zcalloc	zlib/zutil.c	/^voidpf zcalloc (voidpf opaque, unsigned items, unsigned size)$/;"	f
zcfree	zlib/zutil.c	/^void  zcfree (opaque, ptr)$/;"	f
zcfree	zlib/zutil.c	/^void  zcfree (voidpf opaque, voidpf ptr)$/;"	f
zfree	zlib/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlibCompileFlags	zlib/zutil.c	/^uLong ZEXPORT zlibCompileFlags()$/;"	f
zlibVersion	zlib/zutil.c	/^const char * ZEXPORT zlibVersion()$/;"	f
zlib_OBJS	Makefile	/^zlib_OBJS=zlib\/deflate.o zlib\/inffast.o zlib\/inflate.o zlib\/inftrees.o \\$/;"	m
zlib_version	zlib/zlib.h	208;"	d
zmemcmp	zlib/zutil.c	/^int zmemcmp(s1, s2, len)$/;"	f
zmemcmp	zlib/zutil.h	230;"	d
zmemcmp	zlib/zutil.h	234;"	d
zmemcpy	zlib/zutil.c	/^void zmemcpy(dest, source, len)$/;"	f
zmemcpy	zlib/zutil.h	229;"	d
zmemcpy	zlib/zutil.h	233;"	d
zmemzero	zlib/zutil.c	/^void zmemzero(dest, len)$/;"	f
zmemzero	zlib/zutil.h	231;"	d
zmemzero	zlib/zutil.h	235;"	d
